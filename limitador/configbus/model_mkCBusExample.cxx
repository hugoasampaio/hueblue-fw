/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Fri Apr 14 15:31:52 -03 2023
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkCBusExample.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkCBusExample::MODEL_mkCBusExample()
{
  mkCBusExample_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkCBusExample()
{
  MODEL_mkCBusExample *model = new MODEL_mkCBusExample();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkCBusExample &INST_top = *((MOD_mkCBusExample *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_the_counter_device_ifc_isZero____d6;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_display_value;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_display_value;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_init_counter;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_init_counter;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_decrement;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_decrement;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_done;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_done;
	 INST_top.INST_the_counter.METH_RDY_device_ifc_decrement();
	 DEF_INST_top_DEF_the_counter_device_ifc_isZero____d6 = INST_top.INST_the_counter.METH_device_ifc_isZero();
	 DEF_INST_top_DEF_CAN_FIRE_RL_decrement = !DEF_INST_top_DEF_the_counter_device_ifc_isZero____d6;
	 DEF_INST_top_DEF_WILL_FIRE_RL_decrement = DEF_INST_top_DEF_CAN_FIRE_RL_decrement;
	 DEF_INST_top_DEF_CAN_FIRE_RL_display_value = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_display_value = DEF_INST_top_DEF_CAN_FIRE_RL_display_value;
	 DEF_INST_top_DEF_CAN_FIRE_RL_done = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_done = DEF_INST_top_DEF_CAN_FIRE_RL_done;
	 INST_top.INST_the_counter.METH_RDY_device_ifc_load();
	 DEF_INST_top_DEF_CAN_FIRE_RL_init_counter = DEF_INST_top_DEF_the_counter_device_ifc_isZero____d6;
	 DEF_INST_top_DEF_WILL_FIRE_RL_init_counter = DEF_INST_top_DEF_CAN_FIRE_RL_init_counter;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_display_value)
	   INST_top.RL_display_value();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_done)
	   INST_top.RL_done();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_decrement)
	   INST_top.RL_decrement();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_init_counter)
	   INST_top.RL_init_counter();
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_the_counter.INST_counter.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkCBusExample::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkCBusExample_instance = new MOD_mkCBusExample(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkCBusExample_instance->INST_the_counter.set_clk_0)("CLK");
  (mkCBusExample_instance->set_clk_0)("CLK");
}
void MODEL_mkCBusExample::destroy_model()
{
  delete mkCBusExample_instance;
  mkCBusExample_instance = NULL;
}
void MODEL_mkCBusExample::reset_model(bool asserted)
{
  (mkCBusExample_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkCBusExample::get_instance()
{
  return mkCBusExample_instance;
}

/* Fill in version numbers */
void MODEL_mkCBusExample::get_version(char const **name, char const **build)
{
  *name = "2023.01-6-g034050db";
  *build = "034050db";
}

/* Get the model creation time */
time_t MODEL_mkCBusExample::get_creation_time()
{
  
  /* Fri Apr 14 18:31:52 UTC 2023 */
  return 1681497112llu;
}

/* State dumping function */
void MODEL_mkCBusExample::dump_state()
{
  (mkCBusExample_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkCBusExample & mkCBusExample_backing(tSimStateHdl simHdl)
{
  static MOD_mkCBusExample *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkCBusExample(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkCBusExample::dump_VCD_defs()
{
  (mkCBusExample_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkCBusExample::dump_VCD(tVCDDumpType dt)
{
  (mkCBusExample_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkCBusExample_backing(sim_hdl));
}
