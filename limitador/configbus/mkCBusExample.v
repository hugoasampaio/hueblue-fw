//
// Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
//
// On Fri Apr 14 15:27:30 -03 2023
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCBusExample(CLK,
		     RST_N);
  input  CLK;
  input  RST_N;

  // ports of submodule the_counter
  wire [32 : 0] the_counter$cbus_ifc_read;
  wire [31 : 0] the_counter$cbus_ifc_write_data;
  wire [9 : 0] the_counter$cbus_ifc_read_addr,
	       the_counter$cbus_ifc_write_addr;
  wire [7 : 0] the_counter$device_ifc_load_newval;
  wire the_counter$EN_cbus_ifc_write,
       the_counter$EN_device_ifc_decrement,
       the_counter$EN_device_ifc_load,
       the_counter$device_ifc_isZero;

  // declarations used by system tasks
  // synopsys translate_off
  reg [63 : 0] v__h105;
  // synopsys translate_on

  // remaining internal signals
  wire [31 : 0] read_value__h215;

  // submodule the_counter
  mkCounterSynth the_counter(.CLK(CLK),
			     .RST_N(RST_N),
			     .cbus_ifc_read_addr(the_counter$cbus_ifc_read_addr),
			     .cbus_ifc_write_addr(the_counter$cbus_ifc_write_addr),
			     .cbus_ifc_write_data(the_counter$cbus_ifc_write_data),
			     .device_ifc_load_newval(the_counter$device_ifc_load_newval),
			     .EN_cbus_ifc_write(the_counter$EN_cbus_ifc_write),
			     .EN_device_ifc_decrement(the_counter$EN_device_ifc_decrement),
			     .EN_device_ifc_load(the_counter$EN_device_ifc_load),
			     .RDY_cbus_ifc_write(),
			     .cbus_ifc_read(the_counter$cbus_ifc_read),
			     .RDY_cbus_ifc_read(),
			     .device_ifc_isZero(the_counter$device_ifc_isZero),
			     .RDY_device_ifc_isZero(),
			     .RDY_device_ifc_decrement(),
			     .RDY_device_ifc_load());

  // submodule the_counter
  assign the_counter$cbus_ifc_read_addr = 10'd13 ;
  assign the_counter$cbus_ifc_write_addr = 10'h0 ;
  assign the_counter$cbus_ifc_write_data = 32'h0 ;
  assign the_counter$device_ifc_load_newval = 8'd4 ;
  assign the_counter$EN_cbus_ifc_write = 1'b0 ;
  assign the_counter$EN_device_ifc_decrement =
	     !the_counter$device_ifc_isZero ;
  assign the_counter$EN_device_ifc_load = the_counter$device_ifc_isZero ;

  // remaining internal signals
  assign read_value__h215 =
	     the_counter$cbus_ifc_read[32] ?
	       the_counter$cbus_ifc_read[31:0] :
	       32'd0 ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      begin
        v__h105 = $time;
	#0;
      end
    if (RST_N != `BSV_RESET_VALUE)
      $display("Current Value %2d at time:", read_value__h215, v__h105);
    if (RST_N != `BSV_RESET_VALUE)
      if (read_value__h215 == 32'd1) $finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mkCBusExample

