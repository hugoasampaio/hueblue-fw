/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Fri Apr 28 15:25:38 -03 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkFIRfilter.h"


/* String declarations */
static std::string const __str_literal_1("Error: \"FIRfilter.bsv\", line 25, column 16: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_init_l25c9] and\n  [RL_conv_action_l25c38, RL_conv_action_f_update_l25c9,\n  RL_conv_action_l29c16, RL_conv_action_l30c18, RL_conv_action_f_init_l31c9,\n  RL_conv_action_l32c16, RL_conv_action_l33c16, RL_conv_action_f_update_l31c9,\n  RL_conv_action_l35c12, RL_conv_action_l36c13] ) fired in the same clock\n  cycle.\n",
					 427u);
static std::string const __str_literal_3("Error: \"FIRfilter.bsv\", line 25, column 31: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_update_l25c9]\n  and [RL_conv_action_l29c16, RL_conv_action_l30c18,\n  RL_conv_action_f_init_l31c9, RL_conv_action_l32c16, RL_conv_action_l33c16,\n  RL_conv_action_f_update_l31c9, RL_conv_action_l35c12, RL_conv_action_l36c13]\n  ) fired in the same clock cycle.\n",
					 373u);
static std::string const __str_literal_2("Error: \"FIRfilter.bsv\", line 25, column 38: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l25c38] and\n  [RL_conv_action_f_update_l25c9, RL_conv_action_l29c16,\n  RL_conv_action_l30c18, RL_conv_action_f_init_l31c9, RL_conv_action_l32c16,\n  RL_conv_action_l33c16, RL_conv_action_f_update_l31c9, RL_conv_action_l35c12,\n  RL_conv_action_l36c13] ) fired in the same clock cycle.\n",
					 396u);
static std::string const __str_literal_4("Error: \"FIRfilter.bsv\", line 29, column 16: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l29c16] and\n  [RL_conv_action_l30c18, RL_conv_action_f_init_l31c9, RL_conv_action_l32c16,\n  RL_conv_action_l33c16, RL_conv_action_f_update_l31c9, RL_conv_action_l35c12,\n  RL_conv_action_l36c13] ) fired in the same clock cycle.\n",
					 340u);
static std::string const __str_literal_5("Error: \"FIRfilter.bsv\", line 30, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l30c18] and\n  [RL_conv_action_f_init_l31c9, RL_conv_action_l32c16, RL_conv_action_l33c16,\n  RL_conv_action_f_update_l31c9, RL_conv_action_l35c12, RL_conv_action_l36c13]\n  ) fired in the same clock cycle.\n",
					 317u);
static std::string const __str_literal_6("Error: \"FIRfilter.bsv\", line 31, column 15: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_init_l31c9] and\n  [RL_conv_action_l32c16, RL_conv_action_l33c16,\n  RL_conv_action_f_update_l31c9, RL_conv_action_l35c12, RL_conv_action_l36c13]\n  ) fired in the same clock cycle.\n",
					 294u);
static std::string const __str_literal_9("Error: \"FIRfilter.bsv\", line 31, column 30: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_update_l31c9]\n  and [RL_conv_action_l35c12, RL_conv_action_l36c13] ) fired in the same clock\n  cycle.\n",
					 217u);
static std::string const __str_literal_7("Error: \"FIRfilter.bsv\", line 32, column 16: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l32c16] and\n  [RL_conv_action_l33c16, RL_conv_action_f_update_l31c9,\n  RL_conv_action_l35c12, RL_conv_action_l36c13] ) fired in the same clock\n  cycle.\n",
					 265u);
static std::string const __str_literal_8("Error: \"FIRfilter.bsv\", line 33, column 16: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l33c16] and\n  [RL_conv_action_f_update_l31c9, RL_conv_action_l35c12,\n  RL_conv_action_l36c13] ) fired in the same clock cycle.\n",
					 240u);
static std::string const __str_literal_10("Error: \"FIRfilter.bsv\", line 35, column 12: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l35c12] and\n  [RL_conv_action_l36c13] ) fired in the same clock cycle.\n",
					  184u);


/* Constructor */
MOD_mkFIRfilter::MOD_mkFIRfilter(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_acc(simHdl, "acc", this, 26u, 2u, (tUInt8)1u, 0u),
    INST_conv_abort(simHdl, "conv_abort", this, 1u, (tUInt8)0u),
    INST_conv_start_reg(simHdl, "conv_start_reg", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_start_reg_1(simHdl, "conv_start_reg_1", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_start_reg_2(simHdl, "conv_start_reg_2", this, 1u, (tUInt8)0u),
    INST_conv_start_wire(simHdl, "conv_start_wire", this, 1u, (tUInt8)0u),
    INST_conv_state_can_overlap(simHdl, "conv_state_can_overlap", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_conv_state_fired(simHdl, "conv_state_fired", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_state_fired_1(simHdl, "conv_state_fired_1", this, 1u, (tUInt8)0u),
    INST_conv_state_mkFSMstate(simHdl, "conv_state_mkFSMstate", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_state_overlap_pw(simHdl, "conv_state_overlap_pw", this, 0u),
    INST_conv_state_set_pw(simHdl, "conv_state_set_pw", this, 0u),
    INST_n(simHdl, "n", this, 7u, (tUInt8)0u, (tUInt8)0u),
    INST_newSample(simHdl, "newSample", this, 26u, 2u, (tUInt8)1u, 0u),
    INST_samples_0(simHdl, "samples_0", this, 26u, 0u, (tUInt8)0u),
    INST_samples_1(simHdl, "samples_1", this, 26u, 0u, (tUInt8)0u),
    INST_samples_10(simHdl, "samples_10", this, 26u, 0u, (tUInt8)0u),
    INST_samples_11(simHdl, "samples_11", this, 26u, 0u, (tUInt8)0u),
    INST_samples_12(simHdl, "samples_12", this, 26u, 0u, (tUInt8)0u),
    INST_samples_13(simHdl, "samples_13", this, 26u, 0u, (tUInt8)0u),
    INST_samples_14(simHdl, "samples_14", this, 26u, 0u, (tUInt8)0u),
    INST_samples_15(simHdl, "samples_15", this, 26u, 0u, (tUInt8)0u),
    INST_samples_16(simHdl, "samples_16", this, 26u, 0u, (tUInt8)0u),
    INST_samples_17(simHdl, "samples_17", this, 26u, 0u, (tUInt8)0u),
    INST_samples_18(simHdl, "samples_18", this, 26u, 0u, (tUInt8)0u),
    INST_samples_19(simHdl, "samples_19", this, 26u, 0u, (tUInt8)0u),
    INST_samples_2(simHdl, "samples_2", this, 26u, 0u, (tUInt8)0u),
    INST_samples_20(simHdl, "samples_20", this, 26u, 0u, (tUInt8)0u),
    INST_samples_21(simHdl, "samples_21", this, 26u, 0u, (tUInt8)0u),
    INST_samples_22(simHdl, "samples_22", this, 26u, 0u, (tUInt8)0u),
    INST_samples_23(simHdl, "samples_23", this, 26u, 0u, (tUInt8)0u),
    INST_samples_24(simHdl, "samples_24", this, 26u, 0u, (tUInt8)0u),
    INST_samples_25(simHdl, "samples_25", this, 26u, 0u, (tUInt8)0u),
    INST_samples_26(simHdl, "samples_26", this, 26u, 0u, (tUInt8)0u),
    INST_samples_27(simHdl, "samples_27", this, 26u, 0u, (tUInt8)0u),
    INST_samples_28(simHdl, "samples_28", this, 26u, 0u, (tUInt8)0u),
    INST_samples_29(simHdl, "samples_29", this, 26u, 0u, (tUInt8)0u),
    INST_samples_3(simHdl, "samples_3", this, 26u, 0u, (tUInt8)0u),
    INST_samples_30(simHdl, "samples_30", this, 26u, 0u, (tUInt8)0u),
    INST_samples_31(simHdl, "samples_31", this, 26u, 0u, (tUInt8)0u),
    INST_samples_32(simHdl, "samples_32", this, 26u, 0u, (tUInt8)0u),
    INST_samples_33(simHdl, "samples_33", this, 26u, 0u, (tUInt8)0u),
    INST_samples_34(simHdl, "samples_34", this, 26u, 0u, (tUInt8)0u),
    INST_samples_35(simHdl, "samples_35", this, 26u, 0u, (tUInt8)0u),
    INST_samples_36(simHdl, "samples_36", this, 26u, 0u, (tUInt8)0u),
    INST_samples_37(simHdl, "samples_37", this, 26u, 0u, (tUInt8)0u),
    INST_samples_38(simHdl, "samples_38", this, 26u, 0u, (tUInt8)0u),
    INST_samples_39(simHdl, "samples_39", this, 26u, 0u, (tUInt8)0u),
    INST_samples_4(simHdl, "samples_4", this, 26u, 0u, (tUInt8)0u),
    INST_samples_40(simHdl, "samples_40", this, 26u, 0u, (tUInt8)0u),
    INST_samples_41(simHdl, "samples_41", this, 26u, 0u, (tUInt8)0u),
    INST_samples_42(simHdl, "samples_42", this, 26u, 0u, (tUInt8)0u),
    INST_samples_5(simHdl, "samples_5", this, 26u, 0u, (tUInt8)0u),
    INST_samples_6(simHdl, "samples_6", this, 26u, 0u, (tUInt8)0u),
    INST_samples_7(simHdl, "samples_7", this, 26u, 0u, (tUInt8)0u),
    INST_samples_8(simHdl, "samples_8", this, 26u, 0u, (tUInt8)0u),
    INST_samples_9(simHdl, "samples_9", this, 26u, 0u, (tUInt8)0u),
    INST_sum(simHdl, "sum", this, 26u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 99u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkFIRfilter::init_symbols_0()
{
  init_symbol(&symbols[0u], "__me_check_10", SYM_RULE);
  init_symbol(&symbols[1u], "__me_check_11", SYM_RULE);
  init_symbol(&symbols[2u], "__me_check_12", SYM_RULE);
  init_symbol(&symbols[3u], "__me_check_13", SYM_RULE);
  init_symbol(&symbols[4u], "__me_check_14", SYM_RULE);
  init_symbol(&symbols[5u], "__me_check_5", SYM_RULE);
  init_symbol(&symbols[6u], "__me_check_6", SYM_RULE);
  init_symbol(&symbols[7u], "__me_check_7", SYM_RULE);
  init_symbol(&symbols[8u], "__me_check_8", SYM_RULE);
  init_symbol(&symbols[9u], "__me_check_9", SYM_RULE);
  init_symbol(&symbols[10u], "acc", SYM_MODULE, &INST_acc);
  init_symbol(&symbols[11u], "conv_abort", SYM_MODULE, &INST_conv_abort);
  init_symbol(&symbols[12u], "conv_start_reg", SYM_MODULE, &INST_conv_start_reg);
  init_symbol(&symbols[13u], "conv_start_reg_1", SYM_MODULE, &INST_conv_start_reg_1);
  init_symbol(&symbols[14u], "conv_start_reg_2", SYM_MODULE, &INST_conv_start_reg_2);
  init_symbol(&symbols[15u], "conv_start_wire", SYM_MODULE, &INST_conv_start_wire);
  init_symbol(&symbols[16u], "conv_state_can_overlap", SYM_MODULE, &INST_conv_state_can_overlap);
  init_symbol(&symbols[17u], "conv_state_fired", SYM_MODULE, &INST_conv_state_fired);
  init_symbol(&symbols[18u], "conv_state_fired_1", SYM_MODULE, &INST_conv_state_fired_1);
  init_symbol(&symbols[19u], "conv_state_mkFSMstate", SYM_MODULE, &INST_conv_state_mkFSMstate);
  init_symbol(&symbols[20u], "conv_state_overlap_pw", SYM_MODULE, &INST_conv_state_overlap_pw);
  init_symbol(&symbols[21u], "conv_state_set_pw", SYM_MODULE, &INST_conv_state_set_pw);
  init_symbol(&symbols[22u], "n", SYM_MODULE, &INST_n);
  init_symbol(&symbols[23u], "newSample", SYM_MODULE, &INST_newSample);
  init_symbol(&symbols[24u], "RL_conv_action_f_init_l25c9", SYM_RULE);
  init_symbol(&symbols[25u], "RL_conv_action_f_init_l31c9", SYM_RULE);
  init_symbol(&symbols[26u], "RL_conv_action_f_update_l25c9", SYM_RULE);
  init_symbol(&symbols[27u], "RL_conv_action_f_update_l31c9", SYM_RULE);
  init_symbol(&symbols[28u], "RL_conv_action_l25c38", SYM_RULE);
  init_symbol(&symbols[29u], "RL_conv_action_l29c16", SYM_RULE);
  init_symbol(&symbols[30u], "RL_conv_action_l30c18", SYM_RULE);
  init_symbol(&symbols[31u], "RL_conv_action_l32c16", SYM_RULE);
  init_symbol(&symbols[32u], "RL_conv_action_l33c16", SYM_RULE);
  init_symbol(&symbols[33u], "RL_conv_action_l35c12", SYM_RULE);
  init_symbol(&symbols[34u], "RL_conv_action_l36c13", SYM_RULE);
  init_symbol(&symbols[35u], "RL_conv_fsm_start", SYM_RULE);
  init_symbol(&symbols[36u], "RL_conv_idle_l24c20", SYM_RULE);
  init_symbol(&symbols[37u], "RL_conv_restart", SYM_RULE);
  init_symbol(&symbols[38u], "RL_conv_start_reg__dreg_update", SYM_RULE);
  init_symbol(&symbols[39u], "RL_conv_state_every", SYM_RULE);
  init_symbol(&symbols[40u], "RL_conv_state_fired__dreg_update", SYM_RULE);
  init_symbol(&symbols[41u], "RL_conv_state_handle_abort", SYM_RULE);
  init_symbol(&symbols[42u], "RL_init", SYM_RULE);
  init_symbol(&symbols[43u], "samples_0", SYM_MODULE, &INST_samples_0);
  init_symbol(&symbols[44u], "samples_1", SYM_MODULE, &INST_samples_1);
  init_symbol(&symbols[45u], "samples_10", SYM_MODULE, &INST_samples_10);
  init_symbol(&symbols[46u], "samples_11", SYM_MODULE, &INST_samples_11);
  init_symbol(&symbols[47u], "samples_12", SYM_MODULE, &INST_samples_12);
  init_symbol(&symbols[48u], "samples_13", SYM_MODULE, &INST_samples_13);
  init_symbol(&symbols[49u], "samples_14", SYM_MODULE, &INST_samples_14);
  init_symbol(&symbols[50u], "samples_15", SYM_MODULE, &INST_samples_15);
  init_symbol(&symbols[51u], "samples_16", SYM_MODULE, &INST_samples_16);
  init_symbol(&symbols[52u], "samples_17", SYM_MODULE, &INST_samples_17);
  init_symbol(&symbols[53u], "samples_18", SYM_MODULE, &INST_samples_18);
  init_symbol(&symbols[54u], "samples_19", SYM_MODULE, &INST_samples_19);
  init_symbol(&symbols[55u], "samples_2", SYM_MODULE, &INST_samples_2);
  init_symbol(&symbols[56u], "samples_20", SYM_MODULE, &INST_samples_20);
  init_symbol(&symbols[57u], "samples_21", SYM_MODULE, &INST_samples_21);
  init_symbol(&symbols[58u], "samples_22", SYM_MODULE, &INST_samples_22);
  init_symbol(&symbols[59u], "samples_23", SYM_MODULE, &INST_samples_23);
  init_symbol(&symbols[60u], "samples_24", SYM_MODULE, &INST_samples_24);
  init_symbol(&symbols[61u], "samples_25", SYM_MODULE, &INST_samples_25);
  init_symbol(&symbols[62u], "samples_26", SYM_MODULE, &INST_samples_26);
  init_symbol(&symbols[63u], "samples_27", SYM_MODULE, &INST_samples_27);
  init_symbol(&symbols[64u], "samples_28", SYM_MODULE, &INST_samples_28);
  init_symbol(&symbols[65u], "samples_29", SYM_MODULE, &INST_samples_29);
  init_symbol(&symbols[66u], "samples_3", SYM_MODULE, &INST_samples_3);
  init_symbol(&symbols[67u], "samples_30", SYM_MODULE, &INST_samples_30);
  init_symbol(&symbols[68u], "samples_31", SYM_MODULE, &INST_samples_31);
  init_symbol(&symbols[69u], "samples_32", SYM_MODULE, &INST_samples_32);
  init_symbol(&symbols[70u], "samples_33", SYM_MODULE, &INST_samples_33);
  init_symbol(&symbols[71u], "samples_34", SYM_MODULE, &INST_samples_34);
  init_symbol(&symbols[72u], "samples_35", SYM_MODULE, &INST_samples_35);
  init_symbol(&symbols[73u], "samples_36", SYM_MODULE, &INST_samples_36);
  init_symbol(&symbols[74u], "samples_37", SYM_MODULE, &INST_samples_37);
  init_symbol(&symbols[75u], "samples_38", SYM_MODULE, &INST_samples_38);
  init_symbol(&symbols[76u], "samples_39", SYM_MODULE, &INST_samples_39);
  init_symbol(&symbols[77u], "samples_4", SYM_MODULE, &INST_samples_4);
  init_symbol(&symbols[78u], "samples_40", SYM_MODULE, &INST_samples_40);
  init_symbol(&symbols[79u], "samples_41", SYM_MODULE, &INST_samples_41);
  init_symbol(&symbols[80u], "samples_42", SYM_MODULE, &INST_samples_42);
  init_symbol(&symbols[81u], "samples_5", SYM_MODULE, &INST_samples_5);
  init_symbol(&symbols[82u], "samples_6", SYM_MODULE, &INST_samples_6);
  init_symbol(&symbols[83u], "samples_7", SYM_MODULE, &INST_samples_7);
  init_symbol(&symbols[84u], "samples_8", SYM_MODULE, &INST_samples_8);
  init_symbol(&symbols[85u], "samples_9", SYM_MODULE, &INST_samples_9);
  init_symbol(&symbols[86u], "sum", SYM_MODULE, &INST_sum);
  init_symbol(&symbols[87u],
	      "WILL_FIRE_RL_conv_action_f_init_l25c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_init_l25c9,
	      1u);
  init_symbol(&symbols[88u],
	      "WILL_FIRE_RL_conv_action_f_init_l31c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_init_l31c9,
	      1u);
  init_symbol(&symbols[89u],
	      "WILL_FIRE_RL_conv_action_f_update_l25c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_update_l25c9,
	      1u);
  init_symbol(&symbols[90u],
	      "WILL_FIRE_RL_conv_action_f_update_l31c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_update_l31c9,
	      1u);
  init_symbol(&symbols[91u],
	      "WILL_FIRE_RL_conv_action_l25c38",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l25c38,
	      1u);
  init_symbol(&symbols[92u],
	      "WILL_FIRE_RL_conv_action_l29c16",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l29c16,
	      1u);
  init_symbol(&symbols[93u],
	      "WILL_FIRE_RL_conv_action_l30c18",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l30c18,
	      1u);
  init_symbol(&symbols[94u],
	      "WILL_FIRE_RL_conv_action_l32c16",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l32c16,
	      1u);
  init_symbol(&symbols[95u],
	      "WILL_FIRE_RL_conv_action_l33c16",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l33c16,
	      1u);
  init_symbol(&symbols[96u],
	      "WILL_FIRE_RL_conv_action_l35c12",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l35c12,
	      1u);
  init_symbol(&symbols[97u],
	      "WILL_FIRE_RL_conv_action_l36c13",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l36c13,
	      1u);
  init_symbol(&symbols[98u], "x__h36308", SYM_DEF, &DEF_x__h36308, 7u);
}


/* Rule actions */

void MOD_mkFIRfilter::RL_conv_start_reg__dreg_update()
{
  tUInt8 DEF_conv_start_reg_2_whas_AND_conv_start_reg_2_wget___d3;
  DEF_conv_start_reg_2_whas_AND_conv_start_reg_2_wget___d3 = INST_conv_start_reg_2.METH_whas() && INST_conv_start_reg_2.METH_wget();
  INST_conv_start_reg_1.METH_write(DEF_conv_start_reg_2_whas_AND_conv_start_reg_2_wget___d3);
}

void MOD_mkFIRfilter::RL_conv_state_handle_abort()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)0u);
}

void MOD_mkFIRfilter::RL_conv_state_fired__dreg_update()
{
  tUInt8 DEF_conv_state_fired_1_whas__3_AND_conv_state_fire_ETC___d15;
  DEF_conv_state_fired_1_whas__3_AND_conv_state_fire_ETC___d15 = INST_conv_state_fired_1.METH_whas() && INST_conv_state_fired_1.METH_wget();
  INST_conv_state_fired.METH_write(DEF_conv_state_fired_1_whas__3_AND_conv_state_fire_ETC___d15);
}

void MOD_mkFIRfilter::RL_conv_state_every()
{
  tUInt8 DEF_conv_state_set_pw_whas__6_OR_NOT_conv_state_ov_ETC___d21;
  tUInt8 DEF_conv_state_can_overlap__h6440;
  DEF_conv_state_can_overlap__h6440 = INST_conv_state_can_overlap.METH_read();
  DEF_conv_state_set_pw_whas__6_OR_NOT_conv_state_ov_ETC___d21 = INST_conv_state_set_pw.METH_whas() || (!INST_conv_state_overlap_pw.METH_whas() && DEF_conv_state_can_overlap__h6440);
  INST_conv_state_can_overlap.METH_write(DEF_conv_state_set_pw_whas__6_OR_NOT_conv_state_ov_ETC___d21);
}

void MOD_mkFIRfilter::RL_conv_restart()
{
  INST_conv_start_wire.METH_wset((tUInt8)1u);
  INST_conv_start_reg_2.METH_wset((tUInt8)1u);
}

void MOD_mkFIRfilter::RL_conv_action_f_init_l25c9()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)1u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write((tUInt8)42u);
}

void MOD_mkFIRfilter::RL_conv_action_l25c38()
{
  tUInt32 DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180;
  tUInt8 DEF_n_7_EQ_0___d45;
  tUInt8 DEF_n_7_EQ_1___d181;
  tUInt8 DEF_n_7_EQ_2___d182;
  tUInt8 DEF_n_7_EQ_3___d183;
  tUInt8 DEF_n_7_EQ_4___d184;
  tUInt8 DEF_n_7_EQ_5___d185;
  tUInt8 DEF_n_7_EQ_6___d186;
  tUInt8 DEF_n_7_EQ_7___d187;
  tUInt8 DEF_n_7_EQ_8___d188;
  tUInt8 DEF_n_7_EQ_9___d189;
  tUInt8 DEF_n_7_EQ_10___d190;
  tUInt8 DEF_n_7_EQ_11___d191;
  tUInt8 DEF_n_7_EQ_12___d192;
  tUInt8 DEF_n_7_EQ_13___d193;
  tUInt8 DEF_n_7_EQ_14___d194;
  tUInt8 DEF_n_7_EQ_15___d195;
  tUInt8 DEF_n_7_EQ_16___d196;
  tUInt8 DEF_n_7_EQ_17___d197;
  tUInt8 DEF_n_7_EQ_18___d198;
  tUInt8 DEF_n_7_EQ_19___d199;
  tUInt8 DEF_n_7_EQ_20___d200;
  tUInt8 DEF_n_7_EQ_21___d201;
  tUInt8 DEF_n_7_EQ_22___d202;
  tUInt8 DEF_n_7_EQ_23___d203;
  tUInt8 DEF_n_7_EQ_24___d204;
  tUInt8 DEF_n_7_EQ_25___d205;
  tUInt8 DEF_n_7_EQ_26___d206;
  tUInt8 DEF_n_7_EQ_27___d207;
  tUInt8 DEF_n_7_EQ_28___d208;
  tUInt8 DEF_n_7_EQ_29___d209;
  tUInt8 DEF_n_7_EQ_30___d210;
  tUInt8 DEF_n_7_EQ_31___d211;
  tUInt8 DEF_n_7_EQ_32___d212;
  tUInt8 DEF_n_7_EQ_33___d213;
  tUInt8 DEF_n_7_EQ_34___d214;
  tUInt8 DEF_n_7_EQ_35___d215;
  tUInt8 DEF_n_7_EQ_36___d216;
  tUInt8 DEF_n_7_EQ_37___d217;
  tUInt8 DEF_n_7_EQ_38___d218;
  tUInt8 DEF_n_7_EQ_39___d219;
  tUInt8 DEF_n_7_EQ_40___d220;
  tUInt8 DEF_n_7_EQ_41___d221;
  tUInt8 DEF_n_7_EQ_42___d222;
  tUInt32 DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179;
  tUInt32 DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134;
  DEF_x__h36308 = INST_n.METH_read();
  DEF_samples_42___d130 = INST_samples_42.METH_read();
  DEF_samples_41___d128 = INST_samples_41.METH_read();
  DEF_samples_40___d126 = INST_samples_40.METH_read();
  DEF_samples_39___d124 = INST_samples_39.METH_read();
  DEF_samples_37___d120 = INST_samples_37.METH_read();
  DEF_samples_38___d122 = INST_samples_38.METH_read();
  DEF_samples_36___d118 = INST_samples_36.METH_read();
  DEF_samples_35___d116 = INST_samples_35.METH_read();
  DEF_samples_34___d114 = INST_samples_34.METH_read();
  DEF_samples_33___d112 = INST_samples_33.METH_read();
  DEF_samples_32___d110 = INST_samples_32.METH_read();
  DEF_samples_30___d106 = INST_samples_30.METH_read();
  DEF_samples_31___d108 = INST_samples_31.METH_read();
  DEF_samples_29___d104 = INST_samples_29.METH_read();
  DEF_samples_28___d102 = INST_samples_28.METH_read();
  DEF_samples_27___d100 = INST_samples_27.METH_read();
  DEF_samples_26___d98 = INST_samples_26.METH_read();
  DEF_samples_25___d96 = INST_samples_25.METH_read();
  DEF_samples_23___d92 = INST_samples_23.METH_read();
  DEF_samples_24___d94 = INST_samples_24.METH_read();
  DEF_samples_22___d90 = INST_samples_22.METH_read();
  DEF_samples_21___d88 = INST_samples_21.METH_read();
  DEF_samples_20___d86 = INST_samples_20.METH_read();
  DEF_samples_19___d84 = INST_samples_19.METH_read();
  DEF_samples_18___d82 = INST_samples_18.METH_read();
  DEF_samples_16___d78 = INST_samples_16.METH_read();
  DEF_samples_17___d80 = INST_samples_17.METH_read();
  DEF_samples_15___d76 = INST_samples_15.METH_read();
  DEF_samples_14___d74 = INST_samples_14.METH_read();
  DEF_samples_13___d72 = INST_samples_13.METH_read();
  DEF_samples_12___d70 = INST_samples_12.METH_read();
  DEF_samples_11___d68 = INST_samples_11.METH_read();
  DEF_samples_9___d64 = INST_samples_9.METH_read();
  DEF_samples_10___d66 = INST_samples_10.METH_read();
  DEF_samples_8___d62 = INST_samples_8.METH_read();
  DEF_samples_7___d60 = INST_samples_7.METH_read();
  DEF_samples_6___d58 = INST_samples_6.METH_read();
  DEF_samples_5___d56 = INST_samples_5.METH_read();
  DEF_samples_4___d54 = INST_samples_4.METH_read();
  DEF_samples_2___d50 = INST_samples_2.METH_read();
  DEF_samples_3___d52 = INST_samples_3.METH_read();
  DEF_samples_1___d48 = INST_samples_1.METH_read();
  DEF_samples_0___d46 = INST_samples_0.METH_read();
  DEF_b__h31084 = (tUInt32)(DEF_samples_42___d130 >> 13u);
  DEF_b__h31215 = (tUInt32)(8191u & DEF_samples_42___d130);
  DEF_b__h31083 = (tUInt32)(DEF_samples_41___d128 >> 13u);
  DEF_b__h31082 = (tUInt32)(DEF_samples_40___d126 >> 13u);
  DEF_b__h31214 = (tUInt32)(8191u & DEF_samples_41___d128);
  DEF_b__h31213 = (tUInt32)(8191u & DEF_samples_40___d126);
  DEF_b__h31081 = (tUInt32)(DEF_samples_39___d124 >> 13u);
  DEF_b__h31212 = (tUInt32)(8191u & DEF_samples_39___d124);
  DEF_b__h31080 = (tUInt32)(DEF_samples_38___d122 >> 13u);
  DEF_b__h31211 = (tUInt32)(8191u & DEF_samples_38___d122);
  DEF_b__h31210 = (tUInt32)(8191u & DEF_samples_37___d120);
  DEF_b__h31079 = (tUInt32)(DEF_samples_37___d120 >> 13u);
  DEF_b__h31078 = (tUInt32)(DEF_samples_36___d118 >> 13u);
  DEF_b__h31209 = (tUInt32)(8191u & DEF_samples_36___d118);
  DEF_b__h31077 = (tUInt32)(DEF_samples_35___d116 >> 13u);
  DEF_b__h31208 = (tUInt32)(8191u & DEF_samples_35___d116);
  DEF_b__h31076 = (tUInt32)(DEF_samples_34___d114 >> 13u);
  DEF_b__h31075 = (tUInt32)(DEF_samples_33___d112 >> 13u);
  DEF_b__h31207 = (tUInt32)(8191u & DEF_samples_34___d114);
  DEF_b__h31206 = (tUInt32)(8191u & DEF_samples_33___d112);
  DEF_b__h31074 = (tUInt32)(DEF_samples_32___d110 >> 13u);
  DEF_b__h31205 = (tUInt32)(8191u & DEF_samples_32___d110);
  DEF_b__h31073 = (tUInt32)(DEF_samples_31___d108 >> 13u);
  DEF_b__h31204 = (tUInt32)(8191u & DEF_samples_31___d108);
  DEF_b__h31203 = (tUInt32)(8191u & DEF_samples_30___d106);
  DEF_b__h31072 = (tUInt32)(DEF_samples_30___d106 >> 13u);
  DEF_b__h31071 = (tUInt32)(DEF_samples_29___d104 >> 13u);
  DEF_b__h31202 = (tUInt32)(8191u & DEF_samples_29___d104);
  DEF_b__h31070 = (tUInt32)(DEF_samples_28___d102 >> 13u);
  DEF_b__h31201 = (tUInt32)(8191u & DEF_samples_28___d102);
  DEF_b__h31069 = (tUInt32)(DEF_samples_27___d100 >> 13u);
  DEF_b__h31068 = (tUInt32)(DEF_samples_26___d98 >> 13u);
  DEF_b__h31200 = (tUInt32)(8191u & DEF_samples_27___d100);
  DEF_b__h31199 = (tUInt32)(8191u & DEF_samples_26___d98);
  DEF_b__h31067 = (tUInt32)(DEF_samples_25___d96 >> 13u);
  DEF_b__h31198 = (tUInt32)(8191u & DEF_samples_25___d96);
  DEF_b__h31066 = (tUInt32)(DEF_samples_24___d94 >> 13u);
  DEF_b__h31197 = (tUInt32)(8191u & DEF_samples_24___d94);
  DEF_b__h31196 = (tUInt32)(8191u & DEF_samples_23___d92);
  DEF_b__h31065 = (tUInt32)(DEF_samples_23___d92 >> 13u);
  DEF_b__h31064 = (tUInt32)(DEF_samples_22___d90 >> 13u);
  DEF_b__h31195 = (tUInt32)(8191u & DEF_samples_22___d90);
  DEF_b__h31063 = (tUInt32)(DEF_samples_21___d88 >> 13u);
  DEF_b__h31194 = (tUInt32)(8191u & DEF_samples_21___d88);
  DEF_b__h31062 = (tUInt32)(DEF_samples_20___d86 >> 13u);
  DEF_b__h31061 = (tUInt32)(DEF_samples_19___d84 >> 13u);
  DEF_b__h31193 = (tUInt32)(8191u & DEF_samples_20___d86);
  DEF_b__h31192 = (tUInt32)(8191u & DEF_samples_19___d84);
  DEF_b__h31060 = (tUInt32)(DEF_samples_18___d82 >> 13u);
  DEF_b__h31191 = (tUInt32)(8191u & DEF_samples_18___d82);
  DEF_b__h31059 = (tUInt32)(DEF_samples_17___d80 >> 13u);
  DEF_b__h31190 = (tUInt32)(8191u & DEF_samples_17___d80);
  DEF_b__h31189 = (tUInt32)(8191u & DEF_samples_16___d78);
  DEF_b__h31058 = (tUInt32)(DEF_samples_16___d78 >> 13u);
  DEF_b__h31057 = (tUInt32)(DEF_samples_15___d76 >> 13u);
  DEF_b__h31188 = (tUInt32)(8191u & DEF_samples_15___d76);
  DEF_b__h31056 = (tUInt32)(DEF_samples_14___d74 >> 13u);
  DEF_b__h31187 = (tUInt32)(8191u & DEF_samples_14___d74);
  DEF_b__h31055 = (tUInt32)(DEF_samples_13___d72 >> 13u);
  DEF_b__h31054 = (tUInt32)(DEF_samples_12___d70 >> 13u);
  DEF_b__h31186 = (tUInt32)(8191u & DEF_samples_13___d72);
  DEF_b__h31185 = (tUInt32)(8191u & DEF_samples_12___d70);
  DEF_b__h31053 = (tUInt32)(DEF_samples_11___d68 >> 13u);
  DEF_b__h31184 = (tUInt32)(8191u & DEF_samples_11___d68);
  DEF_b__h31052 = (tUInt32)(DEF_samples_10___d66 >> 13u);
  DEF_b__h31183 = (tUInt32)(8191u & DEF_samples_10___d66);
  DEF_b__h31182 = (tUInt32)(8191u & DEF_samples_9___d64);
  DEF_b__h31051 = (tUInt32)(DEF_samples_9___d64 >> 13u);
  DEF_b__h31050 = (tUInt32)(DEF_samples_8___d62 >> 13u);
  DEF_b__h31181 = (tUInt32)(8191u & DEF_samples_8___d62);
  DEF_b__h31049 = (tUInt32)(DEF_samples_7___d60 >> 13u);
  DEF_b__h31180 = (tUInt32)(8191u & DEF_samples_7___d60);
  DEF_b__h31048 = (tUInt32)(DEF_samples_6___d58 >> 13u);
  DEF_b__h31047 = (tUInt32)(DEF_samples_5___d56 >> 13u);
  DEF_b__h31179 = (tUInt32)(8191u & DEF_samples_6___d58);
  DEF_b__h31178 = (tUInt32)(8191u & DEF_samples_5___d56);
  DEF_b__h31046 = (tUInt32)(DEF_samples_4___d54 >> 13u);
  DEF_b__h31177 = (tUInt32)(8191u & DEF_samples_4___d54);
  DEF_b__h31045 = (tUInt32)(DEF_samples_3___d52 >> 13u);
  DEF_b__h31176 = (tUInt32)(8191u & DEF_samples_3___d52);
  DEF_b__h31175 = (tUInt32)(8191u & DEF_samples_2___d50);
  DEF_b__h31044 = (tUInt32)(DEF_samples_2___d50 >> 13u);
  DEF_b__h31042 = (tUInt32)(DEF_samples_0___d46 >> 13u);
  DEF_b__h31173 = (tUInt32)(8191u & DEF_samples_0___d46);
  DEF_b__h31043 = (tUInt32)(DEF_samples_1___d48 >> 13u);
  DEF_b__h31174 = (tUInt32)(8191u & DEF_samples_1___d48);
  DEF_x__h30825 = (tUInt8)127u & (DEF_x__h36308 - (tUInt8)1u);
  switch (DEF_x__h30825) {
  case (tUInt8)0u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31042;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31043;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31044;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31045;
    break;
  case (tUInt8)4u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31046;
    break;
  case (tUInt8)5u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31047;
    break;
  case (tUInt8)6u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31048;
    break;
  case (tUInt8)7u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31049;
    break;
  case (tUInt8)8u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31050;
    break;
  case (tUInt8)9u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31051;
    break;
  case (tUInt8)10u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31052;
    break;
  case (tUInt8)11u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31053;
    break;
  case (tUInt8)12u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31054;
    break;
  case (tUInt8)13u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31055;
    break;
  case (tUInt8)14u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31056;
    break;
  case (tUInt8)15u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31057;
    break;
  case (tUInt8)16u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31058;
    break;
  case (tUInt8)17u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31059;
    break;
  case (tUInt8)18u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31060;
    break;
  case (tUInt8)19u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31061;
    break;
  case (tUInt8)20u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31062;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31063;
    break;
  case (tUInt8)22u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31064;
    break;
  case (tUInt8)23u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31065;
    break;
  case (tUInt8)24u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31066;
    break;
  case (tUInt8)25u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31067;
    break;
  case (tUInt8)26u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31068;
    break;
  case (tUInt8)27u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31069;
    break;
  case (tUInt8)28u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31070;
    break;
  case (tUInt8)29u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31071;
    break;
  case (tUInt8)30u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31072;
    break;
  case (tUInt8)31u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31073;
    break;
  case (tUInt8)32u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31074;
    break;
  case (tUInt8)33u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31075;
    break;
  case (tUInt8)34u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31076;
    break;
  case (tUInt8)35u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31077;
    break;
  case (tUInt8)36u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31078;
    break;
  case (tUInt8)37u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31079;
    break;
  case (tUInt8)38u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31080;
    break;
  case (tUInt8)39u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31081;
    break;
  case (tUInt8)40u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31082;
    break;
  case (tUInt8)41u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31083;
    break;
  case (tUInt8)42u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = DEF_b__h31084;
    break;
  default:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 = 2730u;
  }
  switch (DEF_x__h30825) {
  case (tUInt8)0u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31173;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31174;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31175;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31176;
    break;
  case (tUInt8)4u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31177;
    break;
  case (tUInt8)5u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31178;
    break;
  case (tUInt8)6u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31179;
    break;
  case (tUInt8)7u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31180;
    break;
  case (tUInt8)8u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31181;
    break;
  case (tUInt8)9u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31182;
    break;
  case (tUInt8)10u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31183;
    break;
  case (tUInt8)11u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31184;
    break;
  case (tUInt8)12u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31185;
    break;
  case (tUInt8)13u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31186;
    break;
  case (tUInt8)14u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31187;
    break;
  case (tUInt8)15u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31188;
    break;
  case (tUInt8)16u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31189;
    break;
  case (tUInt8)17u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31190;
    break;
  case (tUInt8)18u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31191;
    break;
  case (tUInt8)19u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31192;
    break;
  case (tUInt8)20u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31193;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31194;
    break;
  case (tUInt8)22u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31195;
    break;
  case (tUInt8)23u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31196;
    break;
  case (tUInt8)24u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31197;
    break;
  case (tUInt8)25u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31198;
    break;
  case (tUInt8)26u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31199;
    break;
  case (tUInt8)27u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31200;
    break;
  case (tUInt8)28u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31201;
    break;
  case (tUInt8)29u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31202;
    break;
  case (tUInt8)30u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31203;
    break;
  case (tUInt8)31u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31204;
    break;
  case (tUInt8)32u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31205;
    break;
  case (tUInt8)33u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31206;
    break;
  case (tUInt8)34u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31207;
    break;
  case (tUInt8)35u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31208;
    break;
  case (tUInt8)36u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31209;
    break;
  case (tUInt8)37u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31210;
    break;
  case (tUInt8)38u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31211;
    break;
  case (tUInt8)39u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31212;
    break;
  case (tUInt8)40u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31213;
    break;
  case (tUInt8)41u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31214;
    break;
  case (tUInt8)42u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = DEF_b__h31215;
    break;
  default:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179 = 2730u;
  }
  DEF_n_7_EQ_42___d222 = DEF_x__h36308 == (tUInt8)42u;
  DEF_n_7_EQ_41___d221 = DEF_x__h36308 == (tUInt8)41u;
  DEF_n_7_EQ_40___d220 = DEF_x__h36308 == (tUInt8)40u;
  DEF_n_7_EQ_39___d219 = DEF_x__h36308 == (tUInt8)39u;
  DEF_n_7_EQ_38___d218 = DEF_x__h36308 == (tUInt8)38u;
  DEF_n_7_EQ_36___d216 = DEF_x__h36308 == (tUInt8)36u;
  DEF_n_7_EQ_37___d217 = DEF_x__h36308 == (tUInt8)37u;
  DEF_n_7_EQ_35___d215 = DEF_x__h36308 == (tUInt8)35u;
  DEF_n_7_EQ_34___d214 = DEF_x__h36308 == (tUInt8)34u;
  DEF_n_7_EQ_33___d213 = DEF_x__h36308 == (tUInt8)33u;
  DEF_n_7_EQ_32___d212 = DEF_x__h36308 == (tUInt8)32u;
  DEF_n_7_EQ_31___d211 = DEF_x__h36308 == (tUInt8)31u;
  DEF_n_7_EQ_29___d209 = DEF_x__h36308 == (tUInt8)29u;
  DEF_n_7_EQ_30___d210 = DEF_x__h36308 == (tUInt8)30u;
  DEF_n_7_EQ_28___d208 = DEF_x__h36308 == (tUInt8)28u;
  DEF_n_7_EQ_27___d207 = DEF_x__h36308 == (tUInt8)27u;
  DEF_n_7_EQ_26___d206 = DEF_x__h36308 == (tUInt8)26u;
  DEF_n_7_EQ_25___d205 = DEF_x__h36308 == (tUInt8)25u;
  DEF_n_7_EQ_24___d204 = DEF_x__h36308 == (tUInt8)24u;
  DEF_n_7_EQ_22___d202 = DEF_x__h36308 == (tUInt8)22u;
  DEF_n_7_EQ_23___d203 = DEF_x__h36308 == (tUInt8)23u;
  DEF_n_7_EQ_21___d201 = DEF_x__h36308 == (tUInt8)21u;
  DEF_n_7_EQ_20___d200 = DEF_x__h36308 == (tUInt8)20u;
  DEF_n_7_EQ_19___d199 = DEF_x__h36308 == (tUInt8)19u;
  DEF_n_7_EQ_18___d198 = DEF_x__h36308 == (tUInt8)18u;
  DEF_n_7_EQ_17___d197 = DEF_x__h36308 == (tUInt8)17u;
  DEF_n_7_EQ_15___d195 = DEF_x__h36308 == (tUInt8)15u;
  DEF_n_7_EQ_16___d196 = DEF_x__h36308 == (tUInt8)16u;
  DEF_n_7_EQ_14___d194 = DEF_x__h36308 == (tUInt8)14u;
  DEF_n_7_EQ_13___d193 = DEF_x__h36308 == (tUInt8)13u;
  DEF_n_7_EQ_12___d192 = DEF_x__h36308 == (tUInt8)12u;
  DEF_n_7_EQ_11___d191 = DEF_x__h36308 == (tUInt8)11u;
  DEF_n_7_EQ_10___d190 = DEF_x__h36308 == (tUInt8)10u;
  DEF_n_7_EQ_8___d188 = DEF_x__h36308 == (tUInt8)8u;
  DEF_n_7_EQ_9___d189 = DEF_x__h36308 == (tUInt8)9u;
  DEF_n_7_EQ_7___d187 = DEF_x__h36308 == (tUInt8)7u;
  DEF_n_7_EQ_6___d186 = DEF_x__h36308 == (tUInt8)6u;
  DEF_n_7_EQ_5___d185 = DEF_x__h36308 == (tUInt8)5u;
  DEF_n_7_EQ_4___d184 = DEF_x__h36308 == (tUInt8)4u;
  DEF_n_7_EQ_3___d183 = DEF_x__h36308 == (tUInt8)3u;
  DEF_n_7_EQ_1___d181 = DEF_x__h36308 == (tUInt8)1u;
  DEF_n_7_EQ_2___d182 = DEF_x__h36308 == (tUInt8)2u;
  DEF_n_7_EQ_0___d45 = DEF_x__h36308 == (tUInt8)0u;
  DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180 = 67108863u & ((DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d134 << 13u) | DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d179);
  INST_conv_state_mkFSMstate.METH_write((tUInt8)2u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  if (DEF_n_7_EQ_1___d181)
    INST_samples_1.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_0___d45)
    INST_samples_0.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_2___d182)
    INST_samples_2.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_3___d183)
    INST_samples_3.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_4___d184)
    INST_samples_4.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_5___d185)
    INST_samples_5.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_6___d186)
    INST_samples_6.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_8___d188)
    INST_samples_8.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_7___d187)
    INST_samples_7.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_9___d189)
    INST_samples_9.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_10___d190)
    INST_samples_10.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_11___d191)
    INST_samples_11.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_12___d192)
    INST_samples_12.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_13___d193)
    INST_samples_13.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_15___d195)
    INST_samples_15.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_14___d194)
    INST_samples_14.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_16___d196)
    INST_samples_16.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_17___d197)
    INST_samples_17.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_18___d198)
    INST_samples_18.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_19___d199)
    INST_samples_19.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_20___d200)
    INST_samples_20.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_22___d202)
    INST_samples_22.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_21___d201)
    INST_samples_21.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_23___d203)
    INST_samples_23.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_24___d204)
    INST_samples_24.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_25___d205)
    INST_samples_25.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_26___d206)
    INST_samples_26.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_27___d207)
    INST_samples_27.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_29___d209)
    INST_samples_29.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_28___d208)
    INST_samples_28.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_30___d210)
    INST_samples_30.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_31___d211)
    INST_samples_31.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_32___d212)
    INST_samples_32.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_33___d213)
    INST_samples_33.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_34___d214)
    INST_samples_34.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_36___d216)
    INST_samples_36.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_35___d215)
    INST_samples_35.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_37___d217)
    INST_samples_37.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_38___d218)
    INST_samples_38.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_39___d219)
    INST_samples_39.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_40___d220)
    INST_samples_40.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_42___d222)
    INST_samples_42.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
  if (DEF_n_7_EQ_41___d221)
    INST_samples_41.METH_write(DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d180);
}

void MOD_mkFIRfilter::RL_conv_action_f_update_l25c9()
{
  DEF_x__h36308 = INST_n.METH_read();
  DEF_x__h30825 = (tUInt8)127u & (DEF_x__h36308 - (tUInt8)1u);
  INST_conv_state_mkFSMstate.METH_write((tUInt8)3u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write(DEF_x__h30825);
}

void MOD_mkFIRfilter::RL_conv_action_l29c16()
{
  tUInt32 DEF_newSample_first____d228;
  DEF_newSample_first____d228 = INST_newSample.METH_first();
  INST_conv_state_mkFSMstate.METH_write((tUInt8)4u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_samples_0.METH_write(DEF_newSample_first____d228);
}

void MOD_mkFIRfilter::RL_conv_action_l30c18()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)5u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_newSample.METH_deq();
}

void MOD_mkFIRfilter::RL_conv_action_f_init_l31c9()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)6u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write((tUInt8)0u);
}

void MOD_mkFIRfilter::RL_conv_action_l32c16()
{
  tUInt32 DEF_sum_40_BITS_25_TO_13_41_PLUS_SEL_ARR_samples_0_ETC___d249;
  tUInt32 DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242;
  DEF_x__h36308 = INST_n.METH_read();
  DEF_samples_42___d130 = INST_samples_42.METH_read();
  DEF_samples_41___d128 = INST_samples_41.METH_read();
  DEF_samples_40___d126 = INST_samples_40.METH_read();
  DEF_samples_39___d124 = INST_samples_39.METH_read();
  DEF_samples_37___d120 = INST_samples_37.METH_read();
  DEF_samples_38___d122 = INST_samples_38.METH_read();
  DEF_samples_36___d118 = INST_samples_36.METH_read();
  DEF_samples_35___d116 = INST_samples_35.METH_read();
  DEF_samples_34___d114 = INST_samples_34.METH_read();
  DEF_samples_33___d112 = INST_samples_33.METH_read();
  DEF_samples_31___d108 = INST_samples_31.METH_read();
  DEF_samples_32___d110 = INST_samples_32.METH_read();
  DEF_samples_30___d106 = INST_samples_30.METH_read();
  DEF_samples_28___d102 = INST_samples_28.METH_read();
  DEF_samples_29___d104 = INST_samples_29.METH_read();
  DEF_samples_27___d100 = INST_samples_27.METH_read();
  DEF_samples_25___d96 = INST_samples_25.METH_read();
  DEF_samples_26___d98 = INST_samples_26.METH_read();
  DEF_samples_24___d94 = INST_samples_24.METH_read();
  DEF_samples_23___d92 = INST_samples_23.METH_read();
  DEF_samples_22___d90 = INST_samples_22.METH_read();
  DEF_samples_21___d88 = INST_samples_21.METH_read();
  DEF_samples_19___d84 = INST_samples_19.METH_read();
  DEF_samples_20___d86 = INST_samples_20.METH_read();
  DEF_samples_18___d82 = INST_samples_18.METH_read();
  DEF_samples_17___d80 = INST_samples_17.METH_read();
  DEF_samples_16___d78 = INST_samples_16.METH_read();
  DEF_samples_15___d76 = INST_samples_15.METH_read();
  DEF_samples_13___d72 = INST_samples_13.METH_read();
  DEF_samples_14___d74 = INST_samples_14.METH_read();
  DEF_samples_12___d70 = INST_samples_12.METH_read();
  DEF_samples_11___d68 = INST_samples_11.METH_read();
  DEF_samples_10___d66 = INST_samples_10.METH_read();
  DEF_samples_9___d64 = INST_samples_9.METH_read();
  DEF_samples_7___d60 = INST_samples_7.METH_read();
  DEF_samples_8___d62 = INST_samples_8.METH_read();
  DEF_samples_6___d58 = INST_samples_6.METH_read();
  DEF_samples_4___d54 = INST_samples_4.METH_read();
  DEF_samples_5___d56 = INST_samples_5.METH_read();
  DEF_samples_3___d52 = INST_samples_3.METH_read();
  DEF_samples_1___d48 = INST_samples_1.METH_read();
  DEF_samples_2___d50 = INST_samples_2.METH_read();
  DEF_samples_0___d46 = INST_samples_0.METH_read();
  DEF_sum___d240 = INST_sum.METH_read();
  DEF_b__h35212 = (tUInt32)(DEF_sum___d240 >> 13u);
  DEF_b__h35867 = (tUInt32)(8191u & DEF_sum___d240);
  DEF_b__h31084 = (tUInt32)(DEF_samples_42___d130 >> 13u);
  DEF_b__h31083 = (tUInt32)(DEF_samples_41___d128 >> 13u);
  DEF_b__h31082 = (tUInt32)(DEF_samples_40___d126 >> 13u);
  DEF_b__h31080 = (tUInt32)(DEF_samples_38___d122 >> 13u);
  DEF_b__h31081 = (tUInt32)(DEF_samples_39___d124 >> 13u);
  DEF_b__h31079 = (tUInt32)(DEF_samples_37___d120 >> 13u);
  DEF_b__h31077 = (tUInt32)(DEF_samples_35___d116 >> 13u);
  DEF_b__h31078 = (tUInt32)(DEF_samples_36___d118 >> 13u);
  DEF_b__h31076 = (tUInt32)(DEF_samples_34___d114 >> 13u);
  DEF_b__h31075 = (tUInt32)(DEF_samples_33___d112 >> 13u);
  DEF_b__h31074 = (tUInt32)(DEF_samples_32___d110 >> 13u);
  DEF_b__h31073 = (tUInt32)(DEF_samples_31___d108 >> 13u);
  DEF_b__h31071 = (tUInt32)(DEF_samples_29___d104 >> 13u);
  DEF_b__h31072 = (tUInt32)(DEF_samples_30___d106 >> 13u);
  DEF_b__h31070 = (tUInt32)(DEF_samples_28___d102 >> 13u);
  DEF_b__h31068 = (tUInt32)(DEF_samples_26___d98 >> 13u);
  DEF_b__h31069 = (tUInt32)(DEF_samples_27___d100 >> 13u);
  DEF_b__h31067 = (tUInt32)(DEF_samples_25___d96 >> 13u);
  DEF_b__h31066 = (tUInt32)(DEF_samples_24___d94 >> 13u);
  DEF_b__h31065 = (tUInt32)(DEF_samples_23___d92 >> 13u);
  DEF_b__h31064 = (tUInt32)(DEF_samples_22___d90 >> 13u);
  DEF_b__h31062 = (tUInt32)(DEF_samples_20___d86 >> 13u);
  DEF_b__h31063 = (tUInt32)(DEF_samples_21___d88 >> 13u);
  DEF_b__h31061 = (tUInt32)(DEF_samples_19___d84 >> 13u);
  DEF_b__h31059 = (tUInt32)(DEF_samples_17___d80 >> 13u);
  DEF_b__h31060 = (tUInt32)(DEF_samples_18___d82 >> 13u);
  DEF_b__h31058 = (tUInt32)(DEF_samples_16___d78 >> 13u);
  DEF_b__h31057 = (tUInt32)(DEF_samples_15___d76 >> 13u);
  DEF_b__h31056 = (tUInt32)(DEF_samples_14___d74 >> 13u);
  DEF_b__h31055 = (tUInt32)(DEF_samples_13___d72 >> 13u);
  DEF_b__h31054 = (tUInt32)(DEF_samples_12___d70 >> 13u);
  DEF_b__h31053 = (tUInt32)(DEF_samples_11___d68 >> 13u);
  DEF_b__h31052 = (tUInt32)(DEF_samples_10___d66 >> 13u);
  DEF_b__h31051 = (tUInt32)(DEF_samples_9___d64 >> 13u);
  DEF_b__h31050 = (tUInt32)(DEF_samples_8___d62 >> 13u);
  DEF_b__h31049 = (tUInt32)(DEF_samples_7___d60 >> 13u);
  DEF_b__h31048 = (tUInt32)(DEF_samples_6___d58 >> 13u);
  DEF_b__h31047 = (tUInt32)(DEF_samples_5___d56 >> 13u);
  DEF_b__h31046 = (tUInt32)(DEF_samples_4___d54 >> 13u);
  DEF_b__h31045 = (tUInt32)(DEF_samples_3___d52 >> 13u);
  DEF_b__h31044 = (tUInt32)(DEF_samples_2___d50 >> 13u);
  DEF_b__h31042 = (tUInt32)(DEF_samples_0___d46 >> 13u);
  switch (DEF_x__h36308) {
  case (tUInt8)0u:
  case (tUInt8)42u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 186u;
    break;
  case (tUInt8)1u:
  case (tUInt8)41u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 233u;
    break;
  case (tUInt8)2u:
  case (tUInt8)40u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 248u;
    break;
  case (tUInt8)3u:
  case (tUInt8)39u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 217u;
    break;
  case (tUInt8)4u:
  case (tUInt8)38u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 134u;
    break;
  case (tUInt8)5u:
  case (tUInt8)13u:
  case (tUInt8)29u:
  case (tUInt8)37u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 0u;
    break;
  case (tUInt8)6u:
  case (tUInt8)36u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 8019u;
    break;
  case (tUInt8)7u:
  case (tUInt8)35u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7828u;
    break;
  case (tUInt8)8u:
  case (tUInt8)34u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7652u;
    break;
  case (tUInt8)9u:
  case (tUInt8)33u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7527u;
    break;
  case (tUInt8)10u:
  case (tUInt8)32u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7492u;
    break;
  case (tUInt8)11u:
  case (tUInt8)31u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7579u;
    break;
  case (tUInt8)12u:
  case (tUInt8)30u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7810u;
    break;
  case (tUInt8)14u:
  case (tUInt8)28u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 521u;
    break;
  case (tUInt8)15u:
  case (tUInt8)27u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 1151u;
    break;
  case (tUInt8)16u:
  case (tUInt8)26u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 1842u;
    break;
  case (tUInt8)17u:
  case (tUInt8)25u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 2533u;
    break;
  case (tUInt8)18u:
  case (tUInt8)24u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 3159u;
    break;
  case (tUInt8)19u:
  case (tUInt8)23u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 3660u;
    break;
  case (tUInt8)20u:
  case (tUInt8)22u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 3983u;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 4095u;
    break;
  default:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 2730u;
  }
  DEF_b__h31043 = (tUInt32)(DEF_samples_1___d48 >> 13u);
  switch (DEF_x__h36308) {
  case (tUInt8)0u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31042;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31043;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31044;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31045;
    break;
  case (tUInt8)4u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31046;
    break;
  case (tUInt8)5u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31047;
    break;
  case (tUInt8)6u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31048;
    break;
  case (tUInt8)7u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31049;
    break;
  case (tUInt8)8u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31050;
    break;
  case (tUInt8)9u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31051;
    break;
  case (tUInt8)10u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31052;
    break;
  case (tUInt8)11u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31053;
    break;
  case (tUInt8)12u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31054;
    break;
  case (tUInt8)13u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31055;
    break;
  case (tUInt8)14u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31056;
    break;
  case (tUInt8)15u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31057;
    break;
  case (tUInt8)16u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31058;
    break;
  case (tUInt8)17u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31059;
    break;
  case (tUInt8)18u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31060;
    break;
  case (tUInt8)19u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31061;
    break;
  case (tUInt8)20u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31062;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31063;
    break;
  case (tUInt8)22u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31064;
    break;
  case (tUInt8)23u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31065;
    break;
  case (tUInt8)24u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31066;
    break;
  case (tUInt8)25u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31067;
    break;
  case (tUInt8)26u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31068;
    break;
  case (tUInt8)27u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31069;
    break;
  case (tUInt8)28u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31070;
    break;
  case (tUInt8)29u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31071;
    break;
  case (tUInt8)30u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31072;
    break;
  case (tUInt8)31u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31073;
    break;
  case (tUInt8)32u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31074;
    break;
  case (tUInt8)33u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31075;
    break;
  case (tUInt8)34u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31076;
    break;
  case (tUInt8)35u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31077;
    break;
  case (tUInt8)36u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31078;
    break;
  case (tUInt8)37u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31079;
    break;
  case (tUInt8)38u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31080;
    break;
  case (tUInt8)39u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31081;
    break;
  case (tUInt8)40u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31082;
    break;
  case (tUInt8)41u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31083;
    break;
  case (tUInt8)42u:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = DEF_b__h31084;
    break;
  default:
    DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 = 2730u;
  }
  DEF_sum_40_BITS_25_TO_13_41_PLUS_SEL_ARR_samples_0_ETC___d249 = 67108863u & (((8191u & (DEF_b__h35212 + ((tUInt32)(8191u & (67108863u & (DEF_SEL_ARR_samples_0_6_BITS_25_TO_13_7_samples_1__ETC___d242 * DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244)))))) << 13u) | DEF_b__h35867);
  INST_conv_state_mkFSMstate.METH_write((tUInt8)7u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_sum.METH_write(DEF_sum_40_BITS_25_TO_13_41_PLUS_SEL_ARR_samples_0_ETC___d249);
}

void MOD_mkFIRfilter::RL_conv_action_l33c16()
{
  tUInt32 DEF_sum_40_BITS_25_TO_13_41_CONCAT_sum_40_BITS_12__ETC___d256;
  tUInt32 DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252;
  DEF_x__h36308 = INST_n.METH_read();
  DEF_samples_42___d130 = INST_samples_42.METH_read();
  DEF_samples_41___d128 = INST_samples_41.METH_read();
  DEF_samples_40___d126 = INST_samples_40.METH_read();
  DEF_samples_39___d124 = INST_samples_39.METH_read();
  DEF_samples_37___d120 = INST_samples_37.METH_read();
  DEF_samples_38___d122 = INST_samples_38.METH_read();
  DEF_samples_36___d118 = INST_samples_36.METH_read();
  DEF_samples_35___d116 = INST_samples_35.METH_read();
  DEF_samples_34___d114 = INST_samples_34.METH_read();
  DEF_samples_33___d112 = INST_samples_33.METH_read();
  DEF_samples_31___d108 = INST_samples_31.METH_read();
  DEF_samples_32___d110 = INST_samples_32.METH_read();
  DEF_samples_30___d106 = INST_samples_30.METH_read();
  DEF_samples_28___d102 = INST_samples_28.METH_read();
  DEF_samples_29___d104 = INST_samples_29.METH_read();
  DEF_samples_27___d100 = INST_samples_27.METH_read();
  DEF_samples_25___d96 = INST_samples_25.METH_read();
  DEF_samples_26___d98 = INST_samples_26.METH_read();
  DEF_samples_24___d94 = INST_samples_24.METH_read();
  DEF_samples_23___d92 = INST_samples_23.METH_read();
  DEF_samples_22___d90 = INST_samples_22.METH_read();
  DEF_samples_21___d88 = INST_samples_21.METH_read();
  DEF_samples_19___d84 = INST_samples_19.METH_read();
  DEF_samples_20___d86 = INST_samples_20.METH_read();
  DEF_samples_18___d82 = INST_samples_18.METH_read();
  DEF_samples_17___d80 = INST_samples_17.METH_read();
  DEF_samples_16___d78 = INST_samples_16.METH_read();
  DEF_samples_15___d76 = INST_samples_15.METH_read();
  DEF_samples_13___d72 = INST_samples_13.METH_read();
  DEF_samples_14___d74 = INST_samples_14.METH_read();
  DEF_samples_12___d70 = INST_samples_12.METH_read();
  DEF_samples_11___d68 = INST_samples_11.METH_read();
  DEF_samples_10___d66 = INST_samples_10.METH_read();
  DEF_samples_9___d64 = INST_samples_9.METH_read();
  DEF_samples_7___d60 = INST_samples_7.METH_read();
  DEF_samples_8___d62 = INST_samples_8.METH_read();
  DEF_samples_6___d58 = INST_samples_6.METH_read();
  DEF_samples_4___d54 = INST_samples_4.METH_read();
  DEF_samples_5___d56 = INST_samples_5.METH_read();
  DEF_samples_3___d52 = INST_samples_3.METH_read();
  DEF_samples_1___d48 = INST_samples_1.METH_read();
  DEF_samples_2___d50 = INST_samples_2.METH_read();
  DEF_samples_0___d46 = INST_samples_0.METH_read();
  DEF_sum___d240 = INST_sum.METH_read();
  DEF_b__h35212 = (tUInt32)(DEF_sum___d240 >> 13u);
  DEF_b__h35867 = (tUInt32)(8191u & DEF_sum___d240);
  DEF_b__h31215 = (tUInt32)(8191u & DEF_samples_42___d130);
  DEF_b__h31214 = (tUInt32)(8191u & DEF_samples_41___d128);
  DEF_b__h31213 = (tUInt32)(8191u & DEF_samples_40___d126);
  DEF_b__h31211 = (tUInt32)(8191u & DEF_samples_38___d122);
  DEF_b__h31212 = (tUInt32)(8191u & DEF_samples_39___d124);
  DEF_b__h31210 = (tUInt32)(8191u & DEF_samples_37___d120);
  DEF_b__h31208 = (tUInt32)(8191u & DEF_samples_35___d116);
  DEF_b__h31209 = (tUInt32)(8191u & DEF_samples_36___d118);
  DEF_b__h31207 = (tUInt32)(8191u & DEF_samples_34___d114);
  DEF_b__h31206 = (tUInt32)(8191u & DEF_samples_33___d112);
  DEF_b__h31205 = (tUInt32)(8191u & DEF_samples_32___d110);
  DEF_b__h31204 = (tUInt32)(8191u & DEF_samples_31___d108);
  DEF_b__h31202 = (tUInt32)(8191u & DEF_samples_29___d104);
  DEF_b__h31203 = (tUInt32)(8191u & DEF_samples_30___d106);
  DEF_b__h31201 = (tUInt32)(8191u & DEF_samples_28___d102);
  DEF_b__h31199 = (tUInt32)(8191u & DEF_samples_26___d98);
  DEF_b__h31200 = (tUInt32)(8191u & DEF_samples_27___d100);
  DEF_b__h31198 = (tUInt32)(8191u & DEF_samples_25___d96);
  DEF_b__h31197 = (tUInt32)(8191u & DEF_samples_24___d94);
  DEF_b__h31196 = (tUInt32)(8191u & DEF_samples_23___d92);
  DEF_b__h31195 = (tUInt32)(8191u & DEF_samples_22___d90);
  DEF_b__h31193 = (tUInt32)(8191u & DEF_samples_20___d86);
  DEF_b__h31194 = (tUInt32)(8191u & DEF_samples_21___d88);
  DEF_b__h31192 = (tUInt32)(8191u & DEF_samples_19___d84);
  DEF_b__h31190 = (tUInt32)(8191u & DEF_samples_17___d80);
  DEF_b__h31191 = (tUInt32)(8191u & DEF_samples_18___d82);
  DEF_b__h31189 = (tUInt32)(8191u & DEF_samples_16___d78);
  DEF_b__h31188 = (tUInt32)(8191u & DEF_samples_15___d76);
  DEF_b__h31187 = (tUInt32)(8191u & DEF_samples_14___d74);
  DEF_b__h31186 = (tUInt32)(8191u & DEF_samples_13___d72);
  DEF_b__h31185 = (tUInt32)(8191u & DEF_samples_12___d70);
  DEF_b__h31184 = (tUInt32)(8191u & DEF_samples_11___d68);
  DEF_b__h31183 = (tUInt32)(8191u & DEF_samples_10___d66);
  DEF_b__h31182 = (tUInt32)(8191u & DEF_samples_9___d64);
  DEF_b__h31181 = (tUInt32)(8191u & DEF_samples_8___d62);
  DEF_b__h31180 = (tUInt32)(8191u & DEF_samples_7___d60);
  DEF_b__h31179 = (tUInt32)(8191u & DEF_samples_6___d58);
  DEF_b__h31178 = (tUInt32)(8191u & DEF_samples_5___d56);
  DEF_b__h31177 = (tUInt32)(8191u & DEF_samples_4___d54);
  DEF_b__h31176 = (tUInt32)(8191u & DEF_samples_3___d52);
  DEF_b__h31175 = (tUInt32)(8191u & DEF_samples_2___d50);
  DEF_b__h31173 = (tUInt32)(8191u & DEF_samples_0___d46);
  switch (DEF_x__h36308) {
  case (tUInt8)0u:
  case (tUInt8)42u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 186u;
    break;
  case (tUInt8)1u:
  case (tUInt8)41u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 233u;
    break;
  case (tUInt8)2u:
  case (tUInt8)40u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 248u;
    break;
  case (tUInt8)3u:
  case (tUInt8)39u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 217u;
    break;
  case (tUInt8)4u:
  case (tUInt8)38u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 134u;
    break;
  case (tUInt8)5u:
  case (tUInt8)13u:
  case (tUInt8)29u:
  case (tUInt8)37u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 0u;
    break;
  case (tUInt8)6u:
  case (tUInt8)36u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 8019u;
    break;
  case (tUInt8)7u:
  case (tUInt8)35u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7828u;
    break;
  case (tUInt8)8u:
  case (tUInt8)34u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7652u;
    break;
  case (tUInt8)9u:
  case (tUInt8)33u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7527u;
    break;
  case (tUInt8)10u:
  case (tUInt8)32u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7492u;
    break;
  case (tUInt8)11u:
  case (tUInt8)31u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7579u;
    break;
  case (tUInt8)12u:
  case (tUInt8)30u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 7810u;
    break;
  case (tUInt8)14u:
  case (tUInt8)28u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 521u;
    break;
  case (tUInt8)15u:
  case (tUInt8)27u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 1151u;
    break;
  case (tUInt8)16u:
  case (tUInt8)26u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 1842u;
    break;
  case (tUInt8)17u:
  case (tUInt8)25u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 2533u;
    break;
  case (tUInt8)18u:
  case (tUInt8)24u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 3159u;
    break;
  case (tUInt8)19u:
  case (tUInt8)23u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 3660u;
    break;
  case (tUInt8)20u:
  case (tUInt8)22u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 3983u;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 4095u;
    break;
  default:
    DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = 2730u;
  }
  DEF_b__h31174 = (tUInt32)(8191u & DEF_samples_1___d48);
  switch (DEF_x__h36308) {
  case (tUInt8)0u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31173;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31174;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31175;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31176;
    break;
  case (tUInt8)4u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31177;
    break;
  case (tUInt8)5u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31178;
    break;
  case (tUInt8)6u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31179;
    break;
  case (tUInt8)7u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31180;
    break;
  case (tUInt8)8u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31181;
    break;
  case (tUInt8)9u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31182;
    break;
  case (tUInt8)10u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31183;
    break;
  case (tUInt8)11u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31184;
    break;
  case (tUInt8)12u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31185;
    break;
  case (tUInt8)13u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31186;
    break;
  case (tUInt8)14u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31187;
    break;
  case (tUInt8)15u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31188;
    break;
  case (tUInt8)16u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31189;
    break;
  case (tUInt8)17u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31190;
    break;
  case (tUInt8)18u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31191;
    break;
  case (tUInt8)19u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31192;
    break;
  case (tUInt8)20u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31193;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31194;
    break;
  case (tUInt8)22u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31195;
    break;
  case (tUInt8)23u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31196;
    break;
  case (tUInt8)24u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31197;
    break;
  case (tUInt8)25u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31198;
    break;
  case (tUInt8)26u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31199;
    break;
  case (tUInt8)27u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31200;
    break;
  case (tUInt8)28u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31201;
    break;
  case (tUInt8)29u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31202;
    break;
  case (tUInt8)30u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31203;
    break;
  case (tUInt8)31u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31204;
    break;
  case (tUInt8)32u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31205;
    break;
  case (tUInt8)33u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31206;
    break;
  case (tUInt8)34u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31207;
    break;
  case (tUInt8)35u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31208;
    break;
  case (tUInt8)36u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31209;
    break;
  case (tUInt8)37u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31210;
    break;
  case (tUInt8)38u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31211;
    break;
  case (tUInt8)39u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31212;
    break;
  case (tUInt8)40u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31213;
    break;
  case (tUInt8)41u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31214;
    break;
  case (tUInt8)42u:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = DEF_b__h31215;
    break;
  default:
    DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 = 2730u;
  }
  DEF_sum_40_BITS_25_TO_13_41_CONCAT_sum_40_BITS_12__ETC___d256 = 67108863u & ((DEF_b__h35212 << 13u) | (8191u & (DEF_b__h35867 + ((tUInt32)(8191u & (67108863u & (DEF_SEL_ARR_samples_0_6_BITS_12_TO_0_35_samples_1__ETC___d252 * DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244)))))));
  INST_conv_state_mkFSMstate.METH_write((tUInt8)8u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_sum.METH_write(DEF_sum_40_BITS_25_TO_13_41_CONCAT_sum_40_BITS_12__ETC___d256);
}

void MOD_mkFIRfilter::RL_conv_action_f_update_l31c9()
{
  tUInt8 DEF_n_7_PLUS_1___d259;
  DEF_x__h36308 = INST_n.METH_read();
  DEF_n_7_PLUS_1___d259 = (tUInt8)127u & (DEF_x__h36308 + (tUInt8)1u);
  INST_conv_state_mkFSMstate.METH_write((tUInt8)9u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write(DEF_n_7_PLUS_1___d259);
}

void MOD_mkFIRfilter::RL_conv_action_l35c12()
{
  DEF_sum___d240 = INST_sum.METH_read();
  INST_conv_state_mkFSMstate.METH_write((tUInt8)10u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_acc.METH_enq(DEF_sum___d240);
}

void MOD_mkFIRfilter::RL_conv_action_l36c13()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)11u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_sum.METH_write(0u);
}

void MOD_mkFIRfilter::RL_conv_idle_l24c20()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)0u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
}

void MOD_mkFIRfilter::RL_conv_fsm_start()
{
  INST_conv_start_wire.METH_wset((tUInt8)1u);
  INST_conv_start_reg_2.METH_wset((tUInt8)1u);
  INST_conv_start_reg.METH_write((tUInt8)0u);
}

void MOD_mkFIRfilter::RL_init()
{
  INST_conv_start_reg.METH_write((tUInt8)1u);
}

void MOD_mkFIRfilter::__me_check_5()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_init_l25c9 && (((((((((DEF_WILL_FIRE_RL_conv_action_l25c38 || DEF_WILL_FIRE_RL_conv_action_f_update_l25c9) || DEF_WILL_FIRE_RL_conv_action_l29c16) || DEF_WILL_FIRE_RL_conv_action_l30c18) || DEF_WILL_FIRE_RL_conv_action_f_init_l31c9) || DEF_WILL_FIRE_RL_conv_action_l32c16) || DEF_WILL_FIRE_RL_conv_action_l33c16) || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_1);
}

void MOD_mkFIRfilter::__me_check_6()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l25c38 && ((((((((DEF_WILL_FIRE_RL_conv_action_f_update_l25c9 || DEF_WILL_FIRE_RL_conv_action_l29c16) || DEF_WILL_FIRE_RL_conv_action_l30c18) || DEF_WILL_FIRE_RL_conv_action_f_init_l31c9) || DEF_WILL_FIRE_RL_conv_action_l32c16) || DEF_WILL_FIRE_RL_conv_action_l33c16) || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_2);
}

void MOD_mkFIRfilter::__me_check_7()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_update_l25c9 && (((((((DEF_WILL_FIRE_RL_conv_action_l29c16 || DEF_WILL_FIRE_RL_conv_action_l30c18) || DEF_WILL_FIRE_RL_conv_action_f_init_l31c9) || DEF_WILL_FIRE_RL_conv_action_l32c16) || DEF_WILL_FIRE_RL_conv_action_l33c16) || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_3);
}

void MOD_mkFIRfilter::__me_check_8()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l29c16 && ((((((DEF_WILL_FIRE_RL_conv_action_l30c18 || DEF_WILL_FIRE_RL_conv_action_f_init_l31c9) || DEF_WILL_FIRE_RL_conv_action_l32c16) || DEF_WILL_FIRE_RL_conv_action_l33c16) || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_4);
}

void MOD_mkFIRfilter::__me_check_9()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l30c18 && (((((DEF_WILL_FIRE_RL_conv_action_f_init_l31c9 || DEF_WILL_FIRE_RL_conv_action_l32c16) || DEF_WILL_FIRE_RL_conv_action_l33c16) || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_5);
}

void MOD_mkFIRfilter::__me_check_10()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_init_l31c9 && ((((DEF_WILL_FIRE_RL_conv_action_l32c16 || DEF_WILL_FIRE_RL_conv_action_l33c16) || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_6);
}

void MOD_mkFIRfilter::__me_check_11()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l32c16 && (((DEF_WILL_FIRE_RL_conv_action_l33c16 || DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_7);
}

void MOD_mkFIRfilter::__me_check_12()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l33c16 && ((DEF_WILL_FIRE_RL_conv_action_f_update_l31c9 || DEF_WILL_FIRE_RL_conv_action_l35c12) || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_8);
}

void MOD_mkFIRfilter::__me_check_13()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_update_l31c9 && (DEF_WILL_FIRE_RL_conv_action_l35c12 || DEF_WILL_FIRE_RL_conv_action_l36c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_9);
}

void MOD_mkFIRfilter::__me_check_14()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l35c12 && DEF_WILL_FIRE_RL_conv_action_l36c13)
      dollar_error(sim_hdl, this, "s", &__str_literal_10);
}


/* Methods */

void MOD_mkFIRfilter::METH_add_sample(tUInt32 ARG_add_sample_sample)
{
  INST_newSample.METH_enq(ARG_add_sample_sample);
}

tUInt8 MOD_mkFIRfilter::METH_RDY_add_sample()
{
  tUInt8 DEF_CAN_FIRE_add_sample;
  tUInt8 PORT_RDY_add_sample;
  DEF_CAN_FIRE_add_sample = INST_newSample.METH_i_notFull();
  PORT_RDY_add_sample = DEF_CAN_FIRE_add_sample;
  return PORT_RDY_add_sample;
}

tUInt32 MOD_mkFIRfilter::METH_get_value()
{
  tUInt32 DEF_get_value__avValue1;
  tUInt32 PORT_get_value;
  DEF_get_value__avValue1 = INST_acc.METH_first();
  PORT_get_value = DEF_get_value__avValue1;
  INST_acc.METH_deq();
  return PORT_get_value;
}

tUInt8 MOD_mkFIRfilter::METH_RDY_get_value()
{
  tUInt8 DEF_CAN_FIRE_get_value;
  tUInt8 PORT_RDY_get_value;
  DEF_CAN_FIRE_get_value = INST_acc.METH_i_notEmpty();
  PORT_RDY_get_value = DEF_CAN_FIRE_get_value;
  return PORT_RDY_get_value;
}


/* Reset routines */

void MOD_mkFIRfilter::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_sum.reset_RST(ARG_rst_in);
  INST_samples_9.reset_RST(ARG_rst_in);
  INST_samples_8.reset_RST(ARG_rst_in);
  INST_samples_7.reset_RST(ARG_rst_in);
  INST_samples_6.reset_RST(ARG_rst_in);
  INST_samples_5.reset_RST(ARG_rst_in);
  INST_samples_42.reset_RST(ARG_rst_in);
  INST_samples_41.reset_RST(ARG_rst_in);
  INST_samples_40.reset_RST(ARG_rst_in);
  INST_samples_4.reset_RST(ARG_rst_in);
  INST_samples_39.reset_RST(ARG_rst_in);
  INST_samples_38.reset_RST(ARG_rst_in);
  INST_samples_37.reset_RST(ARG_rst_in);
  INST_samples_36.reset_RST(ARG_rst_in);
  INST_samples_35.reset_RST(ARG_rst_in);
  INST_samples_34.reset_RST(ARG_rst_in);
  INST_samples_33.reset_RST(ARG_rst_in);
  INST_samples_32.reset_RST(ARG_rst_in);
  INST_samples_31.reset_RST(ARG_rst_in);
  INST_samples_30.reset_RST(ARG_rst_in);
  INST_samples_3.reset_RST(ARG_rst_in);
  INST_samples_29.reset_RST(ARG_rst_in);
  INST_samples_28.reset_RST(ARG_rst_in);
  INST_samples_27.reset_RST(ARG_rst_in);
  INST_samples_26.reset_RST(ARG_rst_in);
  INST_samples_25.reset_RST(ARG_rst_in);
  INST_samples_24.reset_RST(ARG_rst_in);
  INST_samples_23.reset_RST(ARG_rst_in);
  INST_samples_22.reset_RST(ARG_rst_in);
  INST_samples_21.reset_RST(ARG_rst_in);
  INST_samples_20.reset_RST(ARG_rst_in);
  INST_samples_2.reset_RST(ARG_rst_in);
  INST_samples_19.reset_RST(ARG_rst_in);
  INST_samples_18.reset_RST(ARG_rst_in);
  INST_samples_17.reset_RST(ARG_rst_in);
  INST_samples_16.reset_RST(ARG_rst_in);
  INST_samples_15.reset_RST(ARG_rst_in);
  INST_samples_14.reset_RST(ARG_rst_in);
  INST_samples_13.reset_RST(ARG_rst_in);
  INST_samples_12.reset_RST(ARG_rst_in);
  INST_samples_11.reset_RST(ARG_rst_in);
  INST_samples_10.reset_RST(ARG_rst_in);
  INST_samples_1.reset_RST(ARG_rst_in);
  INST_samples_0.reset_RST(ARG_rst_in);
  INST_newSample.reset_RST(ARG_rst_in);
  INST_n.reset_RST(ARG_rst_in);
  INST_conv_state_mkFSMstate.reset_RST(ARG_rst_in);
  INST_conv_state_fired.reset_RST(ARG_rst_in);
  INST_conv_state_can_overlap.reset_RST(ARG_rst_in);
  INST_conv_start_reg_1.reset_RST(ARG_rst_in);
  INST_conv_start_reg.reset_RST(ARG_rst_in);
  INST_acc.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkFIRfilter::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkFIRfilter::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_acc.dump_state(indent + 2u);
  INST_conv_abort.dump_state(indent + 2u);
  INST_conv_start_reg.dump_state(indent + 2u);
  INST_conv_start_reg_1.dump_state(indent + 2u);
  INST_conv_start_reg_2.dump_state(indent + 2u);
  INST_conv_start_wire.dump_state(indent + 2u);
  INST_conv_state_can_overlap.dump_state(indent + 2u);
  INST_conv_state_fired.dump_state(indent + 2u);
  INST_conv_state_fired_1.dump_state(indent + 2u);
  INST_conv_state_mkFSMstate.dump_state(indent + 2u);
  INST_conv_state_overlap_pw.dump_state(indent + 2u);
  INST_conv_state_set_pw.dump_state(indent + 2u);
  INST_n.dump_state(indent + 2u);
  INST_newSample.dump_state(indent + 2u);
  INST_samples_0.dump_state(indent + 2u);
  INST_samples_1.dump_state(indent + 2u);
  INST_samples_10.dump_state(indent + 2u);
  INST_samples_11.dump_state(indent + 2u);
  INST_samples_12.dump_state(indent + 2u);
  INST_samples_13.dump_state(indent + 2u);
  INST_samples_14.dump_state(indent + 2u);
  INST_samples_15.dump_state(indent + 2u);
  INST_samples_16.dump_state(indent + 2u);
  INST_samples_17.dump_state(indent + 2u);
  INST_samples_18.dump_state(indent + 2u);
  INST_samples_19.dump_state(indent + 2u);
  INST_samples_2.dump_state(indent + 2u);
  INST_samples_20.dump_state(indent + 2u);
  INST_samples_21.dump_state(indent + 2u);
  INST_samples_22.dump_state(indent + 2u);
  INST_samples_23.dump_state(indent + 2u);
  INST_samples_24.dump_state(indent + 2u);
  INST_samples_25.dump_state(indent + 2u);
  INST_samples_26.dump_state(indent + 2u);
  INST_samples_27.dump_state(indent + 2u);
  INST_samples_28.dump_state(indent + 2u);
  INST_samples_29.dump_state(indent + 2u);
  INST_samples_3.dump_state(indent + 2u);
  INST_samples_30.dump_state(indent + 2u);
  INST_samples_31.dump_state(indent + 2u);
  INST_samples_32.dump_state(indent + 2u);
  INST_samples_33.dump_state(indent + 2u);
  INST_samples_34.dump_state(indent + 2u);
  INST_samples_35.dump_state(indent + 2u);
  INST_samples_36.dump_state(indent + 2u);
  INST_samples_37.dump_state(indent + 2u);
  INST_samples_38.dump_state(indent + 2u);
  INST_samples_39.dump_state(indent + 2u);
  INST_samples_4.dump_state(indent + 2u);
  INST_samples_40.dump_state(indent + 2u);
  INST_samples_41.dump_state(indent + 2u);
  INST_samples_42.dump_state(indent + 2u);
  INST_samples_5.dump_state(indent + 2u);
  INST_samples_6.dump_state(indent + 2u);
  INST_samples_7.dump_state(indent + 2u);
  INST_samples_8.dump_state(indent + 2u);
  INST_samples_9.dump_state(indent + 2u);
  INST_sum.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkFIRfilter::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 205u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_init_l25c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_init_l31c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_update_l25c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_update_l31c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l25c38", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l29c16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l30c18", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l32c16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l33c16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l35c12", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l36c13", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31042", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31043", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31044", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31045", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31046", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31047", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31048", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31049", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31050", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31051", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31052", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31053", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31054", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31055", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31056", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31057", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31058", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31059", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31060", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31061", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31062", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31063", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31064", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31065", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31066", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31067", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31068", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31069", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31070", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31071", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31072", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31073", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31074", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31075", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31076", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31077", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31078", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31079", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31080", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31081", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31082", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31083", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31084", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31173", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31174", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31175", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31176", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31177", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31178", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31179", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31180", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31181", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31182", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31183", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31184", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31185", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31186", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31187", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31188", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31189", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31190", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31191", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31192", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31193", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31194", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31195", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31196", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31197", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31198", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31199", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31200", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31201", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31202", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31203", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31204", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31205", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31206", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31207", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31208", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31209", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31210", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31211", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31212", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31213", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31214", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h31215", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h35212", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h35867", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_0___d46", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_10___d66", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_11___d68", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_12___d70", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_13___d72", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_14___d74", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_15___d76", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_16___d78", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_17___d80", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_18___d82", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_19___d84", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_1___d48", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_20___d86", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_21___d88", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_22___d90", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_23___d92", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_24___d94", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_25___d96", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_26___d98", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_27___d100", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_28___d102", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_29___d104", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_2___d50", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_30___d106", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_31___d108", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_32___d110", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_33___d112", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_34___d114", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_35___d116", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_36___d118", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_37___d120", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_38___d122", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_39___d124", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_3___d52", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_40___d126", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_41___d128", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_42___d130", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_4___d54", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_5___d56", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_6___d58", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_7___d60", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_8___d62", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "samples_9___d64", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "sum___d240", 26u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h30825", 7u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h36308", 7u);
  num = INST_acc.dump_VCD_defs(num);
  num = INST_conv_abort.dump_VCD_defs(num);
  num = INST_conv_start_reg.dump_VCD_defs(num);
  num = INST_conv_start_reg_1.dump_VCD_defs(num);
  num = INST_conv_start_reg_2.dump_VCD_defs(num);
  num = INST_conv_start_wire.dump_VCD_defs(num);
  num = INST_conv_state_can_overlap.dump_VCD_defs(num);
  num = INST_conv_state_fired.dump_VCD_defs(num);
  num = INST_conv_state_fired_1.dump_VCD_defs(num);
  num = INST_conv_state_mkFSMstate.dump_VCD_defs(num);
  num = INST_conv_state_overlap_pw.dump_VCD_defs(num);
  num = INST_conv_state_set_pw.dump_VCD_defs(num);
  num = INST_n.dump_VCD_defs(num);
  num = INST_newSample.dump_VCD_defs(num);
  num = INST_samples_0.dump_VCD_defs(num);
  num = INST_samples_1.dump_VCD_defs(num);
  num = INST_samples_10.dump_VCD_defs(num);
  num = INST_samples_11.dump_VCD_defs(num);
  num = INST_samples_12.dump_VCD_defs(num);
  num = INST_samples_13.dump_VCD_defs(num);
  num = INST_samples_14.dump_VCD_defs(num);
  num = INST_samples_15.dump_VCD_defs(num);
  num = INST_samples_16.dump_VCD_defs(num);
  num = INST_samples_17.dump_VCD_defs(num);
  num = INST_samples_18.dump_VCD_defs(num);
  num = INST_samples_19.dump_VCD_defs(num);
  num = INST_samples_2.dump_VCD_defs(num);
  num = INST_samples_20.dump_VCD_defs(num);
  num = INST_samples_21.dump_VCD_defs(num);
  num = INST_samples_22.dump_VCD_defs(num);
  num = INST_samples_23.dump_VCD_defs(num);
  num = INST_samples_24.dump_VCD_defs(num);
  num = INST_samples_25.dump_VCD_defs(num);
  num = INST_samples_26.dump_VCD_defs(num);
  num = INST_samples_27.dump_VCD_defs(num);
  num = INST_samples_28.dump_VCD_defs(num);
  num = INST_samples_29.dump_VCD_defs(num);
  num = INST_samples_3.dump_VCD_defs(num);
  num = INST_samples_30.dump_VCD_defs(num);
  num = INST_samples_31.dump_VCD_defs(num);
  num = INST_samples_32.dump_VCD_defs(num);
  num = INST_samples_33.dump_VCD_defs(num);
  num = INST_samples_34.dump_VCD_defs(num);
  num = INST_samples_35.dump_VCD_defs(num);
  num = INST_samples_36.dump_VCD_defs(num);
  num = INST_samples_37.dump_VCD_defs(num);
  num = INST_samples_38.dump_VCD_defs(num);
  num = INST_samples_39.dump_VCD_defs(num);
  num = INST_samples_4.dump_VCD_defs(num);
  num = INST_samples_40.dump_VCD_defs(num);
  num = INST_samples_41.dump_VCD_defs(num);
  num = INST_samples_42.dump_VCD_defs(num);
  num = INST_samples_5.dump_VCD_defs(num);
  num = INST_samples_6.dump_VCD_defs(num);
  num = INST_samples_7.dump_VCD_defs(num);
  num = INST_samples_8.dump_VCD_defs(num);
  num = INST_samples_9.dump_VCD_defs(num);
  num = INST_sum.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkFIRfilter::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkFIRfilter &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkFIRfilter::vcd_defs(tVCDDumpType dt, MOD_mkFIRfilter &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 26u);
    vcd_write_x(sim_hdl, num++, 7u);
    vcd_write_x(sim_hdl, num++, 7u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244) != DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244)
      {
	vcd_write_val(sim_hdl, num, DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244, 13u);
	backing.DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_init_l25c9) != DEF_WILL_FIRE_RL_conv_action_f_init_l25c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_init_l25c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_init_l25c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l25c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_init_l31c9) != DEF_WILL_FIRE_RL_conv_action_f_init_l31c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_init_l31c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_init_l31c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l31c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_update_l25c9) != DEF_WILL_FIRE_RL_conv_action_f_update_l25c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_update_l25c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_update_l25c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l25c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_update_l31c9) != DEF_WILL_FIRE_RL_conv_action_f_update_l31c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_update_l31c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_update_l31c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l31c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l25c38) != DEF_WILL_FIRE_RL_conv_action_l25c38)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l25c38, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l25c38 = DEF_WILL_FIRE_RL_conv_action_l25c38;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l29c16) != DEF_WILL_FIRE_RL_conv_action_l29c16)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l29c16, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l29c16 = DEF_WILL_FIRE_RL_conv_action_l29c16;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l30c18) != DEF_WILL_FIRE_RL_conv_action_l30c18)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l30c18, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l30c18 = DEF_WILL_FIRE_RL_conv_action_l30c18;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l32c16) != DEF_WILL_FIRE_RL_conv_action_l32c16)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l32c16, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l32c16 = DEF_WILL_FIRE_RL_conv_action_l32c16;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l33c16) != DEF_WILL_FIRE_RL_conv_action_l33c16)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l33c16, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l33c16 = DEF_WILL_FIRE_RL_conv_action_l33c16;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l35c12) != DEF_WILL_FIRE_RL_conv_action_l35c12)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l35c12, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l35c12 = DEF_WILL_FIRE_RL_conv_action_l35c12;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l36c13) != DEF_WILL_FIRE_RL_conv_action_l36c13)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l36c13, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l36c13 = DEF_WILL_FIRE_RL_conv_action_l36c13;
      }
      ++num;
      if ((backing.DEF_b__h31042) != DEF_b__h31042)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31042, 13u);
	backing.DEF_b__h31042 = DEF_b__h31042;
      }
      ++num;
      if ((backing.DEF_b__h31043) != DEF_b__h31043)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31043, 13u);
	backing.DEF_b__h31043 = DEF_b__h31043;
      }
      ++num;
      if ((backing.DEF_b__h31044) != DEF_b__h31044)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31044, 13u);
	backing.DEF_b__h31044 = DEF_b__h31044;
      }
      ++num;
      if ((backing.DEF_b__h31045) != DEF_b__h31045)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31045, 13u);
	backing.DEF_b__h31045 = DEF_b__h31045;
      }
      ++num;
      if ((backing.DEF_b__h31046) != DEF_b__h31046)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31046, 13u);
	backing.DEF_b__h31046 = DEF_b__h31046;
      }
      ++num;
      if ((backing.DEF_b__h31047) != DEF_b__h31047)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31047, 13u);
	backing.DEF_b__h31047 = DEF_b__h31047;
      }
      ++num;
      if ((backing.DEF_b__h31048) != DEF_b__h31048)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31048, 13u);
	backing.DEF_b__h31048 = DEF_b__h31048;
      }
      ++num;
      if ((backing.DEF_b__h31049) != DEF_b__h31049)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31049, 13u);
	backing.DEF_b__h31049 = DEF_b__h31049;
      }
      ++num;
      if ((backing.DEF_b__h31050) != DEF_b__h31050)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31050, 13u);
	backing.DEF_b__h31050 = DEF_b__h31050;
      }
      ++num;
      if ((backing.DEF_b__h31051) != DEF_b__h31051)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31051, 13u);
	backing.DEF_b__h31051 = DEF_b__h31051;
      }
      ++num;
      if ((backing.DEF_b__h31052) != DEF_b__h31052)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31052, 13u);
	backing.DEF_b__h31052 = DEF_b__h31052;
      }
      ++num;
      if ((backing.DEF_b__h31053) != DEF_b__h31053)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31053, 13u);
	backing.DEF_b__h31053 = DEF_b__h31053;
      }
      ++num;
      if ((backing.DEF_b__h31054) != DEF_b__h31054)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31054, 13u);
	backing.DEF_b__h31054 = DEF_b__h31054;
      }
      ++num;
      if ((backing.DEF_b__h31055) != DEF_b__h31055)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31055, 13u);
	backing.DEF_b__h31055 = DEF_b__h31055;
      }
      ++num;
      if ((backing.DEF_b__h31056) != DEF_b__h31056)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31056, 13u);
	backing.DEF_b__h31056 = DEF_b__h31056;
      }
      ++num;
      if ((backing.DEF_b__h31057) != DEF_b__h31057)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31057, 13u);
	backing.DEF_b__h31057 = DEF_b__h31057;
      }
      ++num;
      if ((backing.DEF_b__h31058) != DEF_b__h31058)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31058, 13u);
	backing.DEF_b__h31058 = DEF_b__h31058;
      }
      ++num;
      if ((backing.DEF_b__h31059) != DEF_b__h31059)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31059, 13u);
	backing.DEF_b__h31059 = DEF_b__h31059;
      }
      ++num;
      if ((backing.DEF_b__h31060) != DEF_b__h31060)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31060, 13u);
	backing.DEF_b__h31060 = DEF_b__h31060;
      }
      ++num;
      if ((backing.DEF_b__h31061) != DEF_b__h31061)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31061, 13u);
	backing.DEF_b__h31061 = DEF_b__h31061;
      }
      ++num;
      if ((backing.DEF_b__h31062) != DEF_b__h31062)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31062, 13u);
	backing.DEF_b__h31062 = DEF_b__h31062;
      }
      ++num;
      if ((backing.DEF_b__h31063) != DEF_b__h31063)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31063, 13u);
	backing.DEF_b__h31063 = DEF_b__h31063;
      }
      ++num;
      if ((backing.DEF_b__h31064) != DEF_b__h31064)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31064, 13u);
	backing.DEF_b__h31064 = DEF_b__h31064;
      }
      ++num;
      if ((backing.DEF_b__h31065) != DEF_b__h31065)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31065, 13u);
	backing.DEF_b__h31065 = DEF_b__h31065;
      }
      ++num;
      if ((backing.DEF_b__h31066) != DEF_b__h31066)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31066, 13u);
	backing.DEF_b__h31066 = DEF_b__h31066;
      }
      ++num;
      if ((backing.DEF_b__h31067) != DEF_b__h31067)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31067, 13u);
	backing.DEF_b__h31067 = DEF_b__h31067;
      }
      ++num;
      if ((backing.DEF_b__h31068) != DEF_b__h31068)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31068, 13u);
	backing.DEF_b__h31068 = DEF_b__h31068;
      }
      ++num;
      if ((backing.DEF_b__h31069) != DEF_b__h31069)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31069, 13u);
	backing.DEF_b__h31069 = DEF_b__h31069;
      }
      ++num;
      if ((backing.DEF_b__h31070) != DEF_b__h31070)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31070, 13u);
	backing.DEF_b__h31070 = DEF_b__h31070;
      }
      ++num;
      if ((backing.DEF_b__h31071) != DEF_b__h31071)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31071, 13u);
	backing.DEF_b__h31071 = DEF_b__h31071;
      }
      ++num;
      if ((backing.DEF_b__h31072) != DEF_b__h31072)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31072, 13u);
	backing.DEF_b__h31072 = DEF_b__h31072;
      }
      ++num;
      if ((backing.DEF_b__h31073) != DEF_b__h31073)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31073, 13u);
	backing.DEF_b__h31073 = DEF_b__h31073;
      }
      ++num;
      if ((backing.DEF_b__h31074) != DEF_b__h31074)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31074, 13u);
	backing.DEF_b__h31074 = DEF_b__h31074;
      }
      ++num;
      if ((backing.DEF_b__h31075) != DEF_b__h31075)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31075, 13u);
	backing.DEF_b__h31075 = DEF_b__h31075;
      }
      ++num;
      if ((backing.DEF_b__h31076) != DEF_b__h31076)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31076, 13u);
	backing.DEF_b__h31076 = DEF_b__h31076;
      }
      ++num;
      if ((backing.DEF_b__h31077) != DEF_b__h31077)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31077, 13u);
	backing.DEF_b__h31077 = DEF_b__h31077;
      }
      ++num;
      if ((backing.DEF_b__h31078) != DEF_b__h31078)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31078, 13u);
	backing.DEF_b__h31078 = DEF_b__h31078;
      }
      ++num;
      if ((backing.DEF_b__h31079) != DEF_b__h31079)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31079, 13u);
	backing.DEF_b__h31079 = DEF_b__h31079;
      }
      ++num;
      if ((backing.DEF_b__h31080) != DEF_b__h31080)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31080, 13u);
	backing.DEF_b__h31080 = DEF_b__h31080;
      }
      ++num;
      if ((backing.DEF_b__h31081) != DEF_b__h31081)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31081, 13u);
	backing.DEF_b__h31081 = DEF_b__h31081;
      }
      ++num;
      if ((backing.DEF_b__h31082) != DEF_b__h31082)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31082, 13u);
	backing.DEF_b__h31082 = DEF_b__h31082;
      }
      ++num;
      if ((backing.DEF_b__h31083) != DEF_b__h31083)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31083, 13u);
	backing.DEF_b__h31083 = DEF_b__h31083;
      }
      ++num;
      if ((backing.DEF_b__h31084) != DEF_b__h31084)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31084, 13u);
	backing.DEF_b__h31084 = DEF_b__h31084;
      }
      ++num;
      if ((backing.DEF_b__h31173) != DEF_b__h31173)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31173, 13u);
	backing.DEF_b__h31173 = DEF_b__h31173;
      }
      ++num;
      if ((backing.DEF_b__h31174) != DEF_b__h31174)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31174, 13u);
	backing.DEF_b__h31174 = DEF_b__h31174;
      }
      ++num;
      if ((backing.DEF_b__h31175) != DEF_b__h31175)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31175, 13u);
	backing.DEF_b__h31175 = DEF_b__h31175;
      }
      ++num;
      if ((backing.DEF_b__h31176) != DEF_b__h31176)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31176, 13u);
	backing.DEF_b__h31176 = DEF_b__h31176;
      }
      ++num;
      if ((backing.DEF_b__h31177) != DEF_b__h31177)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31177, 13u);
	backing.DEF_b__h31177 = DEF_b__h31177;
      }
      ++num;
      if ((backing.DEF_b__h31178) != DEF_b__h31178)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31178, 13u);
	backing.DEF_b__h31178 = DEF_b__h31178;
      }
      ++num;
      if ((backing.DEF_b__h31179) != DEF_b__h31179)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31179, 13u);
	backing.DEF_b__h31179 = DEF_b__h31179;
      }
      ++num;
      if ((backing.DEF_b__h31180) != DEF_b__h31180)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31180, 13u);
	backing.DEF_b__h31180 = DEF_b__h31180;
      }
      ++num;
      if ((backing.DEF_b__h31181) != DEF_b__h31181)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31181, 13u);
	backing.DEF_b__h31181 = DEF_b__h31181;
      }
      ++num;
      if ((backing.DEF_b__h31182) != DEF_b__h31182)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31182, 13u);
	backing.DEF_b__h31182 = DEF_b__h31182;
      }
      ++num;
      if ((backing.DEF_b__h31183) != DEF_b__h31183)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31183, 13u);
	backing.DEF_b__h31183 = DEF_b__h31183;
      }
      ++num;
      if ((backing.DEF_b__h31184) != DEF_b__h31184)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31184, 13u);
	backing.DEF_b__h31184 = DEF_b__h31184;
      }
      ++num;
      if ((backing.DEF_b__h31185) != DEF_b__h31185)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31185, 13u);
	backing.DEF_b__h31185 = DEF_b__h31185;
      }
      ++num;
      if ((backing.DEF_b__h31186) != DEF_b__h31186)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31186, 13u);
	backing.DEF_b__h31186 = DEF_b__h31186;
      }
      ++num;
      if ((backing.DEF_b__h31187) != DEF_b__h31187)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31187, 13u);
	backing.DEF_b__h31187 = DEF_b__h31187;
      }
      ++num;
      if ((backing.DEF_b__h31188) != DEF_b__h31188)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31188, 13u);
	backing.DEF_b__h31188 = DEF_b__h31188;
      }
      ++num;
      if ((backing.DEF_b__h31189) != DEF_b__h31189)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31189, 13u);
	backing.DEF_b__h31189 = DEF_b__h31189;
      }
      ++num;
      if ((backing.DEF_b__h31190) != DEF_b__h31190)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31190, 13u);
	backing.DEF_b__h31190 = DEF_b__h31190;
      }
      ++num;
      if ((backing.DEF_b__h31191) != DEF_b__h31191)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31191, 13u);
	backing.DEF_b__h31191 = DEF_b__h31191;
      }
      ++num;
      if ((backing.DEF_b__h31192) != DEF_b__h31192)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31192, 13u);
	backing.DEF_b__h31192 = DEF_b__h31192;
      }
      ++num;
      if ((backing.DEF_b__h31193) != DEF_b__h31193)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31193, 13u);
	backing.DEF_b__h31193 = DEF_b__h31193;
      }
      ++num;
      if ((backing.DEF_b__h31194) != DEF_b__h31194)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31194, 13u);
	backing.DEF_b__h31194 = DEF_b__h31194;
      }
      ++num;
      if ((backing.DEF_b__h31195) != DEF_b__h31195)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31195, 13u);
	backing.DEF_b__h31195 = DEF_b__h31195;
      }
      ++num;
      if ((backing.DEF_b__h31196) != DEF_b__h31196)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31196, 13u);
	backing.DEF_b__h31196 = DEF_b__h31196;
      }
      ++num;
      if ((backing.DEF_b__h31197) != DEF_b__h31197)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31197, 13u);
	backing.DEF_b__h31197 = DEF_b__h31197;
      }
      ++num;
      if ((backing.DEF_b__h31198) != DEF_b__h31198)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31198, 13u);
	backing.DEF_b__h31198 = DEF_b__h31198;
      }
      ++num;
      if ((backing.DEF_b__h31199) != DEF_b__h31199)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31199, 13u);
	backing.DEF_b__h31199 = DEF_b__h31199;
      }
      ++num;
      if ((backing.DEF_b__h31200) != DEF_b__h31200)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31200, 13u);
	backing.DEF_b__h31200 = DEF_b__h31200;
      }
      ++num;
      if ((backing.DEF_b__h31201) != DEF_b__h31201)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31201, 13u);
	backing.DEF_b__h31201 = DEF_b__h31201;
      }
      ++num;
      if ((backing.DEF_b__h31202) != DEF_b__h31202)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31202, 13u);
	backing.DEF_b__h31202 = DEF_b__h31202;
      }
      ++num;
      if ((backing.DEF_b__h31203) != DEF_b__h31203)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31203, 13u);
	backing.DEF_b__h31203 = DEF_b__h31203;
      }
      ++num;
      if ((backing.DEF_b__h31204) != DEF_b__h31204)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31204, 13u);
	backing.DEF_b__h31204 = DEF_b__h31204;
      }
      ++num;
      if ((backing.DEF_b__h31205) != DEF_b__h31205)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31205, 13u);
	backing.DEF_b__h31205 = DEF_b__h31205;
      }
      ++num;
      if ((backing.DEF_b__h31206) != DEF_b__h31206)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31206, 13u);
	backing.DEF_b__h31206 = DEF_b__h31206;
      }
      ++num;
      if ((backing.DEF_b__h31207) != DEF_b__h31207)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31207, 13u);
	backing.DEF_b__h31207 = DEF_b__h31207;
      }
      ++num;
      if ((backing.DEF_b__h31208) != DEF_b__h31208)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31208, 13u);
	backing.DEF_b__h31208 = DEF_b__h31208;
      }
      ++num;
      if ((backing.DEF_b__h31209) != DEF_b__h31209)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31209, 13u);
	backing.DEF_b__h31209 = DEF_b__h31209;
      }
      ++num;
      if ((backing.DEF_b__h31210) != DEF_b__h31210)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31210, 13u);
	backing.DEF_b__h31210 = DEF_b__h31210;
      }
      ++num;
      if ((backing.DEF_b__h31211) != DEF_b__h31211)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31211, 13u);
	backing.DEF_b__h31211 = DEF_b__h31211;
      }
      ++num;
      if ((backing.DEF_b__h31212) != DEF_b__h31212)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31212, 13u);
	backing.DEF_b__h31212 = DEF_b__h31212;
      }
      ++num;
      if ((backing.DEF_b__h31213) != DEF_b__h31213)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31213, 13u);
	backing.DEF_b__h31213 = DEF_b__h31213;
      }
      ++num;
      if ((backing.DEF_b__h31214) != DEF_b__h31214)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31214, 13u);
	backing.DEF_b__h31214 = DEF_b__h31214;
      }
      ++num;
      if ((backing.DEF_b__h31215) != DEF_b__h31215)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h31215, 13u);
	backing.DEF_b__h31215 = DEF_b__h31215;
      }
      ++num;
      if ((backing.DEF_b__h35212) != DEF_b__h35212)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h35212, 13u);
	backing.DEF_b__h35212 = DEF_b__h35212;
      }
      ++num;
      if ((backing.DEF_b__h35867) != DEF_b__h35867)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h35867, 13u);
	backing.DEF_b__h35867 = DEF_b__h35867;
      }
      ++num;
      if ((backing.DEF_samples_0___d46) != DEF_samples_0___d46)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_0___d46, 26u);
	backing.DEF_samples_0___d46 = DEF_samples_0___d46;
      }
      ++num;
      if ((backing.DEF_samples_10___d66) != DEF_samples_10___d66)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_10___d66, 26u);
	backing.DEF_samples_10___d66 = DEF_samples_10___d66;
      }
      ++num;
      if ((backing.DEF_samples_11___d68) != DEF_samples_11___d68)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_11___d68, 26u);
	backing.DEF_samples_11___d68 = DEF_samples_11___d68;
      }
      ++num;
      if ((backing.DEF_samples_12___d70) != DEF_samples_12___d70)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_12___d70, 26u);
	backing.DEF_samples_12___d70 = DEF_samples_12___d70;
      }
      ++num;
      if ((backing.DEF_samples_13___d72) != DEF_samples_13___d72)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_13___d72, 26u);
	backing.DEF_samples_13___d72 = DEF_samples_13___d72;
      }
      ++num;
      if ((backing.DEF_samples_14___d74) != DEF_samples_14___d74)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_14___d74, 26u);
	backing.DEF_samples_14___d74 = DEF_samples_14___d74;
      }
      ++num;
      if ((backing.DEF_samples_15___d76) != DEF_samples_15___d76)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_15___d76, 26u);
	backing.DEF_samples_15___d76 = DEF_samples_15___d76;
      }
      ++num;
      if ((backing.DEF_samples_16___d78) != DEF_samples_16___d78)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_16___d78, 26u);
	backing.DEF_samples_16___d78 = DEF_samples_16___d78;
      }
      ++num;
      if ((backing.DEF_samples_17___d80) != DEF_samples_17___d80)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_17___d80, 26u);
	backing.DEF_samples_17___d80 = DEF_samples_17___d80;
      }
      ++num;
      if ((backing.DEF_samples_18___d82) != DEF_samples_18___d82)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_18___d82, 26u);
	backing.DEF_samples_18___d82 = DEF_samples_18___d82;
      }
      ++num;
      if ((backing.DEF_samples_19___d84) != DEF_samples_19___d84)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_19___d84, 26u);
	backing.DEF_samples_19___d84 = DEF_samples_19___d84;
      }
      ++num;
      if ((backing.DEF_samples_1___d48) != DEF_samples_1___d48)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_1___d48, 26u);
	backing.DEF_samples_1___d48 = DEF_samples_1___d48;
      }
      ++num;
      if ((backing.DEF_samples_20___d86) != DEF_samples_20___d86)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_20___d86, 26u);
	backing.DEF_samples_20___d86 = DEF_samples_20___d86;
      }
      ++num;
      if ((backing.DEF_samples_21___d88) != DEF_samples_21___d88)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_21___d88, 26u);
	backing.DEF_samples_21___d88 = DEF_samples_21___d88;
      }
      ++num;
      if ((backing.DEF_samples_22___d90) != DEF_samples_22___d90)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_22___d90, 26u);
	backing.DEF_samples_22___d90 = DEF_samples_22___d90;
      }
      ++num;
      if ((backing.DEF_samples_23___d92) != DEF_samples_23___d92)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_23___d92, 26u);
	backing.DEF_samples_23___d92 = DEF_samples_23___d92;
      }
      ++num;
      if ((backing.DEF_samples_24___d94) != DEF_samples_24___d94)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_24___d94, 26u);
	backing.DEF_samples_24___d94 = DEF_samples_24___d94;
      }
      ++num;
      if ((backing.DEF_samples_25___d96) != DEF_samples_25___d96)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_25___d96, 26u);
	backing.DEF_samples_25___d96 = DEF_samples_25___d96;
      }
      ++num;
      if ((backing.DEF_samples_26___d98) != DEF_samples_26___d98)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_26___d98, 26u);
	backing.DEF_samples_26___d98 = DEF_samples_26___d98;
      }
      ++num;
      if ((backing.DEF_samples_27___d100) != DEF_samples_27___d100)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_27___d100, 26u);
	backing.DEF_samples_27___d100 = DEF_samples_27___d100;
      }
      ++num;
      if ((backing.DEF_samples_28___d102) != DEF_samples_28___d102)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_28___d102, 26u);
	backing.DEF_samples_28___d102 = DEF_samples_28___d102;
      }
      ++num;
      if ((backing.DEF_samples_29___d104) != DEF_samples_29___d104)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_29___d104, 26u);
	backing.DEF_samples_29___d104 = DEF_samples_29___d104;
      }
      ++num;
      if ((backing.DEF_samples_2___d50) != DEF_samples_2___d50)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_2___d50, 26u);
	backing.DEF_samples_2___d50 = DEF_samples_2___d50;
      }
      ++num;
      if ((backing.DEF_samples_30___d106) != DEF_samples_30___d106)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_30___d106, 26u);
	backing.DEF_samples_30___d106 = DEF_samples_30___d106;
      }
      ++num;
      if ((backing.DEF_samples_31___d108) != DEF_samples_31___d108)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_31___d108, 26u);
	backing.DEF_samples_31___d108 = DEF_samples_31___d108;
      }
      ++num;
      if ((backing.DEF_samples_32___d110) != DEF_samples_32___d110)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_32___d110, 26u);
	backing.DEF_samples_32___d110 = DEF_samples_32___d110;
      }
      ++num;
      if ((backing.DEF_samples_33___d112) != DEF_samples_33___d112)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_33___d112, 26u);
	backing.DEF_samples_33___d112 = DEF_samples_33___d112;
      }
      ++num;
      if ((backing.DEF_samples_34___d114) != DEF_samples_34___d114)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_34___d114, 26u);
	backing.DEF_samples_34___d114 = DEF_samples_34___d114;
      }
      ++num;
      if ((backing.DEF_samples_35___d116) != DEF_samples_35___d116)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_35___d116, 26u);
	backing.DEF_samples_35___d116 = DEF_samples_35___d116;
      }
      ++num;
      if ((backing.DEF_samples_36___d118) != DEF_samples_36___d118)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_36___d118, 26u);
	backing.DEF_samples_36___d118 = DEF_samples_36___d118;
      }
      ++num;
      if ((backing.DEF_samples_37___d120) != DEF_samples_37___d120)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_37___d120, 26u);
	backing.DEF_samples_37___d120 = DEF_samples_37___d120;
      }
      ++num;
      if ((backing.DEF_samples_38___d122) != DEF_samples_38___d122)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_38___d122, 26u);
	backing.DEF_samples_38___d122 = DEF_samples_38___d122;
      }
      ++num;
      if ((backing.DEF_samples_39___d124) != DEF_samples_39___d124)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_39___d124, 26u);
	backing.DEF_samples_39___d124 = DEF_samples_39___d124;
      }
      ++num;
      if ((backing.DEF_samples_3___d52) != DEF_samples_3___d52)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_3___d52, 26u);
	backing.DEF_samples_3___d52 = DEF_samples_3___d52;
      }
      ++num;
      if ((backing.DEF_samples_40___d126) != DEF_samples_40___d126)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_40___d126, 26u);
	backing.DEF_samples_40___d126 = DEF_samples_40___d126;
      }
      ++num;
      if ((backing.DEF_samples_41___d128) != DEF_samples_41___d128)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_41___d128, 26u);
	backing.DEF_samples_41___d128 = DEF_samples_41___d128;
      }
      ++num;
      if ((backing.DEF_samples_42___d130) != DEF_samples_42___d130)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_42___d130, 26u);
	backing.DEF_samples_42___d130 = DEF_samples_42___d130;
      }
      ++num;
      if ((backing.DEF_samples_4___d54) != DEF_samples_4___d54)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_4___d54, 26u);
	backing.DEF_samples_4___d54 = DEF_samples_4___d54;
      }
      ++num;
      if ((backing.DEF_samples_5___d56) != DEF_samples_5___d56)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_5___d56, 26u);
	backing.DEF_samples_5___d56 = DEF_samples_5___d56;
      }
      ++num;
      if ((backing.DEF_samples_6___d58) != DEF_samples_6___d58)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_6___d58, 26u);
	backing.DEF_samples_6___d58 = DEF_samples_6___d58;
      }
      ++num;
      if ((backing.DEF_samples_7___d60) != DEF_samples_7___d60)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_7___d60, 26u);
	backing.DEF_samples_7___d60 = DEF_samples_7___d60;
      }
      ++num;
      if ((backing.DEF_samples_8___d62) != DEF_samples_8___d62)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_8___d62, 26u);
	backing.DEF_samples_8___d62 = DEF_samples_8___d62;
      }
      ++num;
      if ((backing.DEF_samples_9___d64) != DEF_samples_9___d64)
      {
	vcd_write_val(sim_hdl, num, DEF_samples_9___d64, 26u);
	backing.DEF_samples_9___d64 = DEF_samples_9___d64;
      }
      ++num;
      if ((backing.DEF_sum___d240) != DEF_sum___d240)
      {
	vcd_write_val(sim_hdl, num, DEF_sum___d240, 26u);
	backing.DEF_sum___d240 = DEF_sum___d240;
      }
      ++num;
      if ((backing.DEF_x__h30825) != DEF_x__h30825)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h30825, 7u);
	backing.DEF_x__h30825 = DEF_x__h30825;
      }
      ++num;
      if ((backing.DEF_x__h36308) != DEF_x__h36308)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h36308, 7u);
	backing.DEF_x__h36308 = DEF_x__h36308;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244, 13u);
      backing.DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244 = DEF_SEL_ARR_186_233_248_217_134_0_8019_7828_7652_7_ETC___d244;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_init_l25c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_init_l25c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l25c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_init_l31c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_init_l31c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l31c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_update_l25c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_update_l25c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l25c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_update_l31c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_update_l31c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l31c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l25c38, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l25c38 = DEF_WILL_FIRE_RL_conv_action_l25c38;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l29c16, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l29c16 = DEF_WILL_FIRE_RL_conv_action_l29c16;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l30c18, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l30c18 = DEF_WILL_FIRE_RL_conv_action_l30c18;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l32c16, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l32c16 = DEF_WILL_FIRE_RL_conv_action_l32c16;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l33c16, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l33c16 = DEF_WILL_FIRE_RL_conv_action_l33c16;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l35c12, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l35c12 = DEF_WILL_FIRE_RL_conv_action_l35c12;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l36c13, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l36c13 = DEF_WILL_FIRE_RL_conv_action_l36c13;
      vcd_write_val(sim_hdl, num++, DEF_b__h31042, 13u);
      backing.DEF_b__h31042 = DEF_b__h31042;
      vcd_write_val(sim_hdl, num++, DEF_b__h31043, 13u);
      backing.DEF_b__h31043 = DEF_b__h31043;
      vcd_write_val(sim_hdl, num++, DEF_b__h31044, 13u);
      backing.DEF_b__h31044 = DEF_b__h31044;
      vcd_write_val(sim_hdl, num++, DEF_b__h31045, 13u);
      backing.DEF_b__h31045 = DEF_b__h31045;
      vcd_write_val(sim_hdl, num++, DEF_b__h31046, 13u);
      backing.DEF_b__h31046 = DEF_b__h31046;
      vcd_write_val(sim_hdl, num++, DEF_b__h31047, 13u);
      backing.DEF_b__h31047 = DEF_b__h31047;
      vcd_write_val(sim_hdl, num++, DEF_b__h31048, 13u);
      backing.DEF_b__h31048 = DEF_b__h31048;
      vcd_write_val(sim_hdl, num++, DEF_b__h31049, 13u);
      backing.DEF_b__h31049 = DEF_b__h31049;
      vcd_write_val(sim_hdl, num++, DEF_b__h31050, 13u);
      backing.DEF_b__h31050 = DEF_b__h31050;
      vcd_write_val(sim_hdl, num++, DEF_b__h31051, 13u);
      backing.DEF_b__h31051 = DEF_b__h31051;
      vcd_write_val(sim_hdl, num++, DEF_b__h31052, 13u);
      backing.DEF_b__h31052 = DEF_b__h31052;
      vcd_write_val(sim_hdl, num++, DEF_b__h31053, 13u);
      backing.DEF_b__h31053 = DEF_b__h31053;
      vcd_write_val(sim_hdl, num++, DEF_b__h31054, 13u);
      backing.DEF_b__h31054 = DEF_b__h31054;
      vcd_write_val(sim_hdl, num++, DEF_b__h31055, 13u);
      backing.DEF_b__h31055 = DEF_b__h31055;
      vcd_write_val(sim_hdl, num++, DEF_b__h31056, 13u);
      backing.DEF_b__h31056 = DEF_b__h31056;
      vcd_write_val(sim_hdl, num++, DEF_b__h31057, 13u);
      backing.DEF_b__h31057 = DEF_b__h31057;
      vcd_write_val(sim_hdl, num++, DEF_b__h31058, 13u);
      backing.DEF_b__h31058 = DEF_b__h31058;
      vcd_write_val(sim_hdl, num++, DEF_b__h31059, 13u);
      backing.DEF_b__h31059 = DEF_b__h31059;
      vcd_write_val(sim_hdl, num++, DEF_b__h31060, 13u);
      backing.DEF_b__h31060 = DEF_b__h31060;
      vcd_write_val(sim_hdl, num++, DEF_b__h31061, 13u);
      backing.DEF_b__h31061 = DEF_b__h31061;
      vcd_write_val(sim_hdl, num++, DEF_b__h31062, 13u);
      backing.DEF_b__h31062 = DEF_b__h31062;
      vcd_write_val(sim_hdl, num++, DEF_b__h31063, 13u);
      backing.DEF_b__h31063 = DEF_b__h31063;
      vcd_write_val(sim_hdl, num++, DEF_b__h31064, 13u);
      backing.DEF_b__h31064 = DEF_b__h31064;
      vcd_write_val(sim_hdl, num++, DEF_b__h31065, 13u);
      backing.DEF_b__h31065 = DEF_b__h31065;
      vcd_write_val(sim_hdl, num++, DEF_b__h31066, 13u);
      backing.DEF_b__h31066 = DEF_b__h31066;
      vcd_write_val(sim_hdl, num++, DEF_b__h31067, 13u);
      backing.DEF_b__h31067 = DEF_b__h31067;
      vcd_write_val(sim_hdl, num++, DEF_b__h31068, 13u);
      backing.DEF_b__h31068 = DEF_b__h31068;
      vcd_write_val(sim_hdl, num++, DEF_b__h31069, 13u);
      backing.DEF_b__h31069 = DEF_b__h31069;
      vcd_write_val(sim_hdl, num++, DEF_b__h31070, 13u);
      backing.DEF_b__h31070 = DEF_b__h31070;
      vcd_write_val(sim_hdl, num++, DEF_b__h31071, 13u);
      backing.DEF_b__h31071 = DEF_b__h31071;
      vcd_write_val(sim_hdl, num++, DEF_b__h31072, 13u);
      backing.DEF_b__h31072 = DEF_b__h31072;
      vcd_write_val(sim_hdl, num++, DEF_b__h31073, 13u);
      backing.DEF_b__h31073 = DEF_b__h31073;
      vcd_write_val(sim_hdl, num++, DEF_b__h31074, 13u);
      backing.DEF_b__h31074 = DEF_b__h31074;
      vcd_write_val(sim_hdl, num++, DEF_b__h31075, 13u);
      backing.DEF_b__h31075 = DEF_b__h31075;
      vcd_write_val(sim_hdl, num++, DEF_b__h31076, 13u);
      backing.DEF_b__h31076 = DEF_b__h31076;
      vcd_write_val(sim_hdl, num++, DEF_b__h31077, 13u);
      backing.DEF_b__h31077 = DEF_b__h31077;
      vcd_write_val(sim_hdl, num++, DEF_b__h31078, 13u);
      backing.DEF_b__h31078 = DEF_b__h31078;
      vcd_write_val(sim_hdl, num++, DEF_b__h31079, 13u);
      backing.DEF_b__h31079 = DEF_b__h31079;
      vcd_write_val(sim_hdl, num++, DEF_b__h31080, 13u);
      backing.DEF_b__h31080 = DEF_b__h31080;
      vcd_write_val(sim_hdl, num++, DEF_b__h31081, 13u);
      backing.DEF_b__h31081 = DEF_b__h31081;
      vcd_write_val(sim_hdl, num++, DEF_b__h31082, 13u);
      backing.DEF_b__h31082 = DEF_b__h31082;
      vcd_write_val(sim_hdl, num++, DEF_b__h31083, 13u);
      backing.DEF_b__h31083 = DEF_b__h31083;
      vcd_write_val(sim_hdl, num++, DEF_b__h31084, 13u);
      backing.DEF_b__h31084 = DEF_b__h31084;
      vcd_write_val(sim_hdl, num++, DEF_b__h31173, 13u);
      backing.DEF_b__h31173 = DEF_b__h31173;
      vcd_write_val(sim_hdl, num++, DEF_b__h31174, 13u);
      backing.DEF_b__h31174 = DEF_b__h31174;
      vcd_write_val(sim_hdl, num++, DEF_b__h31175, 13u);
      backing.DEF_b__h31175 = DEF_b__h31175;
      vcd_write_val(sim_hdl, num++, DEF_b__h31176, 13u);
      backing.DEF_b__h31176 = DEF_b__h31176;
      vcd_write_val(sim_hdl, num++, DEF_b__h31177, 13u);
      backing.DEF_b__h31177 = DEF_b__h31177;
      vcd_write_val(sim_hdl, num++, DEF_b__h31178, 13u);
      backing.DEF_b__h31178 = DEF_b__h31178;
      vcd_write_val(sim_hdl, num++, DEF_b__h31179, 13u);
      backing.DEF_b__h31179 = DEF_b__h31179;
      vcd_write_val(sim_hdl, num++, DEF_b__h31180, 13u);
      backing.DEF_b__h31180 = DEF_b__h31180;
      vcd_write_val(sim_hdl, num++, DEF_b__h31181, 13u);
      backing.DEF_b__h31181 = DEF_b__h31181;
      vcd_write_val(sim_hdl, num++, DEF_b__h31182, 13u);
      backing.DEF_b__h31182 = DEF_b__h31182;
      vcd_write_val(sim_hdl, num++, DEF_b__h31183, 13u);
      backing.DEF_b__h31183 = DEF_b__h31183;
      vcd_write_val(sim_hdl, num++, DEF_b__h31184, 13u);
      backing.DEF_b__h31184 = DEF_b__h31184;
      vcd_write_val(sim_hdl, num++, DEF_b__h31185, 13u);
      backing.DEF_b__h31185 = DEF_b__h31185;
      vcd_write_val(sim_hdl, num++, DEF_b__h31186, 13u);
      backing.DEF_b__h31186 = DEF_b__h31186;
      vcd_write_val(sim_hdl, num++, DEF_b__h31187, 13u);
      backing.DEF_b__h31187 = DEF_b__h31187;
      vcd_write_val(sim_hdl, num++, DEF_b__h31188, 13u);
      backing.DEF_b__h31188 = DEF_b__h31188;
      vcd_write_val(sim_hdl, num++, DEF_b__h31189, 13u);
      backing.DEF_b__h31189 = DEF_b__h31189;
      vcd_write_val(sim_hdl, num++, DEF_b__h31190, 13u);
      backing.DEF_b__h31190 = DEF_b__h31190;
      vcd_write_val(sim_hdl, num++, DEF_b__h31191, 13u);
      backing.DEF_b__h31191 = DEF_b__h31191;
      vcd_write_val(sim_hdl, num++, DEF_b__h31192, 13u);
      backing.DEF_b__h31192 = DEF_b__h31192;
      vcd_write_val(sim_hdl, num++, DEF_b__h31193, 13u);
      backing.DEF_b__h31193 = DEF_b__h31193;
      vcd_write_val(sim_hdl, num++, DEF_b__h31194, 13u);
      backing.DEF_b__h31194 = DEF_b__h31194;
      vcd_write_val(sim_hdl, num++, DEF_b__h31195, 13u);
      backing.DEF_b__h31195 = DEF_b__h31195;
      vcd_write_val(sim_hdl, num++, DEF_b__h31196, 13u);
      backing.DEF_b__h31196 = DEF_b__h31196;
      vcd_write_val(sim_hdl, num++, DEF_b__h31197, 13u);
      backing.DEF_b__h31197 = DEF_b__h31197;
      vcd_write_val(sim_hdl, num++, DEF_b__h31198, 13u);
      backing.DEF_b__h31198 = DEF_b__h31198;
      vcd_write_val(sim_hdl, num++, DEF_b__h31199, 13u);
      backing.DEF_b__h31199 = DEF_b__h31199;
      vcd_write_val(sim_hdl, num++, DEF_b__h31200, 13u);
      backing.DEF_b__h31200 = DEF_b__h31200;
      vcd_write_val(sim_hdl, num++, DEF_b__h31201, 13u);
      backing.DEF_b__h31201 = DEF_b__h31201;
      vcd_write_val(sim_hdl, num++, DEF_b__h31202, 13u);
      backing.DEF_b__h31202 = DEF_b__h31202;
      vcd_write_val(sim_hdl, num++, DEF_b__h31203, 13u);
      backing.DEF_b__h31203 = DEF_b__h31203;
      vcd_write_val(sim_hdl, num++, DEF_b__h31204, 13u);
      backing.DEF_b__h31204 = DEF_b__h31204;
      vcd_write_val(sim_hdl, num++, DEF_b__h31205, 13u);
      backing.DEF_b__h31205 = DEF_b__h31205;
      vcd_write_val(sim_hdl, num++, DEF_b__h31206, 13u);
      backing.DEF_b__h31206 = DEF_b__h31206;
      vcd_write_val(sim_hdl, num++, DEF_b__h31207, 13u);
      backing.DEF_b__h31207 = DEF_b__h31207;
      vcd_write_val(sim_hdl, num++, DEF_b__h31208, 13u);
      backing.DEF_b__h31208 = DEF_b__h31208;
      vcd_write_val(sim_hdl, num++, DEF_b__h31209, 13u);
      backing.DEF_b__h31209 = DEF_b__h31209;
      vcd_write_val(sim_hdl, num++, DEF_b__h31210, 13u);
      backing.DEF_b__h31210 = DEF_b__h31210;
      vcd_write_val(sim_hdl, num++, DEF_b__h31211, 13u);
      backing.DEF_b__h31211 = DEF_b__h31211;
      vcd_write_val(sim_hdl, num++, DEF_b__h31212, 13u);
      backing.DEF_b__h31212 = DEF_b__h31212;
      vcd_write_val(sim_hdl, num++, DEF_b__h31213, 13u);
      backing.DEF_b__h31213 = DEF_b__h31213;
      vcd_write_val(sim_hdl, num++, DEF_b__h31214, 13u);
      backing.DEF_b__h31214 = DEF_b__h31214;
      vcd_write_val(sim_hdl, num++, DEF_b__h31215, 13u);
      backing.DEF_b__h31215 = DEF_b__h31215;
      vcd_write_val(sim_hdl, num++, DEF_b__h35212, 13u);
      backing.DEF_b__h35212 = DEF_b__h35212;
      vcd_write_val(sim_hdl, num++, DEF_b__h35867, 13u);
      backing.DEF_b__h35867 = DEF_b__h35867;
      vcd_write_val(sim_hdl, num++, DEF_samples_0___d46, 26u);
      backing.DEF_samples_0___d46 = DEF_samples_0___d46;
      vcd_write_val(sim_hdl, num++, DEF_samples_10___d66, 26u);
      backing.DEF_samples_10___d66 = DEF_samples_10___d66;
      vcd_write_val(sim_hdl, num++, DEF_samples_11___d68, 26u);
      backing.DEF_samples_11___d68 = DEF_samples_11___d68;
      vcd_write_val(sim_hdl, num++, DEF_samples_12___d70, 26u);
      backing.DEF_samples_12___d70 = DEF_samples_12___d70;
      vcd_write_val(sim_hdl, num++, DEF_samples_13___d72, 26u);
      backing.DEF_samples_13___d72 = DEF_samples_13___d72;
      vcd_write_val(sim_hdl, num++, DEF_samples_14___d74, 26u);
      backing.DEF_samples_14___d74 = DEF_samples_14___d74;
      vcd_write_val(sim_hdl, num++, DEF_samples_15___d76, 26u);
      backing.DEF_samples_15___d76 = DEF_samples_15___d76;
      vcd_write_val(sim_hdl, num++, DEF_samples_16___d78, 26u);
      backing.DEF_samples_16___d78 = DEF_samples_16___d78;
      vcd_write_val(sim_hdl, num++, DEF_samples_17___d80, 26u);
      backing.DEF_samples_17___d80 = DEF_samples_17___d80;
      vcd_write_val(sim_hdl, num++, DEF_samples_18___d82, 26u);
      backing.DEF_samples_18___d82 = DEF_samples_18___d82;
      vcd_write_val(sim_hdl, num++, DEF_samples_19___d84, 26u);
      backing.DEF_samples_19___d84 = DEF_samples_19___d84;
      vcd_write_val(sim_hdl, num++, DEF_samples_1___d48, 26u);
      backing.DEF_samples_1___d48 = DEF_samples_1___d48;
      vcd_write_val(sim_hdl, num++, DEF_samples_20___d86, 26u);
      backing.DEF_samples_20___d86 = DEF_samples_20___d86;
      vcd_write_val(sim_hdl, num++, DEF_samples_21___d88, 26u);
      backing.DEF_samples_21___d88 = DEF_samples_21___d88;
      vcd_write_val(sim_hdl, num++, DEF_samples_22___d90, 26u);
      backing.DEF_samples_22___d90 = DEF_samples_22___d90;
      vcd_write_val(sim_hdl, num++, DEF_samples_23___d92, 26u);
      backing.DEF_samples_23___d92 = DEF_samples_23___d92;
      vcd_write_val(sim_hdl, num++, DEF_samples_24___d94, 26u);
      backing.DEF_samples_24___d94 = DEF_samples_24___d94;
      vcd_write_val(sim_hdl, num++, DEF_samples_25___d96, 26u);
      backing.DEF_samples_25___d96 = DEF_samples_25___d96;
      vcd_write_val(sim_hdl, num++, DEF_samples_26___d98, 26u);
      backing.DEF_samples_26___d98 = DEF_samples_26___d98;
      vcd_write_val(sim_hdl, num++, DEF_samples_27___d100, 26u);
      backing.DEF_samples_27___d100 = DEF_samples_27___d100;
      vcd_write_val(sim_hdl, num++, DEF_samples_28___d102, 26u);
      backing.DEF_samples_28___d102 = DEF_samples_28___d102;
      vcd_write_val(sim_hdl, num++, DEF_samples_29___d104, 26u);
      backing.DEF_samples_29___d104 = DEF_samples_29___d104;
      vcd_write_val(sim_hdl, num++, DEF_samples_2___d50, 26u);
      backing.DEF_samples_2___d50 = DEF_samples_2___d50;
      vcd_write_val(sim_hdl, num++, DEF_samples_30___d106, 26u);
      backing.DEF_samples_30___d106 = DEF_samples_30___d106;
      vcd_write_val(sim_hdl, num++, DEF_samples_31___d108, 26u);
      backing.DEF_samples_31___d108 = DEF_samples_31___d108;
      vcd_write_val(sim_hdl, num++, DEF_samples_32___d110, 26u);
      backing.DEF_samples_32___d110 = DEF_samples_32___d110;
      vcd_write_val(sim_hdl, num++, DEF_samples_33___d112, 26u);
      backing.DEF_samples_33___d112 = DEF_samples_33___d112;
      vcd_write_val(sim_hdl, num++, DEF_samples_34___d114, 26u);
      backing.DEF_samples_34___d114 = DEF_samples_34___d114;
      vcd_write_val(sim_hdl, num++, DEF_samples_35___d116, 26u);
      backing.DEF_samples_35___d116 = DEF_samples_35___d116;
      vcd_write_val(sim_hdl, num++, DEF_samples_36___d118, 26u);
      backing.DEF_samples_36___d118 = DEF_samples_36___d118;
      vcd_write_val(sim_hdl, num++, DEF_samples_37___d120, 26u);
      backing.DEF_samples_37___d120 = DEF_samples_37___d120;
      vcd_write_val(sim_hdl, num++, DEF_samples_38___d122, 26u);
      backing.DEF_samples_38___d122 = DEF_samples_38___d122;
      vcd_write_val(sim_hdl, num++, DEF_samples_39___d124, 26u);
      backing.DEF_samples_39___d124 = DEF_samples_39___d124;
      vcd_write_val(sim_hdl, num++, DEF_samples_3___d52, 26u);
      backing.DEF_samples_3___d52 = DEF_samples_3___d52;
      vcd_write_val(sim_hdl, num++, DEF_samples_40___d126, 26u);
      backing.DEF_samples_40___d126 = DEF_samples_40___d126;
      vcd_write_val(sim_hdl, num++, DEF_samples_41___d128, 26u);
      backing.DEF_samples_41___d128 = DEF_samples_41___d128;
      vcd_write_val(sim_hdl, num++, DEF_samples_42___d130, 26u);
      backing.DEF_samples_42___d130 = DEF_samples_42___d130;
      vcd_write_val(sim_hdl, num++, DEF_samples_4___d54, 26u);
      backing.DEF_samples_4___d54 = DEF_samples_4___d54;
      vcd_write_val(sim_hdl, num++, DEF_samples_5___d56, 26u);
      backing.DEF_samples_5___d56 = DEF_samples_5___d56;
      vcd_write_val(sim_hdl, num++, DEF_samples_6___d58, 26u);
      backing.DEF_samples_6___d58 = DEF_samples_6___d58;
      vcd_write_val(sim_hdl, num++, DEF_samples_7___d60, 26u);
      backing.DEF_samples_7___d60 = DEF_samples_7___d60;
      vcd_write_val(sim_hdl, num++, DEF_samples_8___d62, 26u);
      backing.DEF_samples_8___d62 = DEF_samples_8___d62;
      vcd_write_val(sim_hdl, num++, DEF_samples_9___d64, 26u);
      backing.DEF_samples_9___d64 = DEF_samples_9___d64;
      vcd_write_val(sim_hdl, num++, DEF_sum___d240, 26u);
      backing.DEF_sum___d240 = DEF_sum___d240;
      vcd_write_val(sim_hdl, num++, DEF_x__h30825, 7u);
      backing.DEF_x__h30825 = DEF_x__h30825;
      vcd_write_val(sim_hdl, num++, DEF_x__h36308, 7u);
      backing.DEF_x__h36308 = DEF_x__h36308;
    }
}

void MOD_mkFIRfilter::vcd_prims(tVCDDumpType dt, MOD_mkFIRfilter &backing)
{
  INST_acc.dump_VCD(dt, backing.INST_acc);
  INST_conv_abort.dump_VCD(dt, backing.INST_conv_abort);
  INST_conv_start_reg.dump_VCD(dt, backing.INST_conv_start_reg);
  INST_conv_start_reg_1.dump_VCD(dt, backing.INST_conv_start_reg_1);
  INST_conv_start_reg_2.dump_VCD(dt, backing.INST_conv_start_reg_2);
  INST_conv_start_wire.dump_VCD(dt, backing.INST_conv_start_wire);
  INST_conv_state_can_overlap.dump_VCD(dt, backing.INST_conv_state_can_overlap);
  INST_conv_state_fired.dump_VCD(dt, backing.INST_conv_state_fired);
  INST_conv_state_fired_1.dump_VCD(dt, backing.INST_conv_state_fired_1);
  INST_conv_state_mkFSMstate.dump_VCD(dt, backing.INST_conv_state_mkFSMstate);
  INST_conv_state_overlap_pw.dump_VCD(dt, backing.INST_conv_state_overlap_pw);
  INST_conv_state_set_pw.dump_VCD(dt, backing.INST_conv_state_set_pw);
  INST_n.dump_VCD(dt, backing.INST_n);
  INST_newSample.dump_VCD(dt, backing.INST_newSample);
  INST_samples_0.dump_VCD(dt, backing.INST_samples_0);
  INST_samples_1.dump_VCD(dt, backing.INST_samples_1);
  INST_samples_10.dump_VCD(dt, backing.INST_samples_10);
  INST_samples_11.dump_VCD(dt, backing.INST_samples_11);
  INST_samples_12.dump_VCD(dt, backing.INST_samples_12);
  INST_samples_13.dump_VCD(dt, backing.INST_samples_13);
  INST_samples_14.dump_VCD(dt, backing.INST_samples_14);
  INST_samples_15.dump_VCD(dt, backing.INST_samples_15);
  INST_samples_16.dump_VCD(dt, backing.INST_samples_16);
  INST_samples_17.dump_VCD(dt, backing.INST_samples_17);
  INST_samples_18.dump_VCD(dt, backing.INST_samples_18);
  INST_samples_19.dump_VCD(dt, backing.INST_samples_19);
  INST_samples_2.dump_VCD(dt, backing.INST_samples_2);
  INST_samples_20.dump_VCD(dt, backing.INST_samples_20);
  INST_samples_21.dump_VCD(dt, backing.INST_samples_21);
  INST_samples_22.dump_VCD(dt, backing.INST_samples_22);
  INST_samples_23.dump_VCD(dt, backing.INST_samples_23);
  INST_samples_24.dump_VCD(dt, backing.INST_samples_24);
  INST_samples_25.dump_VCD(dt, backing.INST_samples_25);
  INST_samples_26.dump_VCD(dt, backing.INST_samples_26);
  INST_samples_27.dump_VCD(dt, backing.INST_samples_27);
  INST_samples_28.dump_VCD(dt, backing.INST_samples_28);
  INST_samples_29.dump_VCD(dt, backing.INST_samples_29);
  INST_samples_3.dump_VCD(dt, backing.INST_samples_3);
  INST_samples_30.dump_VCD(dt, backing.INST_samples_30);
  INST_samples_31.dump_VCD(dt, backing.INST_samples_31);
  INST_samples_32.dump_VCD(dt, backing.INST_samples_32);
  INST_samples_33.dump_VCD(dt, backing.INST_samples_33);
  INST_samples_34.dump_VCD(dt, backing.INST_samples_34);
  INST_samples_35.dump_VCD(dt, backing.INST_samples_35);
  INST_samples_36.dump_VCD(dt, backing.INST_samples_36);
  INST_samples_37.dump_VCD(dt, backing.INST_samples_37);
  INST_samples_38.dump_VCD(dt, backing.INST_samples_38);
  INST_samples_39.dump_VCD(dt, backing.INST_samples_39);
  INST_samples_4.dump_VCD(dt, backing.INST_samples_4);
  INST_samples_40.dump_VCD(dt, backing.INST_samples_40);
  INST_samples_41.dump_VCD(dt, backing.INST_samples_41);
  INST_samples_42.dump_VCD(dt, backing.INST_samples_42);
  INST_samples_5.dump_VCD(dt, backing.INST_samples_5);
  INST_samples_6.dump_VCD(dt, backing.INST_samples_6);
  INST_samples_7.dump_VCD(dt, backing.INST_samples_7);
  INST_samples_8.dump_VCD(dt, backing.INST_samples_8);
  INST_samples_9.dump_VCD(dt, backing.INST_samples_9);
  INST_sum.dump_VCD(dt, backing.INST_sum);
}
