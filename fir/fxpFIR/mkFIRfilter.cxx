/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Fri Apr 28 16:52:50 -03 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkFIRfilter.h"


/* String declarations */
static std::string const __str_literal_1("Error: \"FIRfilter.bsv\", line 26, column 16: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_init_l26c9] and\n  [RL_conv_action_l26c38, RL_conv_action_f_update_l26c9,\n  RL_conv_action_l30c16, RL_conv_action_l31c18, RL_conv_action_f_init_l32c9,\n  RL_conv_action_l33c17, RL_conv_action_f_update_l32c9, RL_conv_action_l36c12,\n  RL_conv_action_l37c13] ) fired in the same clock cycle.\n",
					 402u);
static std::string const __str_literal_3("Error: \"FIRfilter.bsv\", line 26, column 31: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_update_l26c9]\n  and [RL_conv_action_l30c16, RL_conv_action_l31c18,\n  RL_conv_action_f_init_l32c9, RL_conv_action_l33c17,\n  RL_conv_action_f_update_l32c9, RL_conv_action_l36c12, RL_conv_action_l37c13]\n  ) fired in the same clock cycle.\n",
					 350u);
static std::string const __str_literal_2("Error: \"FIRfilter.bsv\", line 26, column 38: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l26c38] and\n  [RL_conv_action_f_update_l26c9, RL_conv_action_l30c16,\n  RL_conv_action_l31c18, RL_conv_action_f_init_l32c9, RL_conv_action_l33c17,\n  RL_conv_action_f_update_l32c9, RL_conv_action_l36c12, RL_conv_action_l37c13]\n  ) fired in the same clock cycle.\n",
					 373u);
static std::string const __str_literal_4("Error: \"FIRfilter.bsv\", line 30, column 16: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l30c16] and\n  [RL_conv_action_l31c18, RL_conv_action_f_init_l32c9, RL_conv_action_l33c17,\n  RL_conv_action_f_update_l32c9, RL_conv_action_l36c12, RL_conv_action_l37c13]\n  ) fired in the same clock cycle.\n",
					 317u);
static std::string const __str_literal_5("Error: \"FIRfilter.bsv\", line 31, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l31c18] and\n  [RL_conv_action_f_init_l32c9, RL_conv_action_l33c17,\n  RL_conv_action_f_update_l32c9, RL_conv_action_l36c12, RL_conv_action_l37c13]\n  ) fired in the same clock cycle.\n",
					 294u);
static std::string const __str_literal_6("Error: \"FIRfilter.bsv\", line 32, column 15: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_init_l32c9] and\n  [RL_conv_action_l33c17, RL_conv_action_f_update_l32c9,\n  RL_conv_action_l36c12, RL_conv_action_l37c13] ) fired in the same clock\n  cycle.\n",
					 271u);
static std::string const __str_literal_8("Error: \"FIRfilter.bsv\", line 32, column 30: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_f_update_l32c9]\n  and [RL_conv_action_l36c12, RL_conv_action_l37c13] ) fired in the same clock\n  cycle.\n",
					 217u);
static std::string const __str_literal_7("Error: \"FIRfilter.bsv\", line 33, column 17: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l33c17] and\n  [RL_conv_action_f_update_l32c9, RL_conv_action_l36c12,\n  RL_conv_action_l37c13] ) fired in the same clock cycle.\n",
					 240u);
static std::string const __str_literal_9("Error: \"FIRfilter.bsv\", line 36, column 12: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_conv_action_l36c12] and\n  [RL_conv_action_l37c13] ) fired in the same clock cycle.\n",
					 184u);


/* Constructor */
MOD_mkFIRfilter::MOD_mkFIRfilter(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_acc(simHdl, "acc", this, 16u, 2u, (tUInt8)1u, 0u),
    INST_conv_abort(simHdl, "conv_abort", this, 1u, (tUInt8)0u),
    INST_conv_start_reg(simHdl, "conv_start_reg", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_start_reg_1(simHdl, "conv_start_reg_1", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_start_reg_2(simHdl, "conv_start_reg_2", this, 1u, (tUInt8)0u),
    INST_conv_start_wire(simHdl, "conv_start_wire", this, 1u, (tUInt8)0u),
    INST_conv_state_can_overlap(simHdl, "conv_state_can_overlap", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_conv_state_fired(simHdl, "conv_state_fired", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_state_fired_1(simHdl, "conv_state_fired_1", this, 1u, (tUInt8)0u),
    INST_conv_state_mkFSMstate(simHdl, "conv_state_mkFSMstate", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_conv_state_overlap_pw(simHdl, "conv_state_overlap_pw", this, 0u),
    INST_conv_state_set_pw(simHdl, "conv_state_set_pw", this, 0u),
    INST_n(simHdl, "n", this, 7u, (tUInt8)0u, (tUInt8)0u),
    INST_newSample(simHdl, "newSample", this, 16u, 2u, (tUInt8)1u, 0u),
    INST_samples_0(simHdl, "samples_0", this, 16u, 0u, (tUInt8)0u),
    INST_samples_1(simHdl, "samples_1", this, 16u, 0u, (tUInt8)0u),
    INST_samples_10(simHdl, "samples_10", this, 16u, 0u, (tUInt8)0u),
    INST_samples_11(simHdl, "samples_11", this, 16u, 0u, (tUInt8)0u),
    INST_samples_12(simHdl, "samples_12", this, 16u, 0u, (tUInt8)0u),
    INST_samples_13(simHdl, "samples_13", this, 16u, 0u, (tUInt8)0u),
    INST_samples_14(simHdl, "samples_14", this, 16u, 0u, (tUInt8)0u),
    INST_samples_15(simHdl, "samples_15", this, 16u, 0u, (tUInt8)0u),
    INST_samples_16(simHdl, "samples_16", this, 16u, 0u, (tUInt8)0u),
    INST_samples_17(simHdl, "samples_17", this, 16u, 0u, (tUInt8)0u),
    INST_samples_18(simHdl, "samples_18", this, 16u, 0u, (tUInt8)0u),
    INST_samples_19(simHdl, "samples_19", this, 16u, 0u, (tUInt8)0u),
    INST_samples_2(simHdl, "samples_2", this, 16u, 0u, (tUInt8)0u),
    INST_samples_20(simHdl, "samples_20", this, 16u, 0u, (tUInt8)0u),
    INST_samples_21(simHdl, "samples_21", this, 16u, 0u, (tUInt8)0u),
    INST_samples_22(simHdl, "samples_22", this, 16u, 0u, (tUInt8)0u),
    INST_samples_23(simHdl, "samples_23", this, 16u, 0u, (tUInt8)0u),
    INST_samples_24(simHdl, "samples_24", this, 16u, 0u, (tUInt8)0u),
    INST_samples_25(simHdl, "samples_25", this, 16u, 0u, (tUInt8)0u),
    INST_samples_26(simHdl, "samples_26", this, 16u, 0u, (tUInt8)0u),
    INST_samples_27(simHdl, "samples_27", this, 16u, 0u, (tUInt8)0u),
    INST_samples_28(simHdl, "samples_28", this, 16u, 0u, (tUInt8)0u),
    INST_samples_29(simHdl, "samples_29", this, 16u, 0u, (tUInt8)0u),
    INST_samples_3(simHdl, "samples_3", this, 16u, 0u, (tUInt8)0u),
    INST_samples_30(simHdl, "samples_30", this, 16u, 0u, (tUInt8)0u),
    INST_samples_31(simHdl, "samples_31", this, 16u, 0u, (tUInt8)0u),
    INST_samples_32(simHdl, "samples_32", this, 16u, 0u, (tUInt8)0u),
    INST_samples_33(simHdl, "samples_33", this, 16u, 0u, (tUInt8)0u),
    INST_samples_34(simHdl, "samples_34", this, 16u, 0u, (tUInt8)0u),
    INST_samples_35(simHdl, "samples_35", this, 16u, 0u, (tUInt8)0u),
    INST_samples_36(simHdl, "samples_36", this, 16u, 0u, (tUInt8)0u),
    INST_samples_37(simHdl, "samples_37", this, 16u, 0u, (tUInt8)0u),
    INST_samples_38(simHdl, "samples_38", this, 16u, 0u, (tUInt8)0u),
    INST_samples_39(simHdl, "samples_39", this, 16u, 0u, (tUInt8)0u),
    INST_samples_4(simHdl, "samples_4", this, 16u, 0u, (tUInt8)0u),
    INST_samples_40(simHdl, "samples_40", this, 16u, 0u, (tUInt8)0u),
    INST_samples_41(simHdl, "samples_41", this, 16u, 0u, (tUInt8)0u),
    INST_samples_42(simHdl, "samples_42", this, 16u, 0u, (tUInt8)0u),
    INST_samples_5(simHdl, "samples_5", this, 16u, 0u, (tUInt8)0u),
    INST_samples_6(simHdl, "samples_6", this, 16u, 0u, (tUInt8)0u),
    INST_samples_7(simHdl, "samples_7", this, 16u, 0u, (tUInt8)0u),
    INST_samples_8(simHdl, "samples_8", this, 16u, 0u, (tUInt8)0u),
    INST_samples_9(simHdl, "samples_9", this, 16u, 0u, (tUInt8)0u),
    INST_sum(simHdl, "sum", this, 16u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 96u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkFIRfilter::init_symbols_0()
{
  init_symbol(&symbols[0u], "__me_check_10", SYM_RULE);
  init_symbol(&symbols[1u], "__me_check_11", SYM_RULE);
  init_symbol(&symbols[2u], "__me_check_12", SYM_RULE);
  init_symbol(&symbols[3u], "__me_check_13", SYM_RULE);
  init_symbol(&symbols[4u], "__me_check_5", SYM_RULE);
  init_symbol(&symbols[5u], "__me_check_6", SYM_RULE);
  init_symbol(&symbols[6u], "__me_check_7", SYM_RULE);
  init_symbol(&symbols[7u], "__me_check_8", SYM_RULE);
  init_symbol(&symbols[8u], "__me_check_9", SYM_RULE);
  init_symbol(&symbols[9u], "acc", SYM_MODULE, &INST_acc);
  init_symbol(&symbols[10u], "conv_abort", SYM_MODULE, &INST_conv_abort);
  init_symbol(&symbols[11u], "conv_start_reg", SYM_MODULE, &INST_conv_start_reg);
  init_symbol(&symbols[12u], "conv_start_reg_1", SYM_MODULE, &INST_conv_start_reg_1);
  init_symbol(&symbols[13u], "conv_start_reg_2", SYM_MODULE, &INST_conv_start_reg_2);
  init_symbol(&symbols[14u], "conv_start_wire", SYM_MODULE, &INST_conv_start_wire);
  init_symbol(&symbols[15u], "conv_state_can_overlap", SYM_MODULE, &INST_conv_state_can_overlap);
  init_symbol(&symbols[16u], "conv_state_fired", SYM_MODULE, &INST_conv_state_fired);
  init_symbol(&symbols[17u], "conv_state_fired_1", SYM_MODULE, &INST_conv_state_fired_1);
  init_symbol(&symbols[18u], "conv_state_mkFSMstate", SYM_MODULE, &INST_conv_state_mkFSMstate);
  init_symbol(&symbols[19u], "conv_state_overlap_pw", SYM_MODULE, &INST_conv_state_overlap_pw);
  init_symbol(&symbols[20u], "conv_state_set_pw", SYM_MODULE, &INST_conv_state_set_pw);
  init_symbol(&symbols[21u], "n", SYM_MODULE, &INST_n);
  init_symbol(&symbols[22u], "newSample", SYM_MODULE, &INST_newSample);
  init_symbol(&symbols[23u], "RL_conv_action_f_init_l26c9", SYM_RULE);
  init_symbol(&symbols[24u], "RL_conv_action_f_init_l32c9", SYM_RULE);
  init_symbol(&symbols[25u], "RL_conv_action_f_update_l26c9", SYM_RULE);
  init_symbol(&symbols[26u], "RL_conv_action_f_update_l32c9", SYM_RULE);
  init_symbol(&symbols[27u], "RL_conv_action_l26c38", SYM_RULE);
  init_symbol(&symbols[28u], "RL_conv_action_l30c16", SYM_RULE);
  init_symbol(&symbols[29u], "RL_conv_action_l31c18", SYM_RULE);
  init_symbol(&symbols[30u], "RL_conv_action_l33c17", SYM_RULE);
  init_symbol(&symbols[31u], "RL_conv_action_l36c12", SYM_RULE);
  init_symbol(&symbols[32u], "RL_conv_action_l37c13", SYM_RULE);
  init_symbol(&symbols[33u], "RL_conv_fsm_start", SYM_RULE);
  init_symbol(&symbols[34u], "RL_conv_idle_l25c20", SYM_RULE);
  init_symbol(&symbols[35u], "RL_conv_restart", SYM_RULE);
  init_symbol(&symbols[36u], "RL_conv_start_reg__dreg_update", SYM_RULE);
  init_symbol(&symbols[37u], "RL_conv_state_every", SYM_RULE);
  init_symbol(&symbols[38u], "RL_conv_state_fired__dreg_update", SYM_RULE);
  init_symbol(&symbols[39u], "RL_conv_state_handle_abort", SYM_RULE);
  init_symbol(&symbols[40u], "RL_init", SYM_RULE);
  init_symbol(&symbols[41u], "samples_0", SYM_MODULE, &INST_samples_0);
  init_symbol(&symbols[42u], "samples_1", SYM_MODULE, &INST_samples_1);
  init_symbol(&symbols[43u], "samples_10", SYM_MODULE, &INST_samples_10);
  init_symbol(&symbols[44u], "samples_11", SYM_MODULE, &INST_samples_11);
  init_symbol(&symbols[45u], "samples_12", SYM_MODULE, &INST_samples_12);
  init_symbol(&symbols[46u], "samples_13", SYM_MODULE, &INST_samples_13);
  init_symbol(&symbols[47u], "samples_14", SYM_MODULE, &INST_samples_14);
  init_symbol(&symbols[48u], "samples_15", SYM_MODULE, &INST_samples_15);
  init_symbol(&symbols[49u], "samples_16", SYM_MODULE, &INST_samples_16);
  init_symbol(&symbols[50u], "samples_17", SYM_MODULE, &INST_samples_17);
  init_symbol(&symbols[51u], "samples_18", SYM_MODULE, &INST_samples_18);
  init_symbol(&symbols[52u], "samples_19", SYM_MODULE, &INST_samples_19);
  init_symbol(&symbols[53u], "samples_2", SYM_MODULE, &INST_samples_2);
  init_symbol(&symbols[54u], "samples_20", SYM_MODULE, &INST_samples_20);
  init_symbol(&symbols[55u], "samples_21", SYM_MODULE, &INST_samples_21);
  init_symbol(&symbols[56u], "samples_22", SYM_MODULE, &INST_samples_22);
  init_symbol(&symbols[57u], "samples_23", SYM_MODULE, &INST_samples_23);
  init_symbol(&symbols[58u], "samples_24", SYM_MODULE, &INST_samples_24);
  init_symbol(&symbols[59u], "samples_25", SYM_MODULE, &INST_samples_25);
  init_symbol(&symbols[60u], "samples_26", SYM_MODULE, &INST_samples_26);
  init_symbol(&symbols[61u], "samples_27", SYM_MODULE, &INST_samples_27);
  init_symbol(&symbols[62u], "samples_28", SYM_MODULE, &INST_samples_28);
  init_symbol(&symbols[63u], "samples_29", SYM_MODULE, &INST_samples_29);
  init_symbol(&symbols[64u], "samples_3", SYM_MODULE, &INST_samples_3);
  init_symbol(&symbols[65u], "samples_30", SYM_MODULE, &INST_samples_30);
  init_symbol(&symbols[66u], "samples_31", SYM_MODULE, &INST_samples_31);
  init_symbol(&symbols[67u], "samples_32", SYM_MODULE, &INST_samples_32);
  init_symbol(&symbols[68u], "samples_33", SYM_MODULE, &INST_samples_33);
  init_symbol(&symbols[69u], "samples_34", SYM_MODULE, &INST_samples_34);
  init_symbol(&symbols[70u], "samples_35", SYM_MODULE, &INST_samples_35);
  init_symbol(&symbols[71u], "samples_36", SYM_MODULE, &INST_samples_36);
  init_symbol(&symbols[72u], "samples_37", SYM_MODULE, &INST_samples_37);
  init_symbol(&symbols[73u], "samples_38", SYM_MODULE, &INST_samples_38);
  init_symbol(&symbols[74u], "samples_39", SYM_MODULE, &INST_samples_39);
  init_symbol(&symbols[75u], "samples_4", SYM_MODULE, &INST_samples_4);
  init_symbol(&symbols[76u], "samples_40", SYM_MODULE, &INST_samples_40);
  init_symbol(&symbols[77u], "samples_41", SYM_MODULE, &INST_samples_41);
  init_symbol(&symbols[78u], "samples_42", SYM_MODULE, &INST_samples_42);
  init_symbol(&symbols[79u], "samples_5", SYM_MODULE, &INST_samples_5);
  init_symbol(&symbols[80u], "samples_6", SYM_MODULE, &INST_samples_6);
  init_symbol(&symbols[81u], "samples_7", SYM_MODULE, &INST_samples_7);
  init_symbol(&symbols[82u], "samples_8", SYM_MODULE, &INST_samples_8);
  init_symbol(&symbols[83u], "samples_9", SYM_MODULE, &INST_samples_9);
  init_symbol(&symbols[84u], "sum", SYM_MODULE, &INST_sum);
  init_symbol(&symbols[85u],
	      "WILL_FIRE_RL_conv_action_f_init_l26c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_init_l26c9,
	      1u);
  init_symbol(&symbols[86u],
	      "WILL_FIRE_RL_conv_action_f_init_l32c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_init_l32c9,
	      1u);
  init_symbol(&symbols[87u],
	      "WILL_FIRE_RL_conv_action_f_update_l26c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_update_l26c9,
	      1u);
  init_symbol(&symbols[88u],
	      "WILL_FIRE_RL_conv_action_f_update_l32c9",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_f_update_l32c9,
	      1u);
  init_symbol(&symbols[89u],
	      "WILL_FIRE_RL_conv_action_l26c38",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l26c38,
	      1u);
  init_symbol(&symbols[90u],
	      "WILL_FIRE_RL_conv_action_l30c16",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l30c16,
	      1u);
  init_symbol(&symbols[91u],
	      "WILL_FIRE_RL_conv_action_l31c18",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l31c18,
	      1u);
  init_symbol(&symbols[92u],
	      "WILL_FIRE_RL_conv_action_l33c17",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l33c17,
	      1u);
  init_symbol(&symbols[93u],
	      "WILL_FIRE_RL_conv_action_l36c12",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l36c12,
	      1u);
  init_symbol(&symbols[94u],
	      "WILL_FIRE_RL_conv_action_l37c13",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_conv_action_l37c13,
	      1u);
  init_symbol(&symbols[95u], "x__h33436", SYM_DEF, &DEF_x__h33436, 7u);
}


/* Rule actions */

void MOD_mkFIRfilter::RL_conv_start_reg__dreg_update()
{
  tUInt8 DEF_conv_start_reg_2_whas_AND_conv_start_reg_2_wget___d3;
  DEF_conv_start_reg_2_whas_AND_conv_start_reg_2_wget___d3 = INST_conv_start_reg_2.METH_whas() && INST_conv_start_reg_2.METH_wget();
  INST_conv_start_reg_1.METH_write(DEF_conv_start_reg_2_whas_AND_conv_start_reg_2_wget___d3);
}

void MOD_mkFIRfilter::RL_conv_state_handle_abort()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)0u);
}

void MOD_mkFIRfilter::RL_conv_state_fired__dreg_update()
{
  tUInt8 DEF_conv_state_fired_1_whas__3_AND_conv_state_fire_ETC___d15;
  DEF_conv_state_fired_1_whas__3_AND_conv_state_fire_ETC___d15 = INST_conv_state_fired_1.METH_whas() && INST_conv_state_fired_1.METH_wget();
  INST_conv_state_fired.METH_write(DEF_conv_state_fired_1_whas__3_AND_conv_state_fire_ETC___d15);
}

void MOD_mkFIRfilter::RL_conv_state_every()
{
  tUInt8 DEF_conv_state_set_pw_whas__6_OR_NOT_conv_state_ov_ETC___d21;
  tUInt8 DEF_conv_state_can_overlap__h6209;
  DEF_conv_state_can_overlap__h6209 = INST_conv_state_can_overlap.METH_read();
  DEF_conv_state_set_pw_whas__6_OR_NOT_conv_state_ov_ETC___d21 = INST_conv_state_set_pw.METH_whas() || (!INST_conv_state_overlap_pw.METH_whas() && DEF_conv_state_can_overlap__h6209);
  INST_conv_state_can_overlap.METH_write(DEF_conv_state_set_pw_whas__6_OR_NOT_conv_state_ov_ETC___d21);
}

void MOD_mkFIRfilter::RL_conv_restart()
{
  INST_conv_start_wire.METH_wset((tUInt8)1u);
  INST_conv_start_reg_2.METH_wset((tUInt8)1u);
}

void MOD_mkFIRfilter::RL_conv_action_f_init_l26c9()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)1u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write((tUInt8)42u);
}

void MOD_mkFIRfilter::RL_conv_action_l26c38()
{
  tUInt8 DEF_n_7_EQ_0___d45;
  tUInt8 DEF_n_7_EQ_1___d92;
  tUInt8 DEF_n_7_EQ_2___d93;
  tUInt8 DEF_n_7_EQ_3___d94;
  tUInt8 DEF_n_7_EQ_4___d95;
  tUInt8 DEF_n_7_EQ_5___d96;
  tUInt8 DEF_n_7_EQ_6___d97;
  tUInt8 DEF_n_7_EQ_7___d98;
  tUInt8 DEF_n_7_EQ_8___d99;
  tUInt8 DEF_n_7_EQ_9___d100;
  tUInt8 DEF_n_7_EQ_10___d101;
  tUInt8 DEF_n_7_EQ_11___d102;
  tUInt8 DEF_n_7_EQ_12___d103;
  tUInt8 DEF_n_7_EQ_13___d104;
  tUInt8 DEF_n_7_EQ_14___d105;
  tUInt8 DEF_n_7_EQ_15___d106;
  tUInt8 DEF_n_7_EQ_16___d107;
  tUInt8 DEF_n_7_EQ_17___d108;
  tUInt8 DEF_n_7_EQ_18___d109;
  tUInt8 DEF_n_7_EQ_19___d110;
  tUInt8 DEF_n_7_EQ_20___d111;
  tUInt8 DEF_n_7_EQ_21___d112;
  tUInt8 DEF_n_7_EQ_22___d113;
  tUInt8 DEF_n_7_EQ_23___d114;
  tUInt8 DEF_n_7_EQ_24___d115;
  tUInt8 DEF_n_7_EQ_25___d116;
  tUInt8 DEF_n_7_EQ_26___d117;
  tUInt8 DEF_n_7_EQ_27___d118;
  tUInt8 DEF_n_7_EQ_28___d119;
  tUInt8 DEF_n_7_EQ_29___d120;
  tUInt8 DEF_n_7_EQ_30___d121;
  tUInt8 DEF_n_7_EQ_31___d122;
  tUInt8 DEF_n_7_EQ_32___d123;
  tUInt8 DEF_n_7_EQ_33___d124;
  tUInt8 DEF_n_7_EQ_34___d125;
  tUInt8 DEF_n_7_EQ_35___d126;
  tUInt8 DEF_n_7_EQ_36___d127;
  tUInt8 DEF_n_7_EQ_37___d128;
  tUInt8 DEF_n_7_EQ_38___d129;
  tUInt8 DEF_n_7_EQ_39___d130;
  tUInt8 DEF_n_7_EQ_40___d131;
  tUInt8 DEF_n_7_EQ_41___d132;
  tUInt8 DEF_n_7_EQ_42___d133;
  tUInt32 DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91;
  DEF_x__h33436 = INST_n.METH_read();
  DEF_b__h29559 = INST_samples_42.METH_read();
  DEF_b__h29558 = INST_samples_41.METH_read();
  DEF_b__h29557 = INST_samples_40.METH_read();
  DEF_b__h29556 = INST_samples_39.METH_read();
  DEF_b__h29555 = INST_samples_38.METH_read();
  DEF_b__h29554 = INST_samples_37.METH_read();
  DEF_b__h29553 = INST_samples_36.METH_read();
  DEF_b__h29552 = INST_samples_35.METH_read();
  DEF_b__h29551 = INST_samples_34.METH_read();
  DEF_b__h29550 = INST_samples_33.METH_read();
  DEF_b__h29549 = INST_samples_32.METH_read();
  DEF_b__h29548 = INST_samples_31.METH_read();
  DEF_b__h29547 = INST_samples_30.METH_read();
  DEF_b__h29546 = INST_samples_29.METH_read();
  DEF_b__h29545 = INST_samples_28.METH_read();
  DEF_b__h29544 = INST_samples_27.METH_read();
  DEF_b__h29543 = INST_samples_26.METH_read();
  DEF_b__h29542 = INST_samples_25.METH_read();
  DEF_b__h29541 = INST_samples_24.METH_read();
  DEF_b__h29540 = INST_samples_23.METH_read();
  DEF_b__h29539 = INST_samples_22.METH_read();
  DEF_b__h29538 = INST_samples_21.METH_read();
  DEF_b__h29537 = INST_samples_20.METH_read();
  DEF_b__h29536 = INST_samples_19.METH_read();
  DEF_b__h29535 = INST_samples_18.METH_read();
  DEF_b__h29534 = INST_samples_17.METH_read();
  DEF_b__h29533 = INST_samples_16.METH_read();
  DEF_b__h29532 = INST_samples_15.METH_read();
  DEF_b__h29531 = INST_samples_14.METH_read();
  DEF_b__h29530 = INST_samples_13.METH_read();
  DEF_b__h29529 = INST_samples_12.METH_read();
  DEF_b__h29528 = INST_samples_11.METH_read();
  DEF_b__h29527 = INST_samples_10.METH_read();
  DEF_b__h29526 = INST_samples_9.METH_read();
  DEF_b__h29524 = INST_samples_7.METH_read();
  DEF_b__h29525 = INST_samples_8.METH_read();
  DEF_b__h29523 = INST_samples_6.METH_read();
  DEF_b__h29522 = INST_samples_5.METH_read();
  DEF_b__h29521 = INST_samples_4.METH_read();
  DEF_b__h29520 = INST_samples_3.METH_read();
  DEF_b__h29519 = INST_samples_2.METH_read();
  DEF_b__h29518 = INST_samples_1.METH_read();
  DEF_b__h29517 = INST_samples_0.METH_read();
  DEF_x__h29472 = (tUInt8)127u & (DEF_x__h33436 - (tUInt8)1u);
  switch (DEF_x__h29472) {
  case (tUInt8)0u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29517;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29518;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29519;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29520;
    break;
  case (tUInt8)4u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29521;
    break;
  case (tUInt8)5u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29522;
    break;
  case (tUInt8)6u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29523;
    break;
  case (tUInt8)7u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29524;
    break;
  case (tUInt8)8u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29525;
    break;
  case (tUInt8)9u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29526;
    break;
  case (tUInt8)10u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29527;
    break;
  case (tUInt8)11u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29528;
    break;
  case (tUInt8)12u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29529;
    break;
  case (tUInt8)13u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29530;
    break;
  case (tUInt8)14u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29531;
    break;
  case (tUInt8)15u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29532;
    break;
  case (tUInt8)16u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29533;
    break;
  case (tUInt8)17u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29534;
    break;
  case (tUInt8)18u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29535;
    break;
  case (tUInt8)19u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29536;
    break;
  case (tUInt8)20u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29537;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29538;
    break;
  case (tUInt8)22u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29539;
    break;
  case (tUInt8)23u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29540;
    break;
  case (tUInt8)24u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29541;
    break;
  case (tUInt8)25u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29542;
    break;
  case (tUInt8)26u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29543;
    break;
  case (tUInt8)27u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29544;
    break;
  case (tUInt8)28u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29545;
    break;
  case (tUInt8)29u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29546;
    break;
  case (tUInt8)30u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29547;
    break;
  case (tUInt8)31u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29548;
    break;
  case (tUInt8)32u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29549;
    break;
  case (tUInt8)33u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29550;
    break;
  case (tUInt8)34u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29551;
    break;
  case (tUInt8)35u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29552;
    break;
  case (tUInt8)36u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29553;
    break;
  case (tUInt8)37u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29554;
    break;
  case (tUInt8)38u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29555;
    break;
  case (tUInt8)39u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29556;
    break;
  case (tUInt8)40u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29557;
    break;
  case (tUInt8)41u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29558;
    break;
  case (tUInt8)42u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = DEF_b__h29559;
    break;
  default:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91 = 43690u;
  }
  DEF_n_7_EQ_42___d133 = DEF_x__h33436 == (tUInt8)42u;
  DEF_n_7_EQ_41___d132 = DEF_x__h33436 == (tUInt8)41u;
  DEF_n_7_EQ_40___d131 = DEF_x__h33436 == (tUInt8)40u;
  DEF_n_7_EQ_39___d130 = DEF_x__h33436 == (tUInt8)39u;
  DEF_n_7_EQ_38___d129 = DEF_x__h33436 == (tUInt8)38u;
  DEF_n_7_EQ_37___d128 = DEF_x__h33436 == (tUInt8)37u;
  DEF_n_7_EQ_36___d127 = DEF_x__h33436 == (tUInt8)36u;
  DEF_n_7_EQ_35___d126 = DEF_x__h33436 == (tUInt8)35u;
  DEF_n_7_EQ_34___d125 = DEF_x__h33436 == (tUInt8)34u;
  DEF_n_7_EQ_33___d124 = DEF_x__h33436 == (tUInt8)33u;
  DEF_n_7_EQ_32___d123 = DEF_x__h33436 == (tUInt8)32u;
  DEF_n_7_EQ_31___d122 = DEF_x__h33436 == (tUInt8)31u;
  DEF_n_7_EQ_30___d121 = DEF_x__h33436 == (tUInt8)30u;
  DEF_n_7_EQ_29___d120 = DEF_x__h33436 == (tUInt8)29u;
  DEF_n_7_EQ_28___d119 = DEF_x__h33436 == (tUInt8)28u;
  DEF_n_7_EQ_27___d118 = DEF_x__h33436 == (tUInt8)27u;
  DEF_n_7_EQ_26___d117 = DEF_x__h33436 == (tUInt8)26u;
  DEF_n_7_EQ_25___d116 = DEF_x__h33436 == (tUInt8)25u;
  DEF_n_7_EQ_24___d115 = DEF_x__h33436 == (tUInt8)24u;
  DEF_n_7_EQ_23___d114 = DEF_x__h33436 == (tUInt8)23u;
  DEF_n_7_EQ_22___d113 = DEF_x__h33436 == (tUInt8)22u;
  DEF_n_7_EQ_21___d112 = DEF_x__h33436 == (tUInt8)21u;
  DEF_n_7_EQ_20___d111 = DEF_x__h33436 == (tUInt8)20u;
  DEF_n_7_EQ_19___d110 = DEF_x__h33436 == (tUInt8)19u;
  DEF_n_7_EQ_18___d109 = DEF_x__h33436 == (tUInt8)18u;
  DEF_n_7_EQ_17___d108 = DEF_x__h33436 == (tUInt8)17u;
  DEF_n_7_EQ_16___d107 = DEF_x__h33436 == (tUInt8)16u;
  DEF_n_7_EQ_15___d106 = DEF_x__h33436 == (tUInt8)15u;
  DEF_n_7_EQ_14___d105 = DEF_x__h33436 == (tUInt8)14u;
  DEF_n_7_EQ_13___d104 = DEF_x__h33436 == (tUInt8)13u;
  DEF_n_7_EQ_12___d103 = DEF_x__h33436 == (tUInt8)12u;
  DEF_n_7_EQ_11___d102 = DEF_x__h33436 == (tUInt8)11u;
  DEF_n_7_EQ_10___d101 = DEF_x__h33436 == (tUInt8)10u;
  DEF_n_7_EQ_9___d100 = DEF_x__h33436 == (tUInt8)9u;
  DEF_n_7_EQ_8___d99 = DEF_x__h33436 == (tUInt8)8u;
  DEF_n_7_EQ_7___d98 = DEF_x__h33436 == (tUInt8)7u;
  DEF_n_7_EQ_6___d97 = DEF_x__h33436 == (tUInt8)6u;
  DEF_n_7_EQ_5___d96 = DEF_x__h33436 == (tUInt8)5u;
  DEF_n_7_EQ_4___d95 = DEF_x__h33436 == (tUInt8)4u;
  DEF_n_7_EQ_3___d94 = DEF_x__h33436 == (tUInt8)3u;
  DEF_n_7_EQ_2___d93 = DEF_x__h33436 == (tUInt8)2u;
  DEF_n_7_EQ_1___d92 = DEF_x__h33436 == (tUInt8)1u;
  DEF_n_7_EQ_0___d45 = DEF_x__h33436 == (tUInt8)0u;
  INST_conv_state_mkFSMstate.METH_write((tUInt8)2u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  if (DEF_n_7_EQ_0___d45)
    INST_samples_0.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_1___d92)
    INST_samples_1.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_2___d93)
    INST_samples_2.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_3___d94)
    INST_samples_3.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_4___d95)
    INST_samples_4.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_5___d96)
    INST_samples_5.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_6___d97)
    INST_samples_6.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_7___d98)
    INST_samples_7.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_8___d99)
    INST_samples_8.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_9___d100)
    INST_samples_9.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_10___d101)
    INST_samples_10.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_12___d103)
    INST_samples_12.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_11___d102)
    INST_samples_11.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_13___d104)
    INST_samples_13.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_14___d105)
    INST_samples_14.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_15___d106)
    INST_samples_15.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_16___d107)
    INST_samples_16.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_17___d108)
    INST_samples_17.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_18___d109)
    INST_samples_18.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_19___d110)
    INST_samples_19.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_20___d111)
    INST_samples_20.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_21___d112)
    INST_samples_21.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_22___d113)
    INST_samples_22.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_23___d114)
    INST_samples_23.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_24___d115)
    INST_samples_24.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_25___d116)
    INST_samples_25.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_26___d117)
    INST_samples_26.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_27___d118)
    INST_samples_27.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_28___d119)
    INST_samples_28.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_29___d120)
    INST_samples_29.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_30___d121)
    INST_samples_30.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_31___d122)
    INST_samples_31.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_32___d123)
    INST_samples_32.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_33___d124)
    INST_samples_33.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_34___d125)
    INST_samples_34.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_35___d126)
    INST_samples_35.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_36___d127)
    INST_samples_36.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_37___d128)
    INST_samples_37.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_38___d129)
    INST_samples_38.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_39___d130)
    INST_samples_39.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_40___d131)
    INST_samples_40.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_41___d132)
    INST_samples_41.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
  if (DEF_n_7_EQ_42___d133)
    INST_samples_42.METH_write(DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d91);
}

void MOD_mkFIRfilter::RL_conv_action_f_update_l26c9()
{
  DEF_x__h33436 = INST_n.METH_read();
  DEF_x__h29472 = (tUInt8)127u & (DEF_x__h33436 - (tUInt8)1u);
  INST_conv_state_mkFSMstate.METH_write((tUInt8)3u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write(DEF_x__h29472);
}

void MOD_mkFIRfilter::RL_conv_action_l30c16()
{
  tUInt32 DEF_newSample_first____d139;
  DEF_newSample_first____d139 = INST_newSample.METH_first();
  INST_conv_state_mkFSMstate.METH_write((tUInt8)4u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_samples_0.METH_write(DEF_newSample_first____d139);
}

void MOD_mkFIRfilter::RL_conv_action_l31c18()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)5u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_newSample.METH_deq();
}

void MOD_mkFIRfilter::RL_conv_action_f_init_l32c9()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)6u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write((tUInt8)0u);
}

void MOD_mkFIRfilter::RL_conv_action_l33c17()
{
  tUInt32 DEF_sum_51_PLUS_SEL_ARR_samples_0_6_samples_1_7_sa_ETC___d157;
  tUInt32 DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152;
  tUInt32 DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154;
  DEF_x__h33436 = INST_n.METH_read();
  DEF_b__h29559 = INST_samples_42.METH_read();
  DEF_b__h29558 = INST_samples_41.METH_read();
  DEF_b__h29557 = INST_samples_40.METH_read();
  DEF_b__h29556 = INST_samples_39.METH_read();
  DEF_b__h29554 = INST_samples_37.METH_read();
  DEF_b__h29555 = INST_samples_38.METH_read();
  DEF_b__h29553 = INST_samples_36.METH_read();
  DEF_b__h29552 = INST_samples_35.METH_read();
  DEF_b__h29551 = INST_samples_34.METH_read();
  DEF_b__h29550 = INST_samples_33.METH_read();
  DEF_b__h29548 = INST_samples_31.METH_read();
  DEF_b__h29549 = INST_samples_32.METH_read();
  DEF_b__h29547 = INST_samples_30.METH_read();
  DEF_b__h29546 = INST_samples_29.METH_read();
  DEF_b__h29545 = INST_samples_28.METH_read();
  DEF_b__h29544 = INST_samples_27.METH_read();
  DEF_b__h29543 = INST_samples_26.METH_read();
  DEF_b__h29541 = INST_samples_24.METH_read();
  DEF_b__h29542 = INST_samples_25.METH_read();
  DEF_b__h29540 = INST_samples_23.METH_read();
  DEF_b__h29539 = INST_samples_22.METH_read();
  DEF_b__h29538 = INST_samples_21.METH_read();
  DEF_b__h29537 = INST_samples_20.METH_read();
  DEF_b__h29535 = INST_samples_18.METH_read();
  DEF_b__h29536 = INST_samples_19.METH_read();
  DEF_b__h29534 = INST_samples_17.METH_read();
  DEF_b__h29533 = INST_samples_16.METH_read();
  DEF_b__h29532 = INST_samples_15.METH_read();
  DEF_b__h29531 = INST_samples_14.METH_read();
  DEF_b__h29530 = INST_samples_13.METH_read();
  DEF_b__h29528 = INST_samples_11.METH_read();
  DEF_b__h29529 = INST_samples_12.METH_read();
  DEF_b__h29527 = INST_samples_10.METH_read();
  DEF_b__h29526 = INST_samples_9.METH_read();
  DEF_b__h29525 = INST_samples_8.METH_read();
  DEF_b__h29524 = INST_samples_7.METH_read();
  DEF_b__h29522 = INST_samples_5.METH_read();
  DEF_b__h29523 = INST_samples_6.METH_read();
  DEF_b__h29521 = INST_samples_4.METH_read();
  DEF_b__h29520 = INST_samples_3.METH_read();
  DEF_b__h29519 = INST_samples_2.METH_read();
  DEF_b__h29518 = INST_samples_1.METH_read();
  DEF_b__h29517 = INST_samples_0.METH_read();
  switch (DEF_x__h33436) {
  case (tUInt8)0u:
  case (tUInt8)42u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 186u;
    break;
  case (tUInt8)1u:
  case (tUInt8)41u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 233u;
    break;
  case (tUInt8)2u:
  case (tUInt8)40u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 248u;
    break;
  case (tUInt8)3u:
  case (tUInt8)39u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 217u;
    break;
  case (tUInt8)4u:
  case (tUInt8)38u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 134u;
    break;
  case (tUInt8)5u:
  case (tUInt8)13u:
  case (tUInt8)29u:
  case (tUInt8)37u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 0u;
    break;
  case (tUInt8)6u:
  case (tUInt8)36u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 65363u;
    break;
  case (tUInt8)7u:
  case (tUInt8)35u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 65172u;
    break;
  case (tUInt8)8u:
  case (tUInt8)34u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 64996u;
    break;
  case (tUInt8)9u:
  case (tUInt8)33u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 64871u;
    break;
  case (tUInt8)10u:
  case (tUInt8)32u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 64836u;
    break;
  case (tUInt8)11u:
  case (tUInt8)31u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 64923u;
    break;
  case (tUInt8)12u:
  case (tUInt8)30u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 65154u;
    break;
  case (tUInt8)14u:
  case (tUInt8)28u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 521u;
    break;
  case (tUInt8)15u:
  case (tUInt8)27u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 1151u;
    break;
  case (tUInt8)16u:
  case (tUInt8)26u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 1842u;
    break;
  case (tUInt8)17u:
  case (tUInt8)25u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 2533u;
    break;
  case (tUInt8)18u:
  case (tUInt8)24u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 3159u;
    break;
  case (tUInt8)19u:
  case (tUInt8)23u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 3660u;
    break;
  case (tUInt8)20u:
  case (tUInt8)22u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 3983u;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 4095u;
    break;
  default:
    DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154 = 43690u;
  }
  DEF_b__h33368 = INST_sum.METH_read();
  switch (DEF_x__h33436) {
  case (tUInt8)0u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29517;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29518;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29519;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29520;
    break;
  case (tUInt8)4u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29521;
    break;
  case (tUInt8)5u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29522;
    break;
  case (tUInt8)6u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29523;
    break;
  case (tUInt8)7u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29524;
    break;
  case (tUInt8)8u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29525;
    break;
  case (tUInt8)9u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29526;
    break;
  case (tUInt8)10u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29527;
    break;
  case (tUInt8)11u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29528;
    break;
  case (tUInt8)12u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29529;
    break;
  case (tUInt8)13u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29530;
    break;
  case (tUInt8)14u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29531;
    break;
  case (tUInt8)15u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29532;
    break;
  case (tUInt8)16u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29533;
    break;
  case (tUInt8)17u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29534;
    break;
  case (tUInt8)18u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29535;
    break;
  case (tUInt8)19u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29536;
    break;
  case (tUInt8)20u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29537;
    break;
  case (tUInt8)21u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29538;
    break;
  case (tUInt8)22u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29539;
    break;
  case (tUInt8)23u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29540;
    break;
  case (tUInt8)24u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29541;
    break;
  case (tUInt8)25u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29542;
    break;
  case (tUInt8)26u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29543;
    break;
  case (tUInt8)27u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29544;
    break;
  case (tUInt8)28u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29545;
    break;
  case (tUInt8)29u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29546;
    break;
  case (tUInt8)30u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29547;
    break;
  case (tUInt8)31u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29548;
    break;
  case (tUInt8)32u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29549;
    break;
  case (tUInt8)33u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29550;
    break;
  case (tUInt8)34u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29551;
    break;
  case (tUInt8)35u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29552;
    break;
  case (tUInt8)36u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29553;
    break;
  case (tUInt8)37u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29554;
    break;
  case (tUInt8)38u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29555;
    break;
  case (tUInt8)39u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29556;
    break;
  case (tUInt8)40u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29557;
    break;
  case (tUInt8)41u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29558;
    break;
  case (tUInt8)42u:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = DEF_b__h29559;
    break;
  default:
    DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 = 43690u;
  }
  DEF_sum_51_PLUS_SEL_ARR_samples_0_6_samples_1_7_sa_ETC___d157 = 65535u & (DEF_b__h33368 + ((tUInt32)(65535u & (DEF_SEL_ARR_samples_0_6_samples_1_7_samples_2_8_sa_ETC___d152 * DEF_SEL_ARR_186_233_248_217_134_0_65363_65172_6499_ETC___d154))));
  INST_conv_state_mkFSMstate.METH_write((tUInt8)7u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_sum.METH_write(DEF_sum_51_PLUS_SEL_ARR_samples_0_6_samples_1_7_sa_ETC___d157);
}

void MOD_mkFIRfilter::RL_conv_action_f_update_l32c9()
{
  tUInt8 DEF_n_7_PLUS_1___d160;
  DEF_x__h33436 = INST_n.METH_read();
  DEF_n_7_PLUS_1___d160 = (tUInt8)127u & (DEF_x__h33436 + (tUInt8)1u);
  INST_conv_state_mkFSMstate.METH_write((tUInt8)8u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_n.METH_write(DEF_n_7_PLUS_1___d160);
}

void MOD_mkFIRfilter::RL_conv_action_l36c12()
{
  DEF_b__h33368 = INST_sum.METH_read();
  INST_conv_state_mkFSMstate.METH_write((tUInt8)9u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_acc.METH_enq(DEF_b__h33368);
}

void MOD_mkFIRfilter::RL_conv_action_l37c13()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)10u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
  INST_sum.METH_write(0u);
}

void MOD_mkFIRfilter::RL_conv_idle_l25c20()
{
  INST_conv_state_mkFSMstate.METH_write((tUInt8)0u);
  INST_conv_state_fired_1.METH_wset((tUInt8)1u);
  INST_conv_state_set_pw.METH_wset();
}

void MOD_mkFIRfilter::RL_conv_fsm_start()
{
  INST_conv_start_wire.METH_wset((tUInt8)1u);
  INST_conv_start_reg_2.METH_wset((tUInt8)1u);
  INST_conv_start_reg.METH_write((tUInt8)0u);
}

void MOD_mkFIRfilter::RL_init()
{
  INST_conv_start_reg.METH_write((tUInt8)1u);
}

void MOD_mkFIRfilter::__me_check_5()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_init_l26c9 && ((((((((DEF_WILL_FIRE_RL_conv_action_l26c38 || DEF_WILL_FIRE_RL_conv_action_f_update_l26c9) || DEF_WILL_FIRE_RL_conv_action_l30c16) || DEF_WILL_FIRE_RL_conv_action_l31c18) || DEF_WILL_FIRE_RL_conv_action_f_init_l32c9) || DEF_WILL_FIRE_RL_conv_action_l33c17) || DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_1);
}

void MOD_mkFIRfilter::__me_check_6()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l26c38 && (((((((DEF_WILL_FIRE_RL_conv_action_f_update_l26c9 || DEF_WILL_FIRE_RL_conv_action_l30c16) || DEF_WILL_FIRE_RL_conv_action_l31c18) || DEF_WILL_FIRE_RL_conv_action_f_init_l32c9) || DEF_WILL_FIRE_RL_conv_action_l33c17) || DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_2);
}

void MOD_mkFIRfilter::__me_check_7()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_update_l26c9 && ((((((DEF_WILL_FIRE_RL_conv_action_l30c16 || DEF_WILL_FIRE_RL_conv_action_l31c18) || DEF_WILL_FIRE_RL_conv_action_f_init_l32c9) || DEF_WILL_FIRE_RL_conv_action_l33c17) || DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_3);
}

void MOD_mkFIRfilter::__me_check_8()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l30c16 && (((((DEF_WILL_FIRE_RL_conv_action_l31c18 || DEF_WILL_FIRE_RL_conv_action_f_init_l32c9) || DEF_WILL_FIRE_RL_conv_action_l33c17) || DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_4);
}

void MOD_mkFIRfilter::__me_check_9()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l31c18 && ((((DEF_WILL_FIRE_RL_conv_action_f_init_l32c9 || DEF_WILL_FIRE_RL_conv_action_l33c17) || DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_5);
}

void MOD_mkFIRfilter::__me_check_10()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_init_l32c9 && (((DEF_WILL_FIRE_RL_conv_action_l33c17 || DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_6);
}

void MOD_mkFIRfilter::__me_check_11()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l33c17 && ((DEF_WILL_FIRE_RL_conv_action_f_update_l32c9 || DEF_WILL_FIRE_RL_conv_action_l36c12) || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_7);
}

void MOD_mkFIRfilter::__me_check_12()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_f_update_l32c9 && (DEF_WILL_FIRE_RL_conv_action_l36c12 || DEF_WILL_FIRE_RL_conv_action_l37c13))
      dollar_error(sim_hdl, this, "s", &__str_literal_8);
}

void MOD_mkFIRfilter::__me_check_13()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_WILL_FIRE_RL_conv_action_l36c12 && DEF_WILL_FIRE_RL_conv_action_l37c13)
      dollar_error(sim_hdl, this, "s", &__str_literal_9);
}


/* Methods */

void MOD_mkFIRfilter::METH_add_sample(tUInt32 ARG_add_sample_sample)
{
  INST_newSample.METH_enq(ARG_add_sample_sample);
}

tUInt8 MOD_mkFIRfilter::METH_RDY_add_sample()
{
  tUInt8 DEF_CAN_FIRE_add_sample;
  tUInt8 PORT_RDY_add_sample;
  DEF_CAN_FIRE_add_sample = INST_newSample.METH_i_notFull();
  PORT_RDY_add_sample = DEF_CAN_FIRE_add_sample;
  return PORT_RDY_add_sample;
}

tUInt32 MOD_mkFIRfilter::METH_get_value()
{
  tUInt32 DEF_get_value__avValue1;
  tUInt32 PORT_get_value;
  DEF_get_value__avValue1 = INST_acc.METH_first();
  PORT_get_value = DEF_get_value__avValue1;
  INST_acc.METH_deq();
  return PORT_get_value;
}

tUInt8 MOD_mkFIRfilter::METH_RDY_get_value()
{
  tUInt8 DEF_CAN_FIRE_get_value;
  tUInt8 PORT_RDY_get_value;
  DEF_CAN_FIRE_get_value = INST_acc.METH_i_notEmpty();
  PORT_RDY_get_value = DEF_CAN_FIRE_get_value;
  return PORT_RDY_get_value;
}


/* Reset routines */

void MOD_mkFIRfilter::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_sum.reset_RST(ARG_rst_in);
  INST_samples_9.reset_RST(ARG_rst_in);
  INST_samples_8.reset_RST(ARG_rst_in);
  INST_samples_7.reset_RST(ARG_rst_in);
  INST_samples_6.reset_RST(ARG_rst_in);
  INST_samples_5.reset_RST(ARG_rst_in);
  INST_samples_42.reset_RST(ARG_rst_in);
  INST_samples_41.reset_RST(ARG_rst_in);
  INST_samples_40.reset_RST(ARG_rst_in);
  INST_samples_4.reset_RST(ARG_rst_in);
  INST_samples_39.reset_RST(ARG_rst_in);
  INST_samples_38.reset_RST(ARG_rst_in);
  INST_samples_37.reset_RST(ARG_rst_in);
  INST_samples_36.reset_RST(ARG_rst_in);
  INST_samples_35.reset_RST(ARG_rst_in);
  INST_samples_34.reset_RST(ARG_rst_in);
  INST_samples_33.reset_RST(ARG_rst_in);
  INST_samples_32.reset_RST(ARG_rst_in);
  INST_samples_31.reset_RST(ARG_rst_in);
  INST_samples_30.reset_RST(ARG_rst_in);
  INST_samples_3.reset_RST(ARG_rst_in);
  INST_samples_29.reset_RST(ARG_rst_in);
  INST_samples_28.reset_RST(ARG_rst_in);
  INST_samples_27.reset_RST(ARG_rst_in);
  INST_samples_26.reset_RST(ARG_rst_in);
  INST_samples_25.reset_RST(ARG_rst_in);
  INST_samples_24.reset_RST(ARG_rst_in);
  INST_samples_23.reset_RST(ARG_rst_in);
  INST_samples_22.reset_RST(ARG_rst_in);
  INST_samples_21.reset_RST(ARG_rst_in);
  INST_samples_20.reset_RST(ARG_rst_in);
  INST_samples_2.reset_RST(ARG_rst_in);
  INST_samples_19.reset_RST(ARG_rst_in);
  INST_samples_18.reset_RST(ARG_rst_in);
  INST_samples_17.reset_RST(ARG_rst_in);
  INST_samples_16.reset_RST(ARG_rst_in);
  INST_samples_15.reset_RST(ARG_rst_in);
  INST_samples_14.reset_RST(ARG_rst_in);
  INST_samples_13.reset_RST(ARG_rst_in);
  INST_samples_12.reset_RST(ARG_rst_in);
  INST_samples_11.reset_RST(ARG_rst_in);
  INST_samples_10.reset_RST(ARG_rst_in);
  INST_samples_1.reset_RST(ARG_rst_in);
  INST_samples_0.reset_RST(ARG_rst_in);
  INST_newSample.reset_RST(ARG_rst_in);
  INST_n.reset_RST(ARG_rst_in);
  INST_conv_state_mkFSMstate.reset_RST(ARG_rst_in);
  INST_conv_state_fired.reset_RST(ARG_rst_in);
  INST_conv_state_can_overlap.reset_RST(ARG_rst_in);
  INST_conv_start_reg_1.reset_RST(ARG_rst_in);
  INST_conv_start_reg.reset_RST(ARG_rst_in);
  INST_acc.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkFIRfilter::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkFIRfilter::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_acc.dump_state(indent + 2u);
  INST_conv_abort.dump_state(indent + 2u);
  INST_conv_start_reg.dump_state(indent + 2u);
  INST_conv_start_reg_1.dump_state(indent + 2u);
  INST_conv_start_reg_2.dump_state(indent + 2u);
  INST_conv_start_wire.dump_state(indent + 2u);
  INST_conv_state_can_overlap.dump_state(indent + 2u);
  INST_conv_state_fired.dump_state(indent + 2u);
  INST_conv_state_fired_1.dump_state(indent + 2u);
  INST_conv_state_mkFSMstate.dump_state(indent + 2u);
  INST_conv_state_overlap_pw.dump_state(indent + 2u);
  INST_conv_state_set_pw.dump_state(indent + 2u);
  INST_n.dump_state(indent + 2u);
  INST_newSample.dump_state(indent + 2u);
  INST_samples_0.dump_state(indent + 2u);
  INST_samples_1.dump_state(indent + 2u);
  INST_samples_10.dump_state(indent + 2u);
  INST_samples_11.dump_state(indent + 2u);
  INST_samples_12.dump_state(indent + 2u);
  INST_samples_13.dump_state(indent + 2u);
  INST_samples_14.dump_state(indent + 2u);
  INST_samples_15.dump_state(indent + 2u);
  INST_samples_16.dump_state(indent + 2u);
  INST_samples_17.dump_state(indent + 2u);
  INST_samples_18.dump_state(indent + 2u);
  INST_samples_19.dump_state(indent + 2u);
  INST_samples_2.dump_state(indent + 2u);
  INST_samples_20.dump_state(indent + 2u);
  INST_samples_21.dump_state(indent + 2u);
  INST_samples_22.dump_state(indent + 2u);
  INST_samples_23.dump_state(indent + 2u);
  INST_samples_24.dump_state(indent + 2u);
  INST_samples_25.dump_state(indent + 2u);
  INST_samples_26.dump_state(indent + 2u);
  INST_samples_27.dump_state(indent + 2u);
  INST_samples_28.dump_state(indent + 2u);
  INST_samples_29.dump_state(indent + 2u);
  INST_samples_3.dump_state(indent + 2u);
  INST_samples_30.dump_state(indent + 2u);
  INST_samples_31.dump_state(indent + 2u);
  INST_samples_32.dump_state(indent + 2u);
  INST_samples_33.dump_state(indent + 2u);
  INST_samples_34.dump_state(indent + 2u);
  INST_samples_35.dump_state(indent + 2u);
  INST_samples_36.dump_state(indent + 2u);
  INST_samples_37.dump_state(indent + 2u);
  INST_samples_38.dump_state(indent + 2u);
  INST_samples_39.dump_state(indent + 2u);
  INST_samples_4.dump_state(indent + 2u);
  INST_samples_40.dump_state(indent + 2u);
  INST_samples_41.dump_state(indent + 2u);
  INST_samples_42.dump_state(indent + 2u);
  INST_samples_5.dump_state(indent + 2u);
  INST_samples_6.dump_state(indent + 2u);
  INST_samples_7.dump_state(indent + 2u);
  INST_samples_8.dump_state(indent + 2u);
  INST_samples_9.dump_state(indent + 2u);
  INST_sum.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkFIRfilter::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 115u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_init_l26c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_init_l32c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_update_l26c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_f_update_l32c9", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l26c38", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l30c16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l31c18", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l33c17", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l36c12", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_conv_action_l37c13", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29517", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29518", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29519", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29520", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29521", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29522", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29523", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29524", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29525", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29526", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29527", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29528", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29529", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29530", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29531", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29532", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29533", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29534", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29535", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29536", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29537", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29538", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29539", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29540", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29541", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29542", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29543", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29544", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29545", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29546", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29547", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29548", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29549", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29550", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29551", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29552", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29553", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29554", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29555", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29556", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29557", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29558", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h29559", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h33368", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h29472", 7u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h33436", 7u);
  num = INST_acc.dump_VCD_defs(num);
  num = INST_conv_abort.dump_VCD_defs(num);
  num = INST_conv_start_reg.dump_VCD_defs(num);
  num = INST_conv_start_reg_1.dump_VCD_defs(num);
  num = INST_conv_start_reg_2.dump_VCD_defs(num);
  num = INST_conv_start_wire.dump_VCD_defs(num);
  num = INST_conv_state_can_overlap.dump_VCD_defs(num);
  num = INST_conv_state_fired.dump_VCD_defs(num);
  num = INST_conv_state_fired_1.dump_VCD_defs(num);
  num = INST_conv_state_mkFSMstate.dump_VCD_defs(num);
  num = INST_conv_state_overlap_pw.dump_VCD_defs(num);
  num = INST_conv_state_set_pw.dump_VCD_defs(num);
  num = INST_n.dump_VCD_defs(num);
  num = INST_newSample.dump_VCD_defs(num);
  num = INST_samples_0.dump_VCD_defs(num);
  num = INST_samples_1.dump_VCD_defs(num);
  num = INST_samples_10.dump_VCD_defs(num);
  num = INST_samples_11.dump_VCD_defs(num);
  num = INST_samples_12.dump_VCD_defs(num);
  num = INST_samples_13.dump_VCD_defs(num);
  num = INST_samples_14.dump_VCD_defs(num);
  num = INST_samples_15.dump_VCD_defs(num);
  num = INST_samples_16.dump_VCD_defs(num);
  num = INST_samples_17.dump_VCD_defs(num);
  num = INST_samples_18.dump_VCD_defs(num);
  num = INST_samples_19.dump_VCD_defs(num);
  num = INST_samples_2.dump_VCD_defs(num);
  num = INST_samples_20.dump_VCD_defs(num);
  num = INST_samples_21.dump_VCD_defs(num);
  num = INST_samples_22.dump_VCD_defs(num);
  num = INST_samples_23.dump_VCD_defs(num);
  num = INST_samples_24.dump_VCD_defs(num);
  num = INST_samples_25.dump_VCD_defs(num);
  num = INST_samples_26.dump_VCD_defs(num);
  num = INST_samples_27.dump_VCD_defs(num);
  num = INST_samples_28.dump_VCD_defs(num);
  num = INST_samples_29.dump_VCD_defs(num);
  num = INST_samples_3.dump_VCD_defs(num);
  num = INST_samples_30.dump_VCD_defs(num);
  num = INST_samples_31.dump_VCD_defs(num);
  num = INST_samples_32.dump_VCD_defs(num);
  num = INST_samples_33.dump_VCD_defs(num);
  num = INST_samples_34.dump_VCD_defs(num);
  num = INST_samples_35.dump_VCD_defs(num);
  num = INST_samples_36.dump_VCD_defs(num);
  num = INST_samples_37.dump_VCD_defs(num);
  num = INST_samples_38.dump_VCD_defs(num);
  num = INST_samples_39.dump_VCD_defs(num);
  num = INST_samples_4.dump_VCD_defs(num);
  num = INST_samples_40.dump_VCD_defs(num);
  num = INST_samples_41.dump_VCD_defs(num);
  num = INST_samples_42.dump_VCD_defs(num);
  num = INST_samples_5.dump_VCD_defs(num);
  num = INST_samples_6.dump_VCD_defs(num);
  num = INST_samples_7.dump_VCD_defs(num);
  num = INST_samples_8.dump_VCD_defs(num);
  num = INST_samples_9.dump_VCD_defs(num);
  num = INST_sum.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkFIRfilter::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkFIRfilter &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkFIRfilter::vcd_defs(tVCDDumpType dt, MOD_mkFIRfilter &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 7u);
    vcd_write_x(sim_hdl, num++, 7u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_init_l26c9) != DEF_WILL_FIRE_RL_conv_action_f_init_l26c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_init_l26c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_init_l26c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l26c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_init_l32c9) != DEF_WILL_FIRE_RL_conv_action_f_init_l32c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_init_l32c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_init_l32c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l32c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_update_l26c9) != DEF_WILL_FIRE_RL_conv_action_f_update_l26c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_update_l26c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_update_l26c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l26c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_f_update_l32c9) != DEF_WILL_FIRE_RL_conv_action_f_update_l32c9)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_f_update_l32c9, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_f_update_l32c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l32c9;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l26c38) != DEF_WILL_FIRE_RL_conv_action_l26c38)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l26c38, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l26c38 = DEF_WILL_FIRE_RL_conv_action_l26c38;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l30c16) != DEF_WILL_FIRE_RL_conv_action_l30c16)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l30c16, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l30c16 = DEF_WILL_FIRE_RL_conv_action_l30c16;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l31c18) != DEF_WILL_FIRE_RL_conv_action_l31c18)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l31c18, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l31c18 = DEF_WILL_FIRE_RL_conv_action_l31c18;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l33c17) != DEF_WILL_FIRE_RL_conv_action_l33c17)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l33c17, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l33c17 = DEF_WILL_FIRE_RL_conv_action_l33c17;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l36c12) != DEF_WILL_FIRE_RL_conv_action_l36c12)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l36c12, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l36c12 = DEF_WILL_FIRE_RL_conv_action_l36c12;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_conv_action_l37c13) != DEF_WILL_FIRE_RL_conv_action_l37c13)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_conv_action_l37c13, 1u);
	backing.DEF_WILL_FIRE_RL_conv_action_l37c13 = DEF_WILL_FIRE_RL_conv_action_l37c13;
      }
      ++num;
      if ((backing.DEF_b__h29517) != DEF_b__h29517)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29517, 16u);
	backing.DEF_b__h29517 = DEF_b__h29517;
      }
      ++num;
      if ((backing.DEF_b__h29518) != DEF_b__h29518)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29518, 16u);
	backing.DEF_b__h29518 = DEF_b__h29518;
      }
      ++num;
      if ((backing.DEF_b__h29519) != DEF_b__h29519)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29519, 16u);
	backing.DEF_b__h29519 = DEF_b__h29519;
      }
      ++num;
      if ((backing.DEF_b__h29520) != DEF_b__h29520)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29520, 16u);
	backing.DEF_b__h29520 = DEF_b__h29520;
      }
      ++num;
      if ((backing.DEF_b__h29521) != DEF_b__h29521)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29521, 16u);
	backing.DEF_b__h29521 = DEF_b__h29521;
      }
      ++num;
      if ((backing.DEF_b__h29522) != DEF_b__h29522)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29522, 16u);
	backing.DEF_b__h29522 = DEF_b__h29522;
      }
      ++num;
      if ((backing.DEF_b__h29523) != DEF_b__h29523)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29523, 16u);
	backing.DEF_b__h29523 = DEF_b__h29523;
      }
      ++num;
      if ((backing.DEF_b__h29524) != DEF_b__h29524)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29524, 16u);
	backing.DEF_b__h29524 = DEF_b__h29524;
      }
      ++num;
      if ((backing.DEF_b__h29525) != DEF_b__h29525)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29525, 16u);
	backing.DEF_b__h29525 = DEF_b__h29525;
      }
      ++num;
      if ((backing.DEF_b__h29526) != DEF_b__h29526)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29526, 16u);
	backing.DEF_b__h29526 = DEF_b__h29526;
      }
      ++num;
      if ((backing.DEF_b__h29527) != DEF_b__h29527)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29527, 16u);
	backing.DEF_b__h29527 = DEF_b__h29527;
      }
      ++num;
      if ((backing.DEF_b__h29528) != DEF_b__h29528)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29528, 16u);
	backing.DEF_b__h29528 = DEF_b__h29528;
      }
      ++num;
      if ((backing.DEF_b__h29529) != DEF_b__h29529)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29529, 16u);
	backing.DEF_b__h29529 = DEF_b__h29529;
      }
      ++num;
      if ((backing.DEF_b__h29530) != DEF_b__h29530)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29530, 16u);
	backing.DEF_b__h29530 = DEF_b__h29530;
      }
      ++num;
      if ((backing.DEF_b__h29531) != DEF_b__h29531)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29531, 16u);
	backing.DEF_b__h29531 = DEF_b__h29531;
      }
      ++num;
      if ((backing.DEF_b__h29532) != DEF_b__h29532)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29532, 16u);
	backing.DEF_b__h29532 = DEF_b__h29532;
      }
      ++num;
      if ((backing.DEF_b__h29533) != DEF_b__h29533)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29533, 16u);
	backing.DEF_b__h29533 = DEF_b__h29533;
      }
      ++num;
      if ((backing.DEF_b__h29534) != DEF_b__h29534)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29534, 16u);
	backing.DEF_b__h29534 = DEF_b__h29534;
      }
      ++num;
      if ((backing.DEF_b__h29535) != DEF_b__h29535)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29535, 16u);
	backing.DEF_b__h29535 = DEF_b__h29535;
      }
      ++num;
      if ((backing.DEF_b__h29536) != DEF_b__h29536)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29536, 16u);
	backing.DEF_b__h29536 = DEF_b__h29536;
      }
      ++num;
      if ((backing.DEF_b__h29537) != DEF_b__h29537)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29537, 16u);
	backing.DEF_b__h29537 = DEF_b__h29537;
      }
      ++num;
      if ((backing.DEF_b__h29538) != DEF_b__h29538)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29538, 16u);
	backing.DEF_b__h29538 = DEF_b__h29538;
      }
      ++num;
      if ((backing.DEF_b__h29539) != DEF_b__h29539)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29539, 16u);
	backing.DEF_b__h29539 = DEF_b__h29539;
      }
      ++num;
      if ((backing.DEF_b__h29540) != DEF_b__h29540)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29540, 16u);
	backing.DEF_b__h29540 = DEF_b__h29540;
      }
      ++num;
      if ((backing.DEF_b__h29541) != DEF_b__h29541)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29541, 16u);
	backing.DEF_b__h29541 = DEF_b__h29541;
      }
      ++num;
      if ((backing.DEF_b__h29542) != DEF_b__h29542)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29542, 16u);
	backing.DEF_b__h29542 = DEF_b__h29542;
      }
      ++num;
      if ((backing.DEF_b__h29543) != DEF_b__h29543)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29543, 16u);
	backing.DEF_b__h29543 = DEF_b__h29543;
      }
      ++num;
      if ((backing.DEF_b__h29544) != DEF_b__h29544)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29544, 16u);
	backing.DEF_b__h29544 = DEF_b__h29544;
      }
      ++num;
      if ((backing.DEF_b__h29545) != DEF_b__h29545)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29545, 16u);
	backing.DEF_b__h29545 = DEF_b__h29545;
      }
      ++num;
      if ((backing.DEF_b__h29546) != DEF_b__h29546)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29546, 16u);
	backing.DEF_b__h29546 = DEF_b__h29546;
      }
      ++num;
      if ((backing.DEF_b__h29547) != DEF_b__h29547)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29547, 16u);
	backing.DEF_b__h29547 = DEF_b__h29547;
      }
      ++num;
      if ((backing.DEF_b__h29548) != DEF_b__h29548)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29548, 16u);
	backing.DEF_b__h29548 = DEF_b__h29548;
      }
      ++num;
      if ((backing.DEF_b__h29549) != DEF_b__h29549)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29549, 16u);
	backing.DEF_b__h29549 = DEF_b__h29549;
      }
      ++num;
      if ((backing.DEF_b__h29550) != DEF_b__h29550)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29550, 16u);
	backing.DEF_b__h29550 = DEF_b__h29550;
      }
      ++num;
      if ((backing.DEF_b__h29551) != DEF_b__h29551)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29551, 16u);
	backing.DEF_b__h29551 = DEF_b__h29551;
      }
      ++num;
      if ((backing.DEF_b__h29552) != DEF_b__h29552)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29552, 16u);
	backing.DEF_b__h29552 = DEF_b__h29552;
      }
      ++num;
      if ((backing.DEF_b__h29553) != DEF_b__h29553)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29553, 16u);
	backing.DEF_b__h29553 = DEF_b__h29553;
      }
      ++num;
      if ((backing.DEF_b__h29554) != DEF_b__h29554)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29554, 16u);
	backing.DEF_b__h29554 = DEF_b__h29554;
      }
      ++num;
      if ((backing.DEF_b__h29555) != DEF_b__h29555)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29555, 16u);
	backing.DEF_b__h29555 = DEF_b__h29555;
      }
      ++num;
      if ((backing.DEF_b__h29556) != DEF_b__h29556)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29556, 16u);
	backing.DEF_b__h29556 = DEF_b__h29556;
      }
      ++num;
      if ((backing.DEF_b__h29557) != DEF_b__h29557)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29557, 16u);
	backing.DEF_b__h29557 = DEF_b__h29557;
      }
      ++num;
      if ((backing.DEF_b__h29558) != DEF_b__h29558)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29558, 16u);
	backing.DEF_b__h29558 = DEF_b__h29558;
      }
      ++num;
      if ((backing.DEF_b__h29559) != DEF_b__h29559)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h29559, 16u);
	backing.DEF_b__h29559 = DEF_b__h29559;
      }
      ++num;
      if ((backing.DEF_b__h33368) != DEF_b__h33368)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h33368, 16u);
	backing.DEF_b__h33368 = DEF_b__h33368;
      }
      ++num;
      if ((backing.DEF_x__h29472) != DEF_x__h29472)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h29472, 7u);
	backing.DEF_x__h29472 = DEF_x__h29472;
      }
      ++num;
      if ((backing.DEF_x__h33436) != DEF_x__h33436)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h33436, 7u);
	backing.DEF_x__h33436 = DEF_x__h33436;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_init_l26c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_init_l26c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l26c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_init_l32c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_init_l32c9 = DEF_WILL_FIRE_RL_conv_action_f_init_l32c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_update_l26c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_update_l26c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l26c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_f_update_l32c9, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_f_update_l32c9 = DEF_WILL_FIRE_RL_conv_action_f_update_l32c9;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l26c38, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l26c38 = DEF_WILL_FIRE_RL_conv_action_l26c38;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l30c16, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l30c16 = DEF_WILL_FIRE_RL_conv_action_l30c16;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l31c18, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l31c18 = DEF_WILL_FIRE_RL_conv_action_l31c18;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l33c17, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l33c17 = DEF_WILL_FIRE_RL_conv_action_l33c17;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l36c12, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l36c12 = DEF_WILL_FIRE_RL_conv_action_l36c12;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_conv_action_l37c13, 1u);
      backing.DEF_WILL_FIRE_RL_conv_action_l37c13 = DEF_WILL_FIRE_RL_conv_action_l37c13;
      vcd_write_val(sim_hdl, num++, DEF_b__h29517, 16u);
      backing.DEF_b__h29517 = DEF_b__h29517;
      vcd_write_val(sim_hdl, num++, DEF_b__h29518, 16u);
      backing.DEF_b__h29518 = DEF_b__h29518;
      vcd_write_val(sim_hdl, num++, DEF_b__h29519, 16u);
      backing.DEF_b__h29519 = DEF_b__h29519;
      vcd_write_val(sim_hdl, num++, DEF_b__h29520, 16u);
      backing.DEF_b__h29520 = DEF_b__h29520;
      vcd_write_val(sim_hdl, num++, DEF_b__h29521, 16u);
      backing.DEF_b__h29521 = DEF_b__h29521;
      vcd_write_val(sim_hdl, num++, DEF_b__h29522, 16u);
      backing.DEF_b__h29522 = DEF_b__h29522;
      vcd_write_val(sim_hdl, num++, DEF_b__h29523, 16u);
      backing.DEF_b__h29523 = DEF_b__h29523;
      vcd_write_val(sim_hdl, num++, DEF_b__h29524, 16u);
      backing.DEF_b__h29524 = DEF_b__h29524;
      vcd_write_val(sim_hdl, num++, DEF_b__h29525, 16u);
      backing.DEF_b__h29525 = DEF_b__h29525;
      vcd_write_val(sim_hdl, num++, DEF_b__h29526, 16u);
      backing.DEF_b__h29526 = DEF_b__h29526;
      vcd_write_val(sim_hdl, num++, DEF_b__h29527, 16u);
      backing.DEF_b__h29527 = DEF_b__h29527;
      vcd_write_val(sim_hdl, num++, DEF_b__h29528, 16u);
      backing.DEF_b__h29528 = DEF_b__h29528;
      vcd_write_val(sim_hdl, num++, DEF_b__h29529, 16u);
      backing.DEF_b__h29529 = DEF_b__h29529;
      vcd_write_val(sim_hdl, num++, DEF_b__h29530, 16u);
      backing.DEF_b__h29530 = DEF_b__h29530;
      vcd_write_val(sim_hdl, num++, DEF_b__h29531, 16u);
      backing.DEF_b__h29531 = DEF_b__h29531;
      vcd_write_val(sim_hdl, num++, DEF_b__h29532, 16u);
      backing.DEF_b__h29532 = DEF_b__h29532;
      vcd_write_val(sim_hdl, num++, DEF_b__h29533, 16u);
      backing.DEF_b__h29533 = DEF_b__h29533;
      vcd_write_val(sim_hdl, num++, DEF_b__h29534, 16u);
      backing.DEF_b__h29534 = DEF_b__h29534;
      vcd_write_val(sim_hdl, num++, DEF_b__h29535, 16u);
      backing.DEF_b__h29535 = DEF_b__h29535;
      vcd_write_val(sim_hdl, num++, DEF_b__h29536, 16u);
      backing.DEF_b__h29536 = DEF_b__h29536;
      vcd_write_val(sim_hdl, num++, DEF_b__h29537, 16u);
      backing.DEF_b__h29537 = DEF_b__h29537;
      vcd_write_val(sim_hdl, num++, DEF_b__h29538, 16u);
      backing.DEF_b__h29538 = DEF_b__h29538;
      vcd_write_val(sim_hdl, num++, DEF_b__h29539, 16u);
      backing.DEF_b__h29539 = DEF_b__h29539;
      vcd_write_val(sim_hdl, num++, DEF_b__h29540, 16u);
      backing.DEF_b__h29540 = DEF_b__h29540;
      vcd_write_val(sim_hdl, num++, DEF_b__h29541, 16u);
      backing.DEF_b__h29541 = DEF_b__h29541;
      vcd_write_val(sim_hdl, num++, DEF_b__h29542, 16u);
      backing.DEF_b__h29542 = DEF_b__h29542;
      vcd_write_val(sim_hdl, num++, DEF_b__h29543, 16u);
      backing.DEF_b__h29543 = DEF_b__h29543;
      vcd_write_val(sim_hdl, num++, DEF_b__h29544, 16u);
      backing.DEF_b__h29544 = DEF_b__h29544;
      vcd_write_val(sim_hdl, num++, DEF_b__h29545, 16u);
      backing.DEF_b__h29545 = DEF_b__h29545;
      vcd_write_val(sim_hdl, num++, DEF_b__h29546, 16u);
      backing.DEF_b__h29546 = DEF_b__h29546;
      vcd_write_val(sim_hdl, num++, DEF_b__h29547, 16u);
      backing.DEF_b__h29547 = DEF_b__h29547;
      vcd_write_val(sim_hdl, num++, DEF_b__h29548, 16u);
      backing.DEF_b__h29548 = DEF_b__h29548;
      vcd_write_val(sim_hdl, num++, DEF_b__h29549, 16u);
      backing.DEF_b__h29549 = DEF_b__h29549;
      vcd_write_val(sim_hdl, num++, DEF_b__h29550, 16u);
      backing.DEF_b__h29550 = DEF_b__h29550;
      vcd_write_val(sim_hdl, num++, DEF_b__h29551, 16u);
      backing.DEF_b__h29551 = DEF_b__h29551;
      vcd_write_val(sim_hdl, num++, DEF_b__h29552, 16u);
      backing.DEF_b__h29552 = DEF_b__h29552;
      vcd_write_val(sim_hdl, num++, DEF_b__h29553, 16u);
      backing.DEF_b__h29553 = DEF_b__h29553;
      vcd_write_val(sim_hdl, num++, DEF_b__h29554, 16u);
      backing.DEF_b__h29554 = DEF_b__h29554;
      vcd_write_val(sim_hdl, num++, DEF_b__h29555, 16u);
      backing.DEF_b__h29555 = DEF_b__h29555;
      vcd_write_val(sim_hdl, num++, DEF_b__h29556, 16u);
      backing.DEF_b__h29556 = DEF_b__h29556;
      vcd_write_val(sim_hdl, num++, DEF_b__h29557, 16u);
      backing.DEF_b__h29557 = DEF_b__h29557;
      vcd_write_val(sim_hdl, num++, DEF_b__h29558, 16u);
      backing.DEF_b__h29558 = DEF_b__h29558;
      vcd_write_val(sim_hdl, num++, DEF_b__h29559, 16u);
      backing.DEF_b__h29559 = DEF_b__h29559;
      vcd_write_val(sim_hdl, num++, DEF_b__h33368, 16u);
      backing.DEF_b__h33368 = DEF_b__h33368;
      vcd_write_val(sim_hdl, num++, DEF_x__h29472, 7u);
      backing.DEF_x__h29472 = DEF_x__h29472;
      vcd_write_val(sim_hdl, num++, DEF_x__h33436, 7u);
      backing.DEF_x__h33436 = DEF_x__h33436;
    }
}

void MOD_mkFIRfilter::vcd_prims(tVCDDumpType dt, MOD_mkFIRfilter &backing)
{
  INST_acc.dump_VCD(dt, backing.INST_acc);
  INST_conv_abort.dump_VCD(dt, backing.INST_conv_abort);
  INST_conv_start_reg.dump_VCD(dt, backing.INST_conv_start_reg);
  INST_conv_start_reg_1.dump_VCD(dt, backing.INST_conv_start_reg_1);
  INST_conv_start_reg_2.dump_VCD(dt, backing.INST_conv_start_reg_2);
  INST_conv_start_wire.dump_VCD(dt, backing.INST_conv_start_wire);
  INST_conv_state_can_overlap.dump_VCD(dt, backing.INST_conv_state_can_overlap);
  INST_conv_state_fired.dump_VCD(dt, backing.INST_conv_state_fired);
  INST_conv_state_fired_1.dump_VCD(dt, backing.INST_conv_state_fired_1);
  INST_conv_state_mkFSMstate.dump_VCD(dt, backing.INST_conv_state_mkFSMstate);
  INST_conv_state_overlap_pw.dump_VCD(dt, backing.INST_conv_state_overlap_pw);
  INST_conv_state_set_pw.dump_VCD(dt, backing.INST_conv_state_set_pw);
  INST_n.dump_VCD(dt, backing.INST_n);
  INST_newSample.dump_VCD(dt, backing.INST_newSample);
  INST_samples_0.dump_VCD(dt, backing.INST_samples_0);
  INST_samples_1.dump_VCD(dt, backing.INST_samples_1);
  INST_samples_10.dump_VCD(dt, backing.INST_samples_10);
  INST_samples_11.dump_VCD(dt, backing.INST_samples_11);
  INST_samples_12.dump_VCD(dt, backing.INST_samples_12);
  INST_samples_13.dump_VCD(dt, backing.INST_samples_13);
  INST_samples_14.dump_VCD(dt, backing.INST_samples_14);
  INST_samples_15.dump_VCD(dt, backing.INST_samples_15);
  INST_samples_16.dump_VCD(dt, backing.INST_samples_16);
  INST_samples_17.dump_VCD(dt, backing.INST_samples_17);
  INST_samples_18.dump_VCD(dt, backing.INST_samples_18);
  INST_samples_19.dump_VCD(dt, backing.INST_samples_19);
  INST_samples_2.dump_VCD(dt, backing.INST_samples_2);
  INST_samples_20.dump_VCD(dt, backing.INST_samples_20);
  INST_samples_21.dump_VCD(dt, backing.INST_samples_21);
  INST_samples_22.dump_VCD(dt, backing.INST_samples_22);
  INST_samples_23.dump_VCD(dt, backing.INST_samples_23);
  INST_samples_24.dump_VCD(dt, backing.INST_samples_24);
  INST_samples_25.dump_VCD(dt, backing.INST_samples_25);
  INST_samples_26.dump_VCD(dt, backing.INST_samples_26);
  INST_samples_27.dump_VCD(dt, backing.INST_samples_27);
  INST_samples_28.dump_VCD(dt, backing.INST_samples_28);
  INST_samples_29.dump_VCD(dt, backing.INST_samples_29);
  INST_samples_3.dump_VCD(dt, backing.INST_samples_3);
  INST_samples_30.dump_VCD(dt, backing.INST_samples_30);
  INST_samples_31.dump_VCD(dt, backing.INST_samples_31);
  INST_samples_32.dump_VCD(dt, backing.INST_samples_32);
  INST_samples_33.dump_VCD(dt, backing.INST_samples_33);
  INST_samples_34.dump_VCD(dt, backing.INST_samples_34);
  INST_samples_35.dump_VCD(dt, backing.INST_samples_35);
  INST_samples_36.dump_VCD(dt, backing.INST_samples_36);
  INST_samples_37.dump_VCD(dt, backing.INST_samples_37);
  INST_samples_38.dump_VCD(dt, backing.INST_samples_38);
  INST_samples_39.dump_VCD(dt, backing.INST_samples_39);
  INST_samples_4.dump_VCD(dt, backing.INST_samples_4);
  INST_samples_40.dump_VCD(dt, backing.INST_samples_40);
  INST_samples_41.dump_VCD(dt, backing.INST_samples_41);
  INST_samples_42.dump_VCD(dt, backing.INST_samples_42);
  INST_samples_5.dump_VCD(dt, backing.INST_samples_5);
  INST_samples_6.dump_VCD(dt, backing.INST_samples_6);
  INST_samples_7.dump_VCD(dt, backing.INST_samples_7);
  INST_samples_8.dump_VCD(dt, backing.INST_samples_8);
  INST_samples_9.dump_VCD(dt, backing.INST_samples_9);
  INST_sum.dump_VCD(dt, backing.INST_sum);
}
